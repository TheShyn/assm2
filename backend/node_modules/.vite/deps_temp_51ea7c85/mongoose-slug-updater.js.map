{
  "version": 3,
  "sources": ["../../deepdash/private/getMixOrPatchIn.js", "../../deepdash/getCondense.js", "../../deepdash/addCondense.js", "../../deepdash/getPathToString.js", "../../deepdash/private/isObject.js", "../../deepdash/private/getIterate.js", "../../deepdash/getEachDeep.js", "../../deepdash/getCondenseDeep.js", "../../deepdash/addCondenseDeep.js", "../../deepdash/addEachDeep.js", "../../deepdash/getExists.js", "../../deepdash/addExists.js", "../../deepdash/getFilterDeep.js", "../../deepdash/addFilterDeep.js", "../../deepdash/getFindDeep.js", "../../deepdash/addFindDeep.js", "../../deepdash/getFindPathDeep.js", "../../deepdash/addFindPathDeep.js", "../../deepdash/getFindValueDeep.js", "../../deepdash/addFindValueDeep.js", "../../deepdash/getForEachDeep.js", "../../deepdash/addForEachDeep.js", "../../deepdash/getIndex.js", "../../deepdash/addIndex.js", "../../deepdash/getPaths.js", "../../deepdash/getKeysDeep.js", "../../deepdash/addKeysDeep.js", "../../deepdash/getReduceDeep.js", "../../deepdash/getMapDeep.js", "../../deepdash/addMapDeep.js", "../../deepdash/getMapKeysDeep.js", "../../deepdash/addMapKeysDeep.js", "../../deepdash/getMapValuesDeep.js", "../../deepdash/addMapValuesDeep.js", "../../deepdash/getPathMatches.js", "../../deepdash/getOmitDeep.js", "../../deepdash/addOmitDeep.js", "../../deepdash/addPathMatches.js", "../../deepdash/addPathToString.js", "../../deepdash/addPaths.js", "../../deepdash/getPickDeep.js", "../../deepdash/addPickDeep.js", "../../deepdash/addReduceDeep.js", "../../deepdash/getSomeDeep.js", "../../deepdash/addSomeDeep.js", "../../deepdash/deepdash.js", "../../speakingurl/lib/speakingurl.js", "../../speakingurl/index.js", "../../shortid/lib/random/random-from-seed.js", "../../shortid/lib/alphabet.js", "../../shortid/lib/random/random-byte-browser.js", "../../shortid/node_modules/nanoid/format.browser.js", "../../shortid/lib/generate.js", "../../shortid/lib/build.js", "../../shortid/lib/is-valid.js", "../../shortid/lib/util/cluster-worker-id-browser.js", "../../shortid/lib/index.js", "../../shortid/index.js", "../../mongoose-slug-updater/lib/slug-generator.js", "../../mongoose-slug-updater/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\nfunction getMixOrPatchIn(_) {\r\n  function mixOrPatchIn(name, method, chain) {\r\n    if (!_[name]) {\r\n      if (_.mixin) {\r\n        var patch = {};\r\n        patch[name] = method;\r\n        _.mixin(patch, { chain: chain });\r\n      } else {\r\n        _[name] = method;\r\n      }\r\n    }\r\n    return _;\r\n  }\r\n  return mixOrPatchIn;\r\n}\r\n\r\nmodule.exports = getMixOrPatchIn;\r\n", "'use strict';\r\n\r\nfunction getCondense(_) {\r\n  function condense(arr) {\r\n    var indexes = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (!(i in arr)) {\r\n        indexes.push(i);\r\n      }\r\n    }\r\n    var length = indexes.length;\r\n\r\n    while (length--) {\r\n      arr.splice(indexes[length], 1);\r\n    }\r\n    return arr;\r\n  }\r\n  return condense;\r\n}\r\n\r\nmodule.exports = getCondense;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getCondense = require('./getCondense.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addCondense(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('condense', getCondense(), !getCondense.notChainable);\r\n}\r\n\r\nmodule.exports = addCondense;\r\n", "'use strict';\r\n\r\nvar rxArrIndex = /\\D/;\r\nvar rxVarName = /^[a-zA-Z_$]+([\\w_$]*)$/;\r\nvar rxQuot = /\"/g;\r\n\r\nfunction joinPaths() {\r\n  var paths = [], len = arguments.length;\r\n  while ( len-- ) paths[ len ] = arguments[ len ];\r\n\r\n  return paths.reduce(\r\n    function (acc, p) { return acc ? (!p || p.startsWith('[') ? (\"\" + acc + p) : (acc + \".\" + p)) : p; },\r\n    ''\r\n  );\r\n}\r\n\r\nfunction getPathToString(_) {\r\n  function pathToString(path) {\r\n    var prefixes = [], len = arguments.length - 1;\r\n    while ( len-- > 0 ) prefixes[ len ] = arguments[ len + 1 ];\r\n\r\n    prefixes = prefixes.filter(function (p) { return p !== undefined; });\r\n    if (_.isString(path)) { return joinPaths.apply(void 0, prefixes.concat( [path] )); }\r\n    if (!Array.isArray(path)) { return undefined; }\r\n    prefixes = joinPaths.apply(void 0, prefixes);\r\n    return path.reduce(function (acc, value) {\r\n      var type = typeof value;\r\n      if (type === 'number') {\r\n        if (value < 0 || value % 1 !== 0) {\r\n          return (acc + \"[\\\"\" + value + \"\\\"]\");\r\n        } else {\r\n          return (acc + \"[\" + value + \"]\");\r\n        }\r\n      } else if (type !== 'string') {\r\n        return (acc + \"[\\\"\" + value + \"\\\"]\");\r\n      } else if (!value) {\r\n        return (acc + \"[\\\"\\\"]\");\r\n      }\r\n      if (!rxArrIndex.test(value)) {\r\n        return (acc + \"[\" + value + \"]\");\r\n      }\r\n      if (rxVarName.test(value)) {\r\n        if (acc) {\r\n          return (acc + \".\" + value);\r\n        } else {\r\n          return (\"\" + acc + value);\r\n        }\r\n      }\r\n      return (acc + \"[\\\"\" + (value.replace(rxQuot, '\\\\\"')) + \"\\\"]\");\r\n    }, prefixes);\r\n  }\r\n  return pathToString;\r\n}\r\n\r\ngetPathToString.notChainable = true;\r\n\r\nmodule.exports = getPathToString;\r\n", "'use strict';\r\n\r\nfunction isObject(value) {\r\n  var type = typeof value;\r\n  return value != null && (type == 'object' || type == 'function');\r\n}\r\n\r\nmodule.exports = isObject;\r\n", "'use strict';\r\n\r\nvar getPathToString = require('../getPathToString.js');\r\nvar isObject = require('./isObject.js');\r\n\r\nvar rxVarName = /^[a-zA-Z_$]+([\\w_$]*)$/;\r\nvar rxQuot = /\"/g;\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nfunction getIterate(_) {\r\n  var pathToString = getPathToString(_);\r\n\r\n  function iterate(item) {\r\n    var options = item.options;\r\n    var obj = item.obj;\r\n    var callback = item.callback;\r\n    options.pathFormatArray = options.pathFormat == 'array';\r\n    item.depth = 0;\r\n\r\n    var broken = false;\r\n    var breakIt = function () {\r\n      broken = true;\r\n      return false;\r\n    };\r\n\r\n    while (item) {\r\n      if (broken) { break; }\r\n      if (!item.inited) {\r\n        item.inited = true;\r\n        item.info = describeValue(item.value, options.ownPropertiesOnly);\r\n\r\n        if (options.checkCircular) {\r\n          item.circularParentIndex = -1;\r\n          item.circularParent = null;\r\n          item.isCircular = false;\r\n          if (item.info.isObject && !item.info.isEmpty) {\r\n            var parent = item.parent;\r\n            while (parent) {\r\n              if (parent.value === item.value) {\r\n                item.isCircular = true;\r\n                item.circularParent = parent;\r\n                item.circularParentIndex = item.depth - parent.depth - 1;\r\n                break;\r\n              }\r\n              parent = parent.parent;\r\n            }\r\n          }\r\n        }\r\n\r\n        item.children = [];\r\n        if (options.childrenPath) {\r\n          options.childrenPath.forEach(function (cp, i) {\r\n            var children = _.get(item.value, cp);\r\n            var info = describeValue(children, options.ownPropertiesOnly);\r\n            if (!info.isEmpty) {\r\n              item.children.push([\r\n                cp,\r\n                options.strChildrenPath[i],\r\n                children,\r\n                info ]);\r\n            }\r\n          });\r\n        }\r\n\r\n        item.isLeaf =\r\n          item.isCircular ||\r\n          (options.childrenPath !== undefined && !item.children.length) ||\r\n          !item.info.isObject ||\r\n          item.info.isEmpty;\r\n\r\n        item.needCallback =\r\n          (item.depth || options.includeRoot) &&\r\n          (!options.leavesOnly || item.isLeaf);\r\n\r\n        if (item.needCallback) {\r\n          var contextReader = new ContextReader(obj, options, breakIt);\r\n          contextReader.setItem(item, false);\r\n          try {\r\n            item.res = callback(\r\n              item.value,\r\n              item.key,\r\n              item.parent && item.parent.value,\r\n              contextReader\r\n            );\r\n          } catch (err) {\r\n            if (err.message) {\r\n              err.message +=\r\n                '\\ncallback failed before deep iterate at:\\n' +\r\n                pathToString(item.path);\r\n            }\r\n\r\n            throw err;\r\n          }\r\n        }\r\n\r\n        if (broken) {\r\n          break;\r\n        }\r\n\r\n        if (item.res !== false) {\r\n          if (!broken && !item.isCircular && item.info.isObject) {\r\n            if (\r\n              options.childrenPath !== undefined &&\r\n              (item.depth || !options.rootIsChildren)\r\n            ) {\r\n              item.childrenItems = [];\r\n              if (item.children.length) {\r\n                item.children.forEach(function (ref) {\r\n                  var cp = ref[0];\r\n                  var scp = ref[1];\r\n                  var children = ref[2];\r\n                  var info = ref[3];\r\n\r\n                  item.childrenItems = ( item.childrenItems ).concat( (info.isArray\r\n                      ? getElements(item, children, options, cp, scp)\r\n                      : getOwnChildren(item, children, options, cp, scp)) );\r\n                });\r\n              }\r\n            } else {\r\n              item.childrenItems = item.info.isArray\r\n                ? getElements(item, item.value, options, [], '')\r\n                : getOwnChildren(item, item.value, options, [], '');\r\n            }\r\n          }\r\n        }\r\n\r\n        item.currentChildIndex = -1;\r\n      }\r\n      if (\r\n        item.childrenItems &&\r\n        item.currentChildIndex < item.childrenItems.length - 1\r\n      ) {\r\n        item.currentChildIndex++;\r\n        item.childrenItems[item.currentChildIndex].parentItem = item;\r\n        item = item.childrenItems[item.currentChildIndex];\r\n        continue;\r\n      }\r\n\r\n      if (item.needCallback && options.callbackAfterIterate) {\r\n        var contextReader$1 = new ContextReader(obj, options, breakIt);\r\n        contextReader$1.setItem(item, true);\r\n\r\n        try {\r\n          callback(\r\n            item.value,\r\n            item.key,\r\n            item.parent && item.parent.value,\r\n            contextReader$1\r\n          );\r\n        } catch (err) {\r\n          if (err.message) {\r\n            err.message +=\r\n              '\\ncallback failed after deep iterate at:\\n' +\r\n              pathToString(item.path);\r\n          }\r\n\r\n          throw err;\r\n        }\r\n      }\r\n      item = item.parentItem;\r\n    }\r\n  }\r\n\r\n  return iterate;\r\n\r\n  function getElements(item, children, options, childrenPath, strChildrenPath) {\r\n    var strChildPathPrefix;\r\n    if (!options.pathFormatArray) {\r\n      strChildPathPrefix = item.strPath || '';\r\n\r\n      if (\r\n        strChildrenPath &&\r\n        strChildPathPrefix &&\r\n        !strChildrenPath.startsWith('[')\r\n      ) {\r\n        strChildPathPrefix += '.';\r\n      }\r\n      strChildPathPrefix += strChildrenPath || '';\r\n    }\r\n    var res = [];\r\n    for (var i = 0; i < children.length; i++) {\r\n      var val = children[i];\r\n      if (val === undefined && !(i in children)) {\r\n        continue;\r\n      }\r\n      var strChildPath = (void 0);\r\n      var pathFormatString = !options.pathFormatArray;\r\n      if (pathFormatString) {\r\n        strChildPath = strChildPathPrefix + \"[\" + i + \"]\";\r\n      }\r\n      res.push({\r\n        value: val,\r\n        key: i + '',\r\n        path: (item.path || []).concat( childrenPath, [i + '']),\r\n        strPath: strChildPath,\r\n        depth: item.depth + 1,\r\n        parent: {\r\n          value: item.value,\r\n          key: item.key,\r\n          path: pathFormatString ? item.strPath : item.path,\r\n          parent: item.parent,\r\n          depth: item.depth,\r\n          info: item.info,\r\n        },\r\n        childrenPath: (childrenPath.length && childrenPath) || undefined,\r\n        strChildrenPath: strChildrenPath || undefined,\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function getOwnChildren(\r\n    item,\r\n    children,\r\n    options,\r\n    childrenPath,\r\n    strChildrenPath\r\n  ) {\r\n    var strChildPathPrefix;\r\n    if (!options.pathFormatArray) {\r\n      strChildPathPrefix = item.strPath || '';\r\n\r\n      if (\r\n        strChildrenPath &&\r\n        strChildPathPrefix &&\r\n        !strChildrenPath.startsWith('[')\r\n      ) {\r\n        strChildPathPrefix += '.';\r\n      }\r\n      strChildPathPrefix += strChildrenPath || '';\r\n    }\r\n    var res = [];\r\n    var pathFormatString = !options.pathFormatArray;\r\n    for (var childKey in children) {\r\n      if (options.ownPropertiesOnly && !has.call(children, childKey)) {\r\n        continue;\r\n      }\r\n\r\n      var strChildPath = (void 0);\r\n      if (pathFormatString) {\r\n        if (rxVarName.test(childKey)) {\r\n          if (strChildPathPrefix) {\r\n            strChildPath = strChildPathPrefix + \".\" + childKey;\r\n          } else {\r\n            strChildPath = \"\" + childKey;\r\n          }\r\n        } else {\r\n          strChildPath = strChildPathPrefix + \"[\\\"\" + (childKey.replace(\r\n            rxQuot,\r\n            '\\\\\"'\r\n          )) + \"\\\"]\";\r\n        }\r\n      }\r\n\r\n      res.push({\r\n        value: children[childKey],\r\n        key: childKey,\r\n        path: (item.path || []).concat( childrenPath, [childKey]),\r\n        strPath: strChildPath,\r\n        depth: item.depth + 1,\r\n        parent: {\r\n          value: item.value,\r\n          key: item.key,\r\n          path: pathFormatString ? item.strPath : item.path,\r\n          parent: item.parent,\r\n          depth: item.depth,\r\n          info: item.info,\r\n        },\r\n        childrenPath: (childrenPath.length && childrenPath) || undefined,\r\n        strChildrenPath: strChildrenPath || undefined,\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\nvar ContextReader = function ContextReader(obj, options, breakIt) {\r\n  this.obj = obj;\r\n  this._options = options;\r\n  this['break'] = breakIt;\r\n};\r\n\r\nvar prototypeAccessors = { path: { configurable: true },parent: { configurable: true },parents: { configurable: true },depth: { configurable: true },isLeaf: { configurable: true },isCircular: { configurable: true },circularParentIndex: { configurable: true },circularParent: { configurable: true },childrenPath: { configurable: true },info: { configurable: true } };\r\nContextReader.prototype.setItem = function setItem (item, afterIterate) {\r\n  this._item = item;\r\n  this.afterIterate = afterIterate;\r\n};\r\nprototypeAccessors.path.get = function () {\r\n  return this._options.pathFormatArray ? this._item.path : this._item.strPath;\r\n};\r\n\r\nprototypeAccessors.parent.get = function () {\r\n  return this._item.parent;\r\n};\r\n\r\nprototypeAccessors.parents.get = function () {\r\n  if (!this._item._parents) {\r\n    this._item._parents = [];\r\n    var curParent = this._item.parent;\r\n    while (curParent) {\r\n      this._item._parents[curParent.depth] = curParent;\r\n      curParent = curParent.parent;\r\n    }\r\n  }\r\n  return this._item._parents;\r\n};\r\nprototypeAccessors.depth.get = function () {\r\n  return this._item.depth;\r\n};\r\n\r\nprototypeAccessors.isLeaf.get = function () {\r\n  return this._item.isLeaf;\r\n};\r\n\r\nprototypeAccessors.isCircular.get = function () {\r\n  return this._item.isCircular;\r\n};\r\n\r\nprototypeAccessors.circularParentIndex.get = function () {\r\n  return this._item.circularParentIndex;\r\n};\r\n\r\nprototypeAccessors.circularParent.get = function () {\r\n  return this._item.circularParent;\r\n};\r\n\r\nprototypeAccessors.childrenPath.get = function () {\r\n  return (\r\n    (this._options.childrenPath !== undefined &&\r\n      (this._options.pathFormatArray\r\n        ? this._item.childrenPath\r\n        : this._item.strChildrenPath)) ||\r\n    undefined\r\n  );\r\n};\r\n\r\nprototypeAccessors.info.get = function () {\r\n  return this._item.info;\r\n};\r\n\r\nObject.defineProperties( ContextReader.prototype, prototypeAccessors );\r\n\r\nfunction isObjectEmpty(value, ownPropertiesOnly) {\r\n  for (var key in value) {\r\n    if (!ownPropertiesOnly || has.call(value, key)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction describeValue(value, ownPropertiesOnly) {\r\n  var res = { isObject: isObject(value) };\r\n  res.isArray = res.isObject && Array.isArray(value);\r\n  res.isEmpty = res.isArray\r\n    ? !value.length\r\n    : res.isObject\r\n    ? isObjectEmpty(value, ownPropertiesOnly)\r\n    : true;\r\n\r\n  return res;\r\n}\r\n\r\nmodule.exports = getIterate;\r\n", "'use strict';\r\n\r\nvar getIterate = require('./private/getIterate.js');\r\n\r\nfunction getEachDeep(_) {\r\n  var iterate = getIterate(_);\r\n\r\n  function eachDeep(obj, callback, options) {\r\n    if (callback === undefined) { callback = _.identity; }\r\n    options = _.merge(\r\n      {\r\n        includeRoot: !Array.isArray(obj),\r\n        pathFormat: 'string',\r\n        checkCircular: false,\r\n        leavesOnly: false,\r\n        ownPropertiesOnly: true, //\r\n      },\r\n      options || {}\r\n    );\r\n    if (options.childrenPath !== undefined) {\r\n      if (!options.includeRoot && options.rootIsChildren === undefined) {\r\n        options.rootIsChildren = Array.isArray(obj);\r\n      }\r\n      if (\r\n        !_.isString(options.childrenPath) &&\r\n        !Array.isArray(options.childrenPath)\r\n      ) {\r\n        throw Error('childrenPath can be string or array');\r\n      } else {\r\n        if (_.isString(options.childrenPath)) {\r\n          options.childrenPath = [options.childrenPath];\r\n        }\r\n        options.strChildrenPath = options.childrenPath;\r\n        options.childrenPath = [];\r\n        for (var i = options.strChildrenPath.length - 1; i >= 0; i--) {\r\n          options.childrenPath[i] = _.toPath(options.strChildrenPath[i]);\r\n        }\r\n      }\r\n    }\r\n    iterate({\r\n      value: obj,\r\n      callback: callback,\r\n      options: options,\r\n      obj: obj,\r\n    });\r\n    return obj;\r\n  }\r\n  return eachDeep;\r\n}\r\n\r\nmodule.exports = getEachDeep;\r\n", "'use strict';\r\n\r\nvar getCondense = require('./getCondense.js');\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getCondenseDeep(_) {\r\n  var eachDeep = getEachDeep(_);\r\n  var condense = getCondense();\r\n  var _each = _.each || _.forArray;\r\n  function condenseDeep(obj, options) {\r\n    options = _.merge(\r\n      {\r\n        checkCircular: false,\r\n      },\r\n      options || {}\r\n    );\r\n    var eachDeepOptions = {\r\n      checkCircular: options.checkCircular,\r\n      ownPropertiesOnly: options.ownPropertiesOnly,\r\n    };\r\n    var arrays = [];\r\n    //console.log('condenseDeep → eachDeep');\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (!context.isCircular && Array.isArray(value)) { arrays.push(value); }\r\n      },\r\n      eachDeepOptions\r\n    );\r\n    if (Array.isArray(obj)) { arrays.push(obj); }\r\n    _each(arrays, condense);\r\n    return obj;\r\n  }\r\n  return condenseDeep;\r\n}\r\n\r\nmodule.exports = getCondenseDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getCondenseDeep = require('./getCondenseDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addCondenseDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('condenseDeep', getCondenseDeep(_), !getCondenseDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addCondenseDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addEachDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('eachDeep', getEachDeep(_), !getEachDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addEachDeep;\r\n", "'use strict';\r\n\r\nfunction getExists(_) {\r\n  function exists(obj, path) {\r\n    path = Array.isArray(path) ? _.clone(path) : _.toPath(path);\r\n    var key = path.pop();\r\n    var parent = path.length ? _.get(obj, path) : obj;\r\n    return parent !== undefined && key in parent;\r\n  }\r\n  return exists;\r\n}\r\n\r\ngetExists.notChainable = true;\r\n\r\nmodule.exports = getExists;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getExists = require('./getExists.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addExists(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('exists', getExists(_), !getExists.notChainable);\r\n}\r\n\r\nmodule.exports = addExists;\r\n", "'use strict';\r\n\r\nvar getCondense = require('./getCondense.js');\r\nvar isObject = require('./private/isObject.js');\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getFilterDeep(_) {\r\n  var eachDeep = getEachDeep(_);\r\n  var condense = getCondense();\r\n\r\n  function filterDeep(obj, predicate, options) {\r\n    predicate = _.iteratee(predicate);\r\n    if (!options) {\r\n      options = {};\r\n    } else {\r\n      options = _.cloneDeep(options);\r\n      if (options.leafsOnly !== undefined) {\r\n        options.leavesOnly = options.leafsOnly;\r\n      }\r\n    }\r\n    if (!options.onTrue) {\r\n      options.onTrue = {};\r\n    }\r\n    if (!options.onFalse) {\r\n      options.onFalse = {};\r\n    }\r\n    if (!options.onUndefined) {\r\n      options.onUndefined = {};\r\n    }\r\n    if (options.childrenPath !== undefined) {\r\n      if (options.onTrue.skipChildren === undefined) {\r\n        options.onTrue.skipChildren = false;\r\n      }\r\n      if (options.onUndefined.skipChildren === undefined) {\r\n        options.onUndefined.skipChildren = false;\r\n      }\r\n      if (options.onFalse.skipChildren === undefined) {\r\n        options.onFalse.skipChildren = false;\r\n      }\r\n\r\n      if (options.onTrue.cloneDeep === undefined) {\r\n        options.onTrue.cloneDeep = true;\r\n      }\r\n      if (options.onUndefined.cloneDeep === undefined) {\r\n        options.onUndefined.cloneDeep = true;\r\n      }\r\n      if (options.onFalse.cloneDeep === undefined) {\r\n        options.onFalse.cloneDeep = true;\r\n      }\r\n    }\r\n    options = _.merge(\r\n      {\r\n        checkCircular: false,\r\n        keepCircular: true,\r\n        //replaceCircularBy: <by>,\r\n        leavesOnly: options.childrenPath === undefined,\r\n        condense: true,\r\n        cloneDeep: _.cloneDeep,\r\n        pathFormat: 'string',\r\n        onTrue: { skipChildren: true, cloneDeep: true, keepIfEmpty: true },\r\n        onUndefined: {\r\n          skipChildren: false,\r\n          cloneDeep: false,\r\n          keepIfEmpty: false,\r\n        },\r\n        onFalse: {\r\n          skipChildren: true,\r\n          cloneDeep: false,\r\n          keepIfEmpty: false,\r\n        },\r\n      },\r\n      options\r\n    );\r\n\r\n    var eachDeepOptions = {\r\n      pathFormat: options.pathFormat,\r\n      checkCircular: options.checkCircular,\r\n      childrenPath: options.childrenPath,\r\n      includeRoot: options.includeRoot,\r\n      rootIsChildren: options.rootIsChildren,\r\n      ownPropertiesOnly: options.ownPropertiesOnly,\r\n      callbackAfterIterate: true,\r\n      leavesOnly: false,\r\n    };\r\n    var resIsArray = Array.isArray(obj);\r\n    var res = resIsArray ? [] : isObject(obj) ? {} : null;\r\n    var toCondense = options.condense ? [] : false;\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (!context.afterIterate) {\r\n          context.info._filterDeep = {};\r\n          if (!context.isCircular) {\r\n            var reply =\r\n              !options.leavesOnly || context.isLeaf\r\n                ? predicate(value, key, parent, context)\r\n                : undefined;\r\n\r\n            if (!isObject(reply)) {\r\n              if (reply === undefined) {\r\n                reply = options.onUndefined;\r\n              } else if (reply) {\r\n                reply = options.onTrue;\r\n              } else {\r\n                reply = options.onFalse;\r\n              }\r\n            }\r\n            context.info._filterDeep.reply = reply;\r\n            context.info._filterDeep.empty =\r\n              reply.empty === undefined ? true : reply.empty;\r\n\r\n            if (reply.keepIfEmpty || !reply.skipChildren) {\r\n              if (options.cloneDeep && reply.cloneDeep) {\r\n                if (context.path !== undefined) {\r\n                  var children = takeResultParent(context, res);\r\n                  context.info._filterDeep.res = children[\r\n                    key\r\n                  ] = options.cloneDeep(value);\r\n                } else {\r\n                  context.info._filterDeep.res = res = options.cloneDeep(value);\r\n                }\r\n              } else {\r\n                if (context.path !== undefined) {\r\n                  var children$1 = takeResultParent(context, res);\r\n                  context.info._filterDeep.res = children$1[key] = context.info\r\n                    .isArray\r\n                    ? []\r\n                    : context.info.isObject\r\n                    ? {}\r\n                    : value;\r\n                } else {\r\n                  context.info._filterDeep.res = res = context.info.isArray\r\n                    ? []\r\n                    : context.info.isObject\r\n                    ? {}\r\n                    : value;\r\n                }\r\n              }\r\n            }\r\n            return !reply.skipChildren;\r\n          } else {\r\n            var children$2 = takeResultParent(context, res);\r\n            if (!options.keepCircular) {\r\n              delete children$2[key];\r\n              if (\r\n                toCondense &&\r\n                ((children$2 === context.parent.info._filterDeep.res &&\r\n                  context.parent.info.isArray) ||\r\n                  Array.isArray(children$2)) &&\r\n                !context.parent.info._filterDeep.isSparse\r\n              ) {\r\n                context.parent.info._filterDeep.isSparse = true;\r\n                toCondense.push(context.parent.info);\r\n              }\r\n\r\n              context.info._filterDeep.excluded = true;\r\n            } else {\r\n              context.info._filterDeep.res = children$2[key] =\r\n                'replaceCircularBy' in options\r\n                  ? options.replaceCircularBy\r\n                  : context.circularParent.path !== undefined\r\n                  ? context.circularParent.info._filterDeep.res\r\n                  : res;\r\n            }\r\n            return false;\r\n          }\r\n        } else if (context.afterIterate && !context.isCircular) {\r\n          var reply$1 = context.info._filterDeep.reply;\r\n\r\n          if (context.info._filterDeep.empty && !reply$1.keepIfEmpty) {\r\n            if (context.path === undefined) {\r\n              res = null;\r\n            } else {\r\n              var children$3 = takeResultParent(context, res);\r\n              delete children$3[key];\r\n              if (\r\n                toCondense &&\r\n                ((children$3 === context.parent.info._filterDeep.res &&\r\n                  context.parent.info.isArray) ||\r\n                  Array.isArray(children$3)) &&\r\n                !context.parent.info._filterDeep.isSparse\r\n              ) {\r\n                context.parent.info._filterDeep.isSparse = true;\r\n                toCondense.push(context.parent.info);\r\n              }\r\n              context.info._filterDeep.excluded = true;\r\n            }\r\n          } else {\r\n            var parent$1 = context.parent;\r\n            while (parent$1) {\r\n              // if (!parent.info._filterDeep) {\r\n              //   parent.info._filterDeep = {};\r\n              // }\r\n              if (!parent$1.info._filterDeep.reply) {\r\n                parent$1.info._filterDeep.reply = options.onUndefined;\r\n              }\r\n              if (!parent$1.info._filterDeep.empty) {\r\n                break;\r\n              }\r\n              parent$1.info._filterDeep.empty = false;\r\n              parent$1 = parent$1.parent;\r\n            }\r\n          }\r\n\r\n          return;\r\n        }\r\n      },\r\n      eachDeepOptions\r\n    );\r\n\r\n    if (toCondense) {\r\n      for (var i = 0; i < toCondense.length; i++) {\r\n        var info = toCondense[i];\r\n        if (info._filterDeep.isSparse && !info._filterDeep.excluded) {\r\n          condense(info.children);\r\n        }\r\n      }\r\n      if (resIsArray) {\r\n        condense(res);\r\n      }\r\n    }\r\n    if (resIsArray && !res.length && !eachDeepOptions.includeRoot) {\r\n      return null;\r\n    }\r\n\r\n    return res;\r\n  }\r\n  return filterDeep;\r\n\r\n  function takeResultParent(context, res) {\r\n    if (context.parent.info.children) {\r\n      return context.parent.info.children;\r\n    }\r\n    if (!context.parent.info._filterDeep) {\r\n      context.parent.info._filterDeep = {};\r\n    }\r\n    var parent = context.parent.info._filterDeep.res;\r\n    if (parent === undefined) {\r\n      //if (!context.parent.parent) {\r\n      parent = context.parent.info._filterDeep.res = res;\r\n      // } else {\r\n      //   parent = context.parent.info._filterDeep.res = Array.isArray(context.parent.value)\r\n      //     ? []\r\n      //     : {};\r\n      // }\r\n    }\r\n    if (context._item.childrenPath) {\r\n      var oParent = context.parent.value;\r\n      for (var i = 0; i < context._item.childrenPath.length; i++) {\r\n        var childKey = context._item.childrenPath[i];\r\n        oParent = oParent[childKey];\r\n        if (!parent[childKey]) {\r\n          parent[childKey] = Array.isArray(oParent) ? [] : {};\r\n        }\r\n        parent = parent[childKey];\r\n      }\r\n    }\r\n    context.parent.info.children = parent;\r\n    return parent;\r\n  }\r\n}\r\n\r\nmodule.exports = getFilterDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getFilterDeep = require('./getFilterDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addFilterDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('filterDeep', getFilterDeep(_), !getFilterDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addFilterDeep;\r\n", "'use strict';\r\n\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getFindDeep(_) {\r\n  var eachDeep = getEachDeep(_);\r\n\r\n  function findDeep(obj, predicate, options) {\r\n    predicate = _.iteratee(predicate);\r\n    if (!options) {\r\n      options = {};\r\n    } else {\r\n      options = _.cloneDeep(options);\r\n      if (options.leafsOnly !== undefined) {\r\n        options.leavesOnly = options.leafsOnly;\r\n      }\r\n    }\r\n\r\n    options = _.merge(\r\n      {\r\n        checkCircular: false,\r\n        leavesOnly: options.childrenPath === undefined,\r\n        pathFormat: 'string',\r\n      },\r\n      options\r\n    );\r\n\r\n    var eachDeepOptions = {\r\n      pathFormat: options.pathFormat,\r\n      checkCircular: options.checkCircular,\r\n      ownPropertiesOnly: options.ownPropertiesOnly,\r\n      childrenPath: options.childrenPath,\r\n      includeRoot: options.includeRoot,\r\n      rootIsChildren: options.rootIsChildren,\r\n      callbackAfterIterate: false,\r\n      leavesOnly: options.leavesOnly,\r\n    };\r\n\r\n    var res;\r\n\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (predicate(value, key, parent, context)) {\r\n          res = { value: value, key: key, parent: parent, context: context };\r\n          return context['break']();\r\n        }\r\n      },\r\n      eachDeepOptions\r\n    );\r\n    return res;\r\n  }\r\n  return findDeep;\r\n}\r\n\r\nmodule.exports = getFindDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getFindDeep = require('./getFindDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addFindDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('findDeep', getFindDeep(_), !getFindDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addFindDeep;\r\n", "'use strict';\r\n\r\nvar getFindDeep = require('./getFindDeep.js');\r\n\r\nfunction getFindPathDeep(_) {\r\n  var findDeep = getFindDeep(_);\r\n  function findPathDeep(obj, predicate, options) {\r\n    var res = findDeep(obj, predicate, options);\r\n    return res && res.context.path;\r\n  }\r\n  return findPathDeep;\r\n}\r\n\r\nmodule.exports = getFindPathDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getFindPathDeep = require('./getFindPathDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addFindPathDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('findPathDeep', getFindPathDeep(_), !getFindPathDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addFindPathDeep;\r\n", "'use strict';\r\n\r\nvar getFindDeep = require('./getFindDeep.js');\r\n\r\nfunction getFindValueDeep(_) {\r\n  var findDeep = getFindDeep(_);\r\n  function findValueDeep(obj, predicate, options) {\r\n    var res = findDeep(obj, predicate, options);\r\n    return res && res.value;\r\n  }\r\n  return findValueDeep;\r\n}\r\n\r\nmodule.exports = getFindValueDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getFindValueDeep = require('./getFindValueDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addFindValueDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('findValueDeep', getFindValueDeep(_), !getFindValueDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addFindValueDeep;\r\n", "'use strict';\r\n\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getForEachDeep(_) {\r\n  return getEachDeep(_);\r\n}\r\n\r\nmodule.exports = getForEachDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getForEachDeep = require('./getForEachDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addForEachDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('forEachDeep', getForEachDeep(_), !getForEachDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addForEachDeep;\r\n", "'use strict';\r\n\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getIndex(_) {\r\n  var eachDeep = getEachDeep(_);\r\n\r\n  function index(obj, options) {\r\n    options = _.merge(\r\n      {\r\n        checkCircular: false,\r\n        includeCircularPath: true,\r\n        leavesOnly: !options || options.childrenPath === undefined,\r\n      },\r\n      options || {}\r\n    );\r\n    if (options && options.leafsOnly !== undefined) {\r\n      options.leavesOnly = options.leafsOnly;\r\n    }\r\n    var eachDeepOptions = {\r\n      pathFormat: 'string',\r\n      checkCircular: options.checkCircular,\r\n      ownPropertiesOnly: options.ownPropertiesOnly,\r\n      includeRoot: options.includeRoot,\r\n      childrenPath: options.childrenPath,\r\n      rootIsChildren: options.rootIsChildren,\r\n      leavesOnly: options.leavesOnly,\r\n    };\r\n    var res = {};\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (!context.isCircular || options.includeCircularPath) {\r\n          if (context.path !== undefined) {\r\n            res[context.path] = value;\r\n          }\r\n        }\r\n      },\r\n      eachDeepOptions\r\n    );\r\n    return res;\r\n  }\r\n  return index;\r\n}\r\n\r\nmodule.exports = getIndex;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getIndex = require('./getIndex.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addIndex(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('index', getIndex(_), !getIndex.notChainable);\r\n}\r\n\r\nmodule.exports = addIndex;\r\n", "'use strict';\r\n\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getPaths(_) {\r\n  var eachDeep = getEachDeep(_);\r\n  function paths(obj, options) {\r\n    if (options && options.leafsOnly !== undefined) {\r\n      options.leavesOnly = options.leafsOnly;\r\n    }\r\n    options = _.merge(\r\n      {\r\n        checkCircular: false,\r\n        includeCircularPath: true,\r\n        leavesOnly: !options || options.childrenPath === undefined,\r\n        pathFormat: 'string',\r\n      },\r\n      options || {}\r\n    );\r\n    var eachDeepOptions = {\r\n      pathFormat: options.pathFormat,\r\n      checkCircular: options.checkCircular,\r\n      ownPropertiesOnly: options.ownPropertiesOnly,\r\n      includeRoot: options.includeRoot,\r\n      childrenPath: options.childrenPath,\r\n      rootIsChildren: options.rootIsChildren,\r\n      leavesOnly: options.leavesOnly,\r\n    };\r\n    var res = [];\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (!context.isCircular || options.includeCircularPath) {\r\n          if (context.path !== undefined) {\r\n            res.push(context.path);\r\n          }\r\n        }\r\n      },\r\n      eachDeepOptions\r\n    );\r\n    return res;\r\n  }\r\n  return paths;\r\n}\r\n\r\nmodule.exports = getPaths;\r\n", "'use strict';\r\n\r\nvar getPaths = require('./getPaths.js');\r\n\r\nfunction getKeysDeep(_) {\r\n  return getPaths(_);\r\n}\r\n\r\nmodule.exports = getKeysDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getKeysDeep = require('./getKeysDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addKeysDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('keysDeep', getKeysDeep(_), !getKeysDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addKeysDeep;\r\n", "'use strict';\r\n\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getReduceDeep(_) {\r\n  var eachDeep = getEachDeep(_);\r\n\r\n  function reduceDeep(obj, iteratee, accumulator, options) {\r\n    var accumulatorInited = accumulator !== undefined;\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (!accumulatorInited) {\r\n          accumulator = value;\r\n          accumulatorInited = true;\r\n        } else {\r\n          accumulator = iteratee(accumulator, value, key, parent, context);\r\n        }\r\n      },\r\n      options\r\n    );\r\n    return accumulator;\r\n  }\r\n  return reduceDeep;\r\n}\r\n\r\nmodule.exports = getReduceDeep;\r\n", "'use strict';\r\n\r\nvar getReduceDeep = require('./getReduceDeep.js');\r\n\r\nfunction getMapDeep(_) {\r\n  var reduceDeep = getReduceDeep(_);\r\n\r\n  function mapDeep(obj, iteratee, options) {\r\n    iteratee = _.iteratee(iteratee);\r\n    return reduceDeep(\r\n      obj,\r\n      function (acc, value, key, parentValue, context) {\r\n        acc.push(iteratee(value, key, parentValue, context));\r\n        return acc;\r\n      },\r\n      [],\r\n      options\r\n    );\r\n  }\r\n  return mapDeep;\r\n}\r\n\r\nmodule.exports = getMapDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getMapDeep = require('./getMapDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addMapDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('mapDeep', getMapDeep(_), !getMapDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addMapDeep;\r\n", "'use strict';\r\n\r\nvar getPathToString = require('./getPathToString.js');\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getMapKeysDeep(_) {\r\n  var eachDeep = getEachDeep(_);\r\n  var pathToString = getPathToString(_);\r\n  function mapKeysDeep(obj, iteratee, options) {\r\n    if ( options === void 0 ) options = {};\r\n\r\n    iteratee = _.iteratee(iteratee);\r\n    options.cloneDeep = options.cloneDeep || _.cloneDeep;\r\n    options.callbackAfterIterate = false;\r\n    var newPaths = [];\r\n\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        if (key === undefined) {\r\n          return;\r\n        }\r\n        var newKey = iteratee(value, key, parent, context) + '';\r\n        if (newKey === key) {\r\n          return;\r\n        }\r\n        var oldPath = context.path;\r\n        var oldPathStr =\r\n          options.pathFormat === 'array' ? JSON.stringify(oldPath) : oldPath;\r\n        var newPath =\r\n          options.pathFormat === 'array'\r\n            ? (context.parent.path || []).concat( (context.childrenPath || []),\r\n                [newKey] )\r\n            : pathToString([newKey], context.parent.path, context.childrenPath);\r\n        var newPathStr =\r\n          options.pathFormat === 'array' ? JSON.stringify(newPath) : newPath;\r\n        if (!newPaths[context.depth - 1]) {\r\n          newPaths[context.depth - 1] = [];\r\n        }\r\n        newPaths[context.depth - 1].push({\r\n          oldPath: oldPath,\r\n          oldPathStr: oldPathStr,\r\n          newPath: newPath,\r\n          newPathStr: newPathStr,\r\n        });\r\n      },\r\n      options\r\n    );\r\n    var res = options.cloneDeep(obj);\r\n\r\n    var d = newPaths.length;\r\n    var loop = function () {\r\n      if (!newPaths[d]) {\r\n        return;\r\n      }\r\n      var overwritten = {};\r\n      newPaths[d].forEach(function (ref) {\r\n        var oldPath = ref.oldPath;\r\n        var oldPathStr = ref.oldPathStr;\r\n        var newPath = ref.newPath;\r\n        var newPathStr = ref.newPathStr;\r\n\r\n        var value;\r\n        if (Object.prototype.hasOwnProperty.call(overwritten, oldPathStr)) {\r\n          value = overwritten[oldPathStr];\r\n          delete overwritten[oldPathStr];\r\n        } else {\r\n          value = _.get(res, oldPath);\r\n          if (value === undefined && !_.has(res, oldPath)) {\r\n            return;\r\n          }\r\n          _.unset(res, oldPath);\r\n        }\r\n        if (\r\n          _.has(res, newPath) &&\r\n          !Object.prototype.hasOwnProperty.call(overwritten, newPathStr)\r\n        ) {\r\n          overwritten[newPathStr] = _.get(res, newPath);\r\n        }\r\n        _.set(res, newPath, value);\r\n      });\r\n    };\r\n\r\n    while (d--) loop();\r\n    return res;\r\n  }\r\n  return mapKeysDeep;\r\n}\r\n\r\nmodule.exports = getMapKeysDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getMapKeysDeep = require('./getMapKeysDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addMapKeysDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('mapKeysDeep', getMapKeysDeep(_), !getMapKeysDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addMapKeysDeep;\r\n", "'use strict';\r\n\r\nvar getEachDeep = require('./getEachDeep.js');\r\n\r\nfunction getMapValuesDeep(_) {\r\n  var eachDeep = getEachDeep(_);\r\n\r\n  function mapValuesDeep(obj, iteratee, options) {\r\n    iteratee = _.iteratee(iteratee);\r\n    var res = Array.isArray(obj) ? [] : _.isObject(obj) ? {} : _.clone(obj);\r\n    var skipChildren;\r\n\r\n    eachDeep(\r\n      obj,\r\n      function (value, key, parent, context) {\r\n        // if (!context.skipChildren) {\r\n        context.skipChildren = function (skip) {\r\n          skipChildren = skip;\r\n        };\r\n        // }\r\n        skipChildren = undefined;\r\n        var r = iteratee(value, key, parent, context);\r\n        if (!context.isLeaf && skipChildren === undefined) {\r\n          skipChildren =\r\n            value !== r && Array.isArray(value) != Array.isArray(r);\r\n        }\r\n        if (context.path !== undefined) {\r\n          _.set(res, context.path, r);\r\n        } else {\r\n          res = r;\r\n        }\r\n        if (skipChildren) {\r\n          return false;\r\n        }\r\n      },\r\n      options\r\n    );\r\n\r\n    return res;\r\n  }\r\n  return mapValuesDeep;\r\n}\r\n\r\nmodule.exports = getMapValuesDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getMapValuesDeep = require('./getMapValuesDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addMapValuesDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('mapValuesDeep', getMapValuesDeep(_), !getMapValuesDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addMapValuesDeep;\r\n", "'use strict';\r\n\r\nvar getPathToString = require('./getPathToString.js');\r\n\r\nfunction getPathMatches(_) {\r\n  var pathToString = getPathToString(_);\r\n  function pathMatches(path, paths) {\r\n    var pathString;\r\n    var pathArray;\r\n    if (_.isString(path)) {\r\n      pathString = path;\r\n    } else {\r\n      pathArray = path;\r\n    }\r\n    if (!Array.isArray(paths)) {\r\n      paths = [paths];\r\n    } else {\r\n      paths = _.cloneDeep(paths);\r\n    }\r\n    for (var i = 0; i < paths.length; i++) {\r\n      if (_.isString(paths[i])) {\r\n        paths[i] = _.toPath(paths[i]);\r\n      }\r\n      if (Array.isArray(paths[i])) {\r\n        if (pathArray === undefined) {\r\n          pathArray = _.toPath(pathString);\r\n        }\r\n        if (\r\n          pathArray.length >= paths[i].length &&\r\n          _.isEqual(_.takeRight(pathArray, paths[i].length), paths[i])\r\n        ) {\r\n          // console.log('path matched');\r\n          return paths[i];\r\n        }\r\n      } else if (paths[i] instanceof RegExp) {\r\n        if (pathString === undefined) {\r\n          pathString = pathToString(path);\r\n        }\r\n        if (paths[i].test(pathString)) {\r\n          // console.log('regex matched', paths[i]);\r\n          return paths[i];\r\n        }\r\n      } else {\r\n        throw new Error(\r\n          'To match path use only string/regex or array of them.'\r\n        );\r\n      }\r\n    }\r\n    // console.log('matched nothing');\r\n    return false;\r\n  }\r\n  return pathMatches;\r\n}\r\n\r\ngetPathMatches.notChainable = true;\r\n\r\nmodule.exports = getPathMatches;\r\n", "'use strict';\r\n\r\nvar getFilterDeep = require('./getFilterDeep.js');\r\nvar getPathMatches = require('./getPathMatches.js');\r\n\r\nfunction getOmitDeep(_) {\r\n  var pathMatches = getPathMatches(_);\r\n  var filterDeep = getFilterDeep(_);\r\n\r\n  function omitDeep(obj, paths, options) {\r\n    options = _.merge(\r\n      {\r\n        invert: false,\r\n      },\r\n      options || {}\r\n    );\r\n    var isOmit = !options.invert;\r\n    options = _.merge(\r\n      {\r\n        onMatch: {\r\n          cloneDeep: false,\r\n          skipChildren: false,\r\n          keepIfEmpty: !isOmit,\r\n        },\r\n        onNotMatch: {\r\n          cloneDeep: false,\r\n          skipChildren: false,\r\n          keepIfEmpty: isOmit,\r\n        },\r\n      },\r\n      options\r\n    );\r\n    options.leavesOnly = false;\r\n    options.childrenPath = undefined;\r\n    options.includeRoot = undefined;\r\n    options.pathFormat = 'array';\r\n    options.onTrue = options.invert ? options.onMatch : options.onNotMatch;\r\n    options.onFalse = options.invert ? options.onNotMatch : options.onMatch;\r\n\r\n    var test = function (value, key, parent, context) {\r\n      if (pathMatches(context.path, paths) !== false) {\r\n        return options.invert;\r\n      } else {\r\n        return !options.invert;\r\n      }\r\n    };\r\n    return filterDeep(obj, test, options);\r\n  }\r\n  return omitDeep;\r\n}\r\n\r\nmodule.exports = getOmitDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getOmitDeep = require('./getOmitDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addOmitDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('omitDeep', getOmitDeep(_), !getOmitDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addOmitDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getPathMatches = require('./getPathMatches.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addPathMatches(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('pathMatches', getPathMatches(_), !getPathMatches.notChainable);\r\n}\r\n\r\nmodule.exports = addPathMatches;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getPathToString = require('./getPathToString.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addPathToString(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('pathToString', getPathToString(_), !getPathToString.notChainable);\r\n}\r\n\r\nmodule.exports = addPathToString;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getPaths = require('./getPaths.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addPaths(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('paths', getPaths(_), !getPaths.notChainable);\r\n}\r\n\r\nmodule.exports = addPaths;\r\n", "'use strict';\r\n\r\nvar getOmitDeep = require('./getOmitDeep.js');\r\n\r\nfunction getPickDeep(_) {\r\n  var omitDeep = getOmitDeep(_);\r\n  function pickDeep(obj, paths, options) {\r\n    options = _.merge(\r\n      {\r\n        invert: false,\r\n      },\r\n      options || {}\r\n    );\r\n    options.invert = true;\r\n    return omitDeep(obj, paths, options);\r\n  }\r\n  return pickDeep;\r\n}\r\n\r\nmodule.exports = getPickDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getPickDeep = require('./getPickDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addPickDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('pickDeep', getPickDeep(_), !getPickDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addPickDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getReduceDeep = require('./getReduceDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addReduceDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('reduceDeep', getReduceDeep(_), !getReduceDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addReduceDeep;\r\n", "'use strict';\r\n\r\nvar getFindDeep = require('./getFindDeep.js');\r\n\r\nfunction getSomeDeep(_) {\r\n  var findDeep = getFindDeep(_);\r\n  function someDeep(obj, predicate, options) {\r\n    return !!findDeep(obj, predicate, options);\r\n  }\r\n  return someDeep;\r\n}\r\n\r\nmodule.exports = getSomeDeep;\r\n", "'use strict';\r\n\r\nvar getMixOrPatchIn = require('./private/getMixOrPatchIn.js');\r\nvar getSomeDeep = require('./getSomeDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction addSomeDeep(_) {\r\n  var mixOrPatchIn = getMixOrPatchIn(_);\r\n  return mixOrPatchIn('someDeep', getSomeDeep(_), !getSomeDeep.notChainable);\r\n}\r\n\r\nmodule.exports = addSomeDeep;\r\n", "'use strict';\r\n\r\nvar addCondense = require('./addCondense.js');\r\nvar addCondenseDeep = require('./addCondenseDeep.js');\r\nvar addEachDeep = require('./addEachDeep.js');\r\nvar addExists = require('./addExists.js');\r\nvar addFilterDeep = require('./addFilterDeep.js');\r\nvar addFindDeep = require('./addFindDeep.js');\r\nvar addFindPathDeep = require('./addFindPathDeep.js');\r\nvar addFindValueDeep = require('./addFindValueDeep.js');\r\nvar addForEachDeep = require('./addForEachDeep.js');\r\nvar addIndex = require('./addIndex.js');\r\nvar addKeysDeep = require('./addKeysDeep.js');\r\nvar addMapDeep = require('./addMapDeep.js');\r\nvar addMapKeysDeep = require('./addMapKeysDeep.js');\r\nvar addMapValuesDeep = require('./addMapValuesDeep.js');\r\nvar addOmitDeep = require('./addOmitDeep.js');\r\nvar addPathMatches = require('./addPathMatches.js');\r\nvar addPathToString = require('./addPathToString.js');\r\nvar addPaths = require('./addPaths.js');\r\nvar addPickDeep = require('./addPickDeep.js');\r\nvar addReduceDeep = require('./addReduceDeep.js');\r\nvar addSomeDeep = require('./addSomeDeep.js');\r\n\r\n/* build/tpl */\r\n\r\nfunction apply(_) {\r\n  addCondense(_);\r\n  addCondenseDeep(_);\r\n  addEachDeep(_);\r\n  addExists(_);\r\n  addFilterDeep(_);\r\n  addFindDeep(_);\r\n  addFindPathDeep(_);\r\n  addFindValueDeep(_);\r\n  addForEachDeep(_);\r\n  addIndex(_);\r\n  addKeysDeep(_);\r\n  addMapDeep(_);\r\n  addMapKeysDeep(_);\r\n  addMapValuesDeep(_);\r\n  addOmitDeep(_);\r\n  addPathMatches(_);\r\n  addPathToString(_);\r\n  addPaths(_);\r\n  addPickDeep(_);\r\n  addReduceDeep(_);\r\n  addSomeDeep(_);\r\n\r\n  return _;\r\n}\r\n\r\nmodule.exports = apply;\r\n", "(function (root) {\r\n    'use strict';\r\n\r\n    /**\r\n     * charMap\r\n     * @type {Object}\r\n     */\r\n    var charMap = {\r\n\r\n        // latin\r\n        'À': 'A',\r\n        'Á': 'A',\r\n        'Â': 'A',\r\n        'Ã': 'A',\r\n        'Ä': 'Ae',\r\n        'Å': 'A',\r\n        'Æ': 'AE',\r\n        'Ç': 'C',\r\n        'È': 'E',\r\n        'É': 'E',\r\n        'Ê': 'E',\r\n        'Ë': 'E',\r\n        'Ì': 'I',\r\n        'Í': 'I',\r\n        'Î': 'I',\r\n        'Ï': 'I',\r\n        'Ð': 'D',\r\n        'Ñ': 'N',\r\n        'Ò': 'O',\r\n        'Ó': 'O',\r\n        'Ô': 'O',\r\n        'Õ': 'O',\r\n        'Ö': 'Oe',\r\n        'Ő': 'O',\r\n        'Ø': 'O',\r\n        'Ù': 'U',\r\n        'Ú': 'U',\r\n        'Û': 'U',\r\n        'Ü': 'Ue',\r\n        'Ű': 'U',\r\n        'Ý': 'Y',\r\n        'Þ': 'TH',\r\n        'ß': 'ss',\r\n        'à': 'a',\r\n        'á': 'a',\r\n        'â': 'a',\r\n        'ã': 'a',\r\n        'ä': 'ae',\r\n        'å': 'a',\r\n        'æ': 'ae',\r\n        'ç': 'c',\r\n        'è': 'e',\r\n        'é': 'e',\r\n        'ê': 'e',\r\n        'ë': 'e',\r\n        'ì': 'i',\r\n        'í': 'i',\r\n        'î': 'i',\r\n        'ï': 'i',\r\n        'ð': 'd',\r\n        'ñ': 'n',\r\n        'ò': 'o',\r\n        'ó': 'o',\r\n        'ô': 'o',\r\n        'õ': 'o',\r\n        'ö': 'oe',\r\n        'ő': 'o',\r\n        'ø': 'o',\r\n        'ù': 'u',\r\n        'ú': 'u',\r\n        'û': 'u',\r\n        'ü': 'ue',\r\n        'ű': 'u',\r\n        'ý': 'y',\r\n        'þ': 'th',\r\n        'ÿ': 'y',\r\n        'ẞ': 'SS',\r\n\r\n        // language specific\r\n\r\n        // Arabic\r\n        'ا': 'a',\r\n        'أ': 'a',\r\n        'إ': 'i',\r\n        'آ': 'aa',\r\n        'ؤ': 'u',\r\n        'ئ': 'e',\r\n        'ء': 'a',\r\n        'ب': 'b',\r\n        'ت': 't',\r\n        'ث': 'th',\r\n        'ج': 'j',\r\n        'ح': 'h',\r\n        'خ': 'kh',\r\n        'د': 'd',\r\n        'ذ': 'th',\r\n        'ر': 'r',\r\n        'ز': 'z',\r\n        'س': 's',\r\n        'ش': 'sh',\r\n        'ص': 's',\r\n        'ض': 'dh',\r\n        'ط': 't',\r\n        'ظ': 'z',\r\n        'ع': 'a',\r\n        'غ': 'gh',\r\n        'ف': 'f',\r\n        'ق': 'q',\r\n        'ك': 'k',\r\n        'ل': 'l',\r\n        'م': 'm',\r\n        'ن': 'n',\r\n        'ه': 'h',\r\n        'و': 'w',\r\n        'ي': 'y',\r\n        'ى': 'a',\r\n        'ة': 'h',\r\n        'ﻻ': 'la',\r\n        'ﻷ': 'laa',\r\n        'ﻹ': 'lai',\r\n        'ﻵ': 'laa',\r\n\r\n        // Persian additional characters than Arabic\r\n        'گ': 'g',\r\n        'چ': 'ch',\r\n        'پ': 'p',\r\n        'ژ': 'zh',\r\n        'ک': 'k',\r\n        'ی': 'y',\r\n\r\n        // Arabic diactrics\r\n        'َ': 'a',\r\n        'ً': 'an',\r\n        'ِ': 'e',\r\n        'ٍ': 'en',\r\n        'ُ': 'u',\r\n        'ٌ': 'on',\r\n        'ْ': '',\r\n\r\n        // Arabic numbers\r\n        '٠': '0',\r\n        '١': '1',\r\n        '٢': '2',\r\n        '٣': '3',\r\n        '٤': '4',\r\n        '٥': '5',\r\n        '٦': '6',\r\n        '٧': '7',\r\n        '٨': '8',\r\n        '٩': '9',\r\n\r\n        // Persian numbers\r\n        '۰': '0',\r\n        '۱': '1',\r\n        '۲': '2',\r\n        '۳': '3',\r\n        '۴': '4',\r\n        '۵': '5',\r\n        '۶': '6',\r\n        '۷': '7',\r\n        '۸': '8',\r\n        '۹': '9',\r\n\r\n        // Burmese consonants\r\n        'က': 'k',\r\n        'ခ': 'kh',\r\n        'ဂ': 'g',\r\n        'ဃ': 'ga',\r\n        'င': 'ng',\r\n        'စ': 's',\r\n        'ဆ': 'sa',\r\n        'ဇ': 'z',\r\n        'စျ': 'za',\r\n        'ည': 'ny',\r\n        'ဋ': 't',\r\n        'ဌ': 'ta',\r\n        'ဍ': 'd',\r\n        'ဎ': 'da',\r\n        'ဏ': 'na',\r\n        'တ': 't',\r\n        'ထ': 'ta',\r\n        'ဒ': 'd',\r\n        'ဓ': 'da',\r\n        'န': 'n',\r\n        'ပ': 'p',\r\n        'ဖ': 'pa',\r\n        'ဗ': 'b',\r\n        'ဘ': 'ba',\r\n        'မ': 'm',\r\n        'ယ': 'y',\r\n        'ရ': 'ya',\r\n        'လ': 'l',\r\n        'ဝ': 'w',\r\n        'သ': 'th',\r\n        'ဟ': 'h',\r\n        'ဠ': 'la',\r\n        'အ': 'a',\r\n        // consonant character combos\r\n        'ြ': 'y',\r\n        'ျ': 'ya',\r\n        'ွ': 'w',\r\n        'ြွ': 'yw',\r\n        'ျွ': 'ywa',\r\n        'ှ': 'h',\r\n        // independent vowels\r\n        'ဧ': 'e',\r\n        '၏': '-e',\r\n        'ဣ': 'i',\r\n        'ဤ': '-i',\r\n        'ဉ': 'u',\r\n        'ဦ': '-u',\r\n        'ဩ': 'aw',\r\n        'သြော': 'aw',\r\n        'ဪ': 'aw',\r\n        // numbers\r\n        '၀': '0',\r\n        '၁': '1',\r\n        '၂': '2',\r\n        '၃': '3',\r\n        '၄': '4',\r\n        '၅': '5',\r\n        '၆': '6',\r\n        '၇': '7',\r\n        '၈': '8',\r\n        '၉': '9',\r\n        // virama and tone marks which are silent in transliteration\r\n        '္': '',\r\n        '့': '',\r\n        'း': '',\r\n\r\n        // Czech\r\n        'č': 'c',\r\n        'ď': 'd',\r\n        'ě': 'e',\r\n        'ň': 'n',\r\n        'ř': 'r',\r\n        'š': 's',\r\n        'ť': 't',\r\n        'ů': 'u',\r\n        'ž': 'z',\r\n        'Č': 'C',\r\n        'Ď': 'D',\r\n        'Ě': 'E',\r\n        'Ň': 'N',\r\n        'Ř': 'R',\r\n        'Š': 'S',\r\n        'Ť': 'T',\r\n        'Ů': 'U',\r\n        'Ž': 'Z',\r\n\r\n        // Dhivehi\r\n        'ހ': 'h',\r\n        'ށ': 'sh',\r\n        'ނ': 'n',\r\n        'ރ': 'r',\r\n        'ބ': 'b',\r\n        'ޅ': 'lh',\r\n        'ކ': 'k',\r\n        'އ': 'a',\r\n        'ވ': 'v',\r\n        'މ': 'm',\r\n        'ފ': 'f',\r\n        'ދ': 'dh',\r\n        'ތ': 'th',\r\n        'ލ': 'l',\r\n        'ގ': 'g',\r\n        'ޏ': 'gn',\r\n        'ސ': 's',\r\n        'ޑ': 'd',\r\n        'ޒ': 'z',\r\n        'ޓ': 't',\r\n        'ޔ': 'y',\r\n        'ޕ': 'p',\r\n        'ޖ': 'j',\r\n        'ޗ': 'ch',\r\n        'ޘ': 'tt',\r\n        'ޙ': 'hh',\r\n        'ޚ': 'kh',\r\n        'ޛ': 'th',\r\n        'ޜ': 'z',\r\n        'ޝ': 'sh',\r\n        'ޞ': 's',\r\n        'ޟ': 'd',\r\n        'ޠ': 't',\r\n        'ޡ': 'z',\r\n        'ޢ': 'a',\r\n        'ޣ': 'gh',\r\n        'ޤ': 'q',\r\n        'ޥ': 'w',\r\n        'ަ': 'a',\r\n        'ާ': 'aa',\r\n        'ި': 'i',\r\n        'ީ': 'ee',\r\n        'ު': 'u',\r\n        'ޫ': 'oo',\r\n        'ެ': 'e',\r\n        'ޭ': 'ey',\r\n        'ޮ': 'o',\r\n        'ޯ': 'oa',\r\n        'ް': '',\r\n\r\n        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\r\n        // National system (2002)\r\n        'ა': 'a',\r\n        'ბ': 'b',\r\n        'გ': 'g',\r\n        'დ': 'd',\r\n        'ე': 'e',\r\n        'ვ': 'v',\r\n        'ზ': 'z',\r\n        'თ': 't',\r\n        'ი': 'i',\r\n        'კ': 'k',\r\n        'ლ': 'l',\r\n        'მ': 'm',\r\n        'ნ': 'n',\r\n        'ო': 'o',\r\n        'პ': 'p',\r\n        'ჟ': 'zh',\r\n        'რ': 'r',\r\n        'ს': 's',\r\n        'ტ': 't',\r\n        'უ': 'u',\r\n        'ფ': 'p',\r\n        'ქ': 'k',\r\n        'ღ': 'gh',\r\n        'ყ': 'q',\r\n        'შ': 'sh',\r\n        'ჩ': 'ch',\r\n        'ც': 'ts',\r\n        'ძ': 'dz',\r\n        'წ': 'ts',\r\n        'ჭ': 'ch',\r\n        'ხ': 'kh',\r\n        'ჯ': 'j',\r\n        'ჰ': 'h',\r\n\r\n        // Greek\r\n        'α': 'a',\r\n        'β': 'v',\r\n        'γ': 'g',\r\n        'δ': 'd',\r\n        'ε': 'e',\r\n        'ζ': 'z',\r\n        'η': 'i',\r\n        'θ': 'th',\r\n        'ι': 'i',\r\n        'κ': 'k',\r\n        'λ': 'l',\r\n        'μ': 'm',\r\n        'ν': 'n',\r\n        'ξ': 'ks',\r\n        'ο': 'o',\r\n        'π': 'p',\r\n        'ρ': 'r',\r\n        'σ': 's',\r\n        'τ': 't',\r\n        'υ': 'y',\r\n        'φ': 'f',\r\n        'χ': 'x',\r\n        'ψ': 'ps',\r\n        'ω': 'o',\r\n        'ά': 'a',\r\n        'έ': 'e',\r\n        'ί': 'i',\r\n        'ό': 'o',\r\n        'ύ': 'y',\r\n        'ή': 'i',\r\n        'ώ': 'o',\r\n        'ς': 's',\r\n        'ϊ': 'i',\r\n        'ΰ': 'y',\r\n        'ϋ': 'y',\r\n        'ΐ': 'i',\r\n        'Α': 'A',\r\n        'Β': 'B',\r\n        'Γ': 'G',\r\n        'Δ': 'D',\r\n        'Ε': 'E',\r\n        'Ζ': 'Z',\r\n        'Η': 'I',\r\n        'Θ': 'TH',\r\n        'Ι': 'I',\r\n        'Κ': 'K',\r\n        'Λ': 'L',\r\n        'Μ': 'M',\r\n        'Ν': 'N',\r\n        'Ξ': 'KS',\r\n        'Ο': 'O',\r\n        'Π': 'P',\r\n        'Ρ': 'R',\r\n        'Σ': 'S',\r\n        'Τ': 'T',\r\n        'Υ': 'Y',\r\n        'Φ': 'F',\r\n        'Χ': 'X',\r\n        'Ψ': 'PS',\r\n        'Ω': 'O',\r\n        'Ά': 'A',\r\n        'Έ': 'E',\r\n        'Ί': 'I',\r\n        'Ό': 'O',\r\n        'Ύ': 'Y',\r\n        'Ή': 'I',\r\n        'Ώ': 'O',\r\n        'Ϊ': 'I',\r\n        'Ϋ': 'Y',\r\n\r\n        // Latvian\r\n        'ā': 'a',\r\n        // 'č': 'c', // duplicate\r\n        'ē': 'e',\r\n        'ģ': 'g',\r\n        'ī': 'i',\r\n        'ķ': 'k',\r\n        'ļ': 'l',\r\n        'ņ': 'n',\r\n        // 'š': 's', // duplicate\r\n        'ū': 'u',\r\n        // 'ž': 'z', // duplicate\r\n        'Ā': 'A',\r\n        // 'Č': 'C', // duplicate\r\n        'Ē': 'E',\r\n        'Ģ': 'G',\r\n        'Ī': 'I',\r\n        'Ķ': 'k',\r\n        'Ļ': 'L',\r\n        'Ņ': 'N',\r\n        // 'Š': 'S', // duplicate\r\n        'Ū': 'U',\r\n        // 'Ž': 'Z', // duplicate\r\n\r\n        // Macedonian\r\n        'Ќ': 'Kj',\r\n        'ќ': 'kj',\r\n        'Љ': 'Lj',\r\n        'љ': 'lj',\r\n        'Њ': 'Nj',\r\n        'њ': 'nj',\r\n        'Тс': 'Ts',\r\n        'тс': 'ts',\r\n\r\n        // Polish\r\n        'ą': 'a',\r\n        'ć': 'c',\r\n        'ę': 'e',\r\n        'ł': 'l',\r\n        'ń': 'n',\r\n        // 'ó': 'o', // duplicate\r\n        'ś': 's',\r\n        'ź': 'z',\r\n        'ż': 'z',\r\n        'Ą': 'A',\r\n        'Ć': 'C',\r\n        'Ę': 'E',\r\n        'Ł': 'L',\r\n        'Ń': 'N',\r\n        'Ś': 'S',\r\n        'Ź': 'Z',\r\n        'Ż': 'Z',\r\n\r\n        // Ukranian\r\n        'Є': 'Ye',\r\n        'І': 'I',\r\n        'Ї': 'Yi',\r\n        'Ґ': 'G',\r\n        'є': 'ye',\r\n        'і': 'i',\r\n        'ї': 'yi',\r\n        'ґ': 'g',\r\n\r\n        // Romanian\r\n        'ă': 'a',\r\n        'Ă': 'A',\r\n        'ș': 's',\r\n        'Ș': 'S',\r\n        // 'ş': 's', // duplicate\r\n        // 'Ş': 'S', // duplicate\r\n        'ț': 't',\r\n        'Ț': 'T',\r\n        'ţ': 't',\r\n        'Ţ': 'T',\r\n\r\n        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\r\n        // ICAO\r\n\r\n        'а': 'a',\r\n        'б': 'b',\r\n        'в': 'v',\r\n        'г': 'g',\r\n        'д': 'd',\r\n        'е': 'e',\r\n        'ё': 'yo',\r\n        'ж': 'zh',\r\n        'з': 'z',\r\n        'и': 'i',\r\n        'й': 'i',\r\n        'к': 'k',\r\n        'л': 'l',\r\n        'м': 'm',\r\n        'н': 'n',\r\n        'о': 'o',\r\n        'п': 'p',\r\n        'р': 'r',\r\n        'с': 's',\r\n        'т': 't',\r\n        'у': 'u',\r\n        'ф': 'f',\r\n        'х': 'kh',\r\n        'ц': 'c',\r\n        'ч': 'ch',\r\n        'ш': 'sh',\r\n        'щ': 'sh',\r\n        'ъ': '',\r\n        'ы': 'y',\r\n        'ь': '',\r\n        'э': 'e',\r\n        'ю': 'yu',\r\n        'я': 'ya',\r\n        'А': 'A',\r\n        'Б': 'B',\r\n        'В': 'V',\r\n        'Г': 'G',\r\n        'Д': 'D',\r\n        'Е': 'E',\r\n        'Ё': 'Yo',\r\n        'Ж': 'Zh',\r\n        'З': 'Z',\r\n        'И': 'I',\r\n        'Й': 'I',\r\n        'К': 'K',\r\n        'Л': 'L',\r\n        'М': 'M',\r\n        'Н': 'N',\r\n        'О': 'O',\r\n        'П': 'P',\r\n        'Р': 'R',\r\n        'С': 'S',\r\n        'Т': 'T',\r\n        'У': 'U',\r\n        'Ф': 'F',\r\n        'Х': 'Kh',\r\n        'Ц': 'C',\r\n        'Ч': 'Ch',\r\n        'Ш': 'Sh',\r\n        'Щ': 'Sh',\r\n        'Ъ': '',\r\n        'Ы': 'Y',\r\n        'Ь': '',\r\n        'Э': 'E',\r\n        'Ю': 'Yu',\r\n        'Я': 'Ya',\r\n\r\n        // Serbian\r\n        'ђ': 'dj',\r\n        'ј': 'j',\r\n        // 'љ': 'lj',  // duplicate\r\n        // 'њ': 'nj', // duplicate\r\n        'ћ': 'c',\r\n        'џ': 'dz',\r\n        'Ђ': 'Dj',\r\n        'Ј': 'j',\r\n        // 'Љ': 'Lj', // duplicate\r\n        // 'Њ': 'Nj', // duplicate\r\n        'Ћ': 'C',\r\n        'Џ': 'Dz',\r\n\r\n        // Slovak\r\n        'ľ': 'l',\r\n        'ĺ': 'l',\r\n        'ŕ': 'r',\r\n        'Ľ': 'L',\r\n        'Ĺ': 'L',\r\n        'Ŕ': 'R',\r\n\r\n        // Turkish\r\n        'ş': 's',\r\n        'Ş': 'S',\r\n        'ı': 'i',\r\n        'İ': 'I',\r\n        // 'ç': 'c', // duplicate\r\n        // 'Ç': 'C', // duplicate\r\n        // 'ü': 'u', // duplicate, see langCharMap\r\n        // 'Ü': 'U', // duplicate, see langCharMap\r\n        // 'ö': 'o', // duplicate, see langCharMap\r\n        // 'Ö': 'O', // duplicate, see langCharMap\r\n        'ğ': 'g',\r\n        'Ğ': 'G',\r\n\r\n        // Vietnamese\r\n        'ả': 'a',\r\n        'Ả': 'A',\r\n        'ẳ': 'a',\r\n        'Ẳ': 'A',\r\n        'ẩ': 'a',\r\n        'Ẩ': 'A',\r\n        'đ': 'd',\r\n        'Đ': 'D',\r\n        'ẹ': 'e',\r\n        'Ẹ': 'E',\r\n        'ẽ': 'e',\r\n        'Ẽ': 'E',\r\n        'ẻ': 'e',\r\n        'Ẻ': 'E',\r\n        'ế': 'e',\r\n        'Ế': 'E',\r\n        'ề': 'e',\r\n        'Ề': 'E',\r\n        'ệ': 'e',\r\n        'Ệ': 'E',\r\n        'ễ': 'e',\r\n        'Ễ': 'E',\r\n        'ể': 'e',\r\n        'Ể': 'E',\r\n        'ỏ': 'o',\r\n        'ọ': 'o',\r\n        'Ọ': 'o',\r\n        'ố': 'o',\r\n        'Ố': 'O',\r\n        'ồ': 'o',\r\n        'Ồ': 'O',\r\n        'ổ': 'o',\r\n        'Ổ': 'O',\r\n        'ộ': 'o',\r\n        'Ộ': 'O',\r\n        'ỗ': 'o',\r\n        'Ỗ': 'O',\r\n        'ơ': 'o',\r\n        'Ơ': 'O',\r\n        'ớ': 'o',\r\n        'Ớ': 'O',\r\n        'ờ': 'o',\r\n        'Ờ': 'O',\r\n        'ợ': 'o',\r\n        'Ợ': 'O',\r\n        'ỡ': 'o',\r\n        'Ỡ': 'O',\r\n        'Ở': 'o',\r\n        'ở': 'o',\r\n        'ị': 'i',\r\n        'Ị': 'I',\r\n        'ĩ': 'i',\r\n        'Ĩ': 'I',\r\n        'ỉ': 'i',\r\n        'Ỉ': 'i',\r\n        'ủ': 'u',\r\n        'Ủ': 'U',\r\n        'ụ': 'u',\r\n        'Ụ': 'U',\r\n        'ũ': 'u',\r\n        'Ũ': 'U',\r\n        'ư': 'u',\r\n        'Ư': 'U',\r\n        'ứ': 'u',\r\n        'Ứ': 'U',\r\n        'ừ': 'u',\r\n        'Ừ': 'U',\r\n        'ự': 'u',\r\n        'Ự': 'U',\r\n        'ữ': 'u',\r\n        'Ữ': 'U',\r\n        'ử': 'u',\r\n        'Ử': 'ư',\r\n        'ỷ': 'y',\r\n        'Ỷ': 'y',\r\n        'ỳ': 'y',\r\n        'Ỳ': 'Y',\r\n        'ỵ': 'y',\r\n        'Ỵ': 'Y',\r\n        'ỹ': 'y',\r\n        'Ỹ': 'Y',\r\n        'ạ': 'a',\r\n        'Ạ': 'A',\r\n        'ấ': 'a',\r\n        'Ấ': 'A',\r\n        'ầ': 'a',\r\n        'Ầ': 'A',\r\n        'ậ': 'a',\r\n        'Ậ': 'A',\r\n        'ẫ': 'a',\r\n        'Ẫ': 'A',\r\n        // 'ă': 'a', // duplicate\r\n        // 'Ă': 'A', // duplicate\r\n        'ắ': 'a',\r\n        'Ắ': 'A',\r\n        'ằ': 'a',\r\n        'Ằ': 'A',\r\n        'ặ': 'a',\r\n        'Ặ': 'A',\r\n        'ẵ': 'a',\r\n        'Ẵ': 'A',\r\n        \"⓪\": \"0\",\r\n        \"①\": \"1\",\r\n        \"②\": \"2\",\r\n        \"③\": \"3\",\r\n        \"④\": \"4\",\r\n        \"⑤\": \"5\",\r\n        \"⑥\": \"6\",\r\n        \"⑦\": \"7\",\r\n        \"⑧\": \"8\",\r\n        \"⑨\": \"9\",\r\n        \"⑩\": \"10\",\r\n        \"⑪\": \"11\",\r\n        \"⑫\": \"12\",\r\n        \"⑬\": \"13\",\r\n        \"⑭\": \"14\",\r\n        \"⑮\": \"15\",\r\n        \"⑯\": \"16\",\r\n        \"⑰\": \"17\",\r\n        \"⑱\": \"18\",\r\n        \"⑲\": \"18\",\r\n        \"⑳\": \"18\",\r\n\r\n        \"⓵\": \"1\",\r\n        \"⓶\": \"2\",\r\n        \"⓷\": \"3\",\r\n        \"⓸\": \"4\",\r\n        \"⓹\": \"5\",\r\n        \"⓺\": \"6\",\r\n        \"⓻\": \"7\",\r\n        \"⓼\": \"8\",\r\n        \"⓽\": \"9\",\r\n        \"⓾\": \"10\",\r\n\r\n        \"⓿\": \"0\",\r\n        \"⓫\": \"11\",\r\n        \"⓬\": \"12\",\r\n        \"⓭\": \"13\",\r\n        \"⓮\": \"14\",\r\n        \"⓯\": \"15\",\r\n        \"⓰\": \"16\",\r\n        \"⓱\": \"17\",\r\n        \"⓲\": \"18\",\r\n        \"⓳\": \"19\",\r\n        \"⓴\": \"20\",\r\n\r\n        \"Ⓐ\": \"A\",\r\n        \"Ⓑ\": \"B\",\r\n        \"Ⓒ\": \"C\",\r\n        \"Ⓓ\": \"D\",\r\n        \"Ⓔ\": \"E\",\r\n        \"Ⓕ\": \"F\",\r\n        \"Ⓖ\": \"G\",\r\n        \"Ⓗ\": \"H\",\r\n        \"Ⓘ\": \"I\",\r\n        \"Ⓙ\": \"J\",\r\n        \"Ⓚ\": \"K\",\r\n        \"Ⓛ\": \"L\",\r\n        \"Ⓜ\": \"M\",\r\n        \"Ⓝ\": \"N\",\r\n        \"Ⓞ\": \"O\",\r\n        \"Ⓟ\": \"P\",\r\n        \"Ⓠ\": \"Q\",\r\n        \"Ⓡ\": \"R\",\r\n        \"Ⓢ\": \"S\",\r\n        \"Ⓣ\": \"T\",\r\n        \"Ⓤ\": \"U\",\r\n        \"Ⓥ\": \"V\",\r\n        \"Ⓦ\": \"W\",\r\n        \"Ⓧ\": \"X\",\r\n        \"Ⓨ\": \"Y\",\r\n        \"Ⓩ\": \"Z\",\r\n\r\n        \"ⓐ\": \"a\",\r\n        \"ⓑ\": \"b\",\r\n        \"ⓒ\": \"c\",\r\n        \"ⓓ\": \"d\",\r\n        \"ⓔ\": \"e\",\r\n        \"ⓕ\": \"f\",\r\n        \"ⓖ\": \"g\",\r\n        \"ⓗ\": \"h\",\r\n        \"ⓘ\": \"i\",\r\n        \"ⓙ\": \"j\",\r\n        \"ⓚ\": \"k\",\r\n        \"ⓛ\": \"l\",\r\n        \"ⓜ\": \"m\",\r\n        \"ⓝ\": \"n\",\r\n        \"ⓞ\": \"o\",\r\n        \"ⓟ\": \"p\",\r\n        \"ⓠ\": \"q\",\r\n        \"ⓡ\": \"r\",\r\n        \"ⓢ\": \"s\",\r\n        \"ⓣ\": \"t\",\r\n        \"ⓤ\": \"u\",\r\n        \"ⓦ\": \"v\",\r\n        \"ⓥ\": \"w\",\r\n        \"ⓧ\": \"x\",\r\n        \"ⓨ\": \"y\",\r\n        \"ⓩ\": \"z\",\r\n\r\n        // symbols\r\n        '“': '\"',\r\n        '”': '\"',\r\n        '‘': \"'\",\r\n        '’': \"'\",\r\n        '∂': 'd',\r\n        'ƒ': 'f',\r\n        '™': '(TM)',\r\n        '©': '(C)',\r\n        'œ': 'oe',\r\n        'Œ': 'OE',\r\n        '®': '(R)',\r\n        '†': '+',\r\n        '℠': '(SM)',\r\n        '…': '...',\r\n        '˚': 'o',\r\n        'º': 'o',\r\n        'ª': 'a',\r\n        '•': '*',\r\n        '၊': ',',\r\n        '။': '.',\r\n\r\n        // currency\r\n        '$': 'USD',\r\n        '€': 'EUR',\r\n        '₢': 'BRN',\r\n        '₣': 'FRF',\r\n        '£': 'GBP',\r\n        '₤': 'ITL',\r\n        '₦': 'NGN',\r\n        '₧': 'ESP',\r\n        '₩': 'KRW',\r\n        '₪': 'ILS',\r\n        '₫': 'VND',\r\n        '₭': 'LAK',\r\n        '₮': 'MNT',\r\n        '₯': 'GRD',\r\n        '₱': 'ARS',\r\n        '₲': 'PYG',\r\n        '₳': 'ARA',\r\n        '₴': 'UAH',\r\n        '₵': 'GHS',\r\n        '¢': 'cent',\r\n        '¥': 'CNY',\r\n        '元': 'CNY',\r\n        '円': 'YEN',\r\n        '﷼': 'IRR',\r\n        '₠': 'EWE',\r\n        '฿': 'THB',\r\n        '₨': 'INR',\r\n        '₹': 'INR',\r\n        '₰': 'PF',\r\n        '₺': 'TRY',\r\n        '؋': 'AFN',\r\n        '₼': 'AZN',\r\n        'лв': 'BGN',\r\n        '៛': 'KHR',\r\n        '₡': 'CRC',\r\n        '₸': 'KZT',\r\n        'ден': 'MKD',\r\n        'zł': 'PLN',\r\n        '₽': 'RUB',\r\n        '₾': 'GEL'\r\n\r\n    };\r\n\r\n    /**\r\n     * special look ahead character array\r\n     * These characters form with consonants to become 'single'/consonant combo\r\n     * @type [Array]\r\n     */\r\n    var lookAheadCharArray = [\r\n        // burmese\r\n        '်',\r\n\r\n        // Dhivehi\r\n        'ް'\r\n    ];\r\n\r\n    /**\r\n     * diatricMap for languages where transliteration changes entirely as more diatrics are added\r\n     * @type {Object}\r\n     */\r\n    var diatricMap = {\r\n        // Burmese\r\n        // dependent vowels\r\n        'ာ': 'a',\r\n        'ါ': 'a',\r\n        'ေ': 'e',\r\n        'ဲ': 'e',\r\n        'ိ': 'i',\r\n        'ီ': 'i',\r\n        'ို': 'o',\r\n        'ု': 'u',\r\n        'ူ': 'u',\r\n        'ေါင်': 'aung',\r\n        'ော': 'aw',\r\n        'ော်': 'aw',\r\n        'ေါ': 'aw',\r\n        'ေါ်': 'aw',\r\n        '်': '်', // this is special case but the character will be converted to latin in the code\r\n        'က်': 'et',\r\n        'ိုက်': 'aik',\r\n        'ောက်': 'auk',\r\n        'င်': 'in',\r\n        'ိုင်': 'aing',\r\n        'ောင်': 'aung',\r\n        'စ်': 'it',\r\n        'ည်': 'i',\r\n        'တ်': 'at',\r\n        'ိတ်': 'eik',\r\n        'ုတ်': 'ok',\r\n        'ွတ်': 'ut',\r\n        'ေတ်': 'it',\r\n        'ဒ်': 'd',\r\n        'ိုဒ်': 'ok',\r\n        'ုဒ်': 'ait',\r\n        'န်': 'an',\r\n        'ာန်': 'an',\r\n        'ိန်': 'ein',\r\n        'ုန်': 'on',\r\n        'ွန်': 'un',\r\n        'ပ်': 'at',\r\n        'ိပ်': 'eik',\r\n        'ုပ်': 'ok',\r\n        'ွပ်': 'ut',\r\n        'န်ုပ်': 'nub',\r\n        'မ်': 'an',\r\n        'ိမ်': 'ein',\r\n        'ုမ်': 'on',\r\n        'ွမ်': 'un',\r\n        'ယ်': 'e',\r\n        'ိုလ်': 'ol',\r\n        'ဉ်': 'in',\r\n        'ံ': 'an',\r\n        'ိံ': 'ein',\r\n        'ုံ': 'on',\r\n\r\n        // Dhivehi\r\n        'ައް': 'ah',\r\n        'ަށް': 'ah'\r\n    };\r\n\r\n    /**\r\n     * langCharMap language specific characters translations\r\n     * @type   {Object}\r\n     */\r\n    var langCharMap = {\r\n        'en': {}, // default language\r\n\r\n        'az': { // Azerbaijani\r\n            'ç': 'c',\r\n            'ə': 'e',\r\n            'ğ': 'g',\r\n            'ı': 'i',\r\n            'ö': 'o',\r\n            'ş': 's',\r\n            'ü': 'u',\r\n            'Ç': 'C',\r\n            'Ə': 'E',\r\n            'Ğ': 'G',\r\n            'İ': 'I',\r\n            'Ö': 'O',\r\n            'Ş': 'S',\r\n            'Ü': 'U'\r\n        },\r\n\r\n        'cs': { // Czech\r\n            'č': 'c',\r\n            'ď': 'd',\r\n            'ě': 'e',\r\n            'ň': 'n',\r\n            'ř': 'r',\r\n            'š': 's',\r\n            'ť': 't',\r\n            'ů': 'u',\r\n            'ž': 'z',\r\n            'Č': 'C',\r\n            'Ď': 'D',\r\n            'Ě': 'E',\r\n            'Ň': 'N',\r\n            'Ř': 'R',\r\n            'Š': 'S',\r\n            'Ť': 'T',\r\n            'Ů': 'U',\r\n            'Ž': 'Z'\r\n        },\r\n\r\n        'fi': { // Finnish\r\n            // 'å': 'a', duplicate see charMap/latin\r\n            // 'Å': 'A', duplicate see charMap/latin\r\n            'ä': 'a', // ok\r\n            'Ä': 'A', // ok\r\n            'ö': 'o', // ok\r\n            'Ö': 'O' // ok\r\n        },\r\n\r\n        'hu': { // Hungarian\r\n            'ä': 'a', // ok\r\n            'Ä': 'A', // ok\r\n            // 'á': 'a', duplicate see charMap/latin\r\n            // 'Á': 'A', duplicate see charMap/latin\r\n            'ö': 'o', // ok\r\n            'Ö': 'O', // ok\r\n            // 'ő': 'o', duplicate see charMap/latin\r\n            // 'Ő': 'O', duplicate see charMap/latin\r\n            'ü': 'u',\r\n            'Ü': 'U',\r\n            'ű': 'u',\r\n            'Ű': 'U'\r\n        },\r\n\r\n        'lt': { // Lithuanian\r\n            'ą': 'a',\r\n            'č': 'c',\r\n            'ę': 'e',\r\n            'ė': 'e',\r\n            'į': 'i',\r\n            'š': 's',\r\n            'ų': 'u',\r\n            'ū': 'u',\r\n            'ž': 'z',\r\n            'Ą': 'A',\r\n            'Č': 'C',\r\n            'Ę': 'E',\r\n            'Ė': 'E',\r\n            'Į': 'I',\r\n            'Š': 'S',\r\n            'Ų': 'U',\r\n            'Ū': 'U'\r\n        },\r\n\r\n        'lv': { // Latvian\r\n            'ā': 'a',\r\n            'č': 'c',\r\n            'ē': 'e',\r\n            'ģ': 'g',\r\n            'ī': 'i',\r\n            'ķ': 'k',\r\n            'ļ': 'l',\r\n            'ņ': 'n',\r\n            'š': 's',\r\n            'ū': 'u',\r\n            'ž': 'z',\r\n            'Ā': 'A',\r\n            'Č': 'C',\r\n            'Ē': 'E',\r\n            'Ģ': 'G',\r\n            'Ī': 'i',\r\n            'Ķ': 'k',\r\n            'Ļ': 'L',\r\n            'Ņ': 'N',\r\n            'Š': 'S',\r\n            'Ū': 'u',\r\n            'Ž': 'Z'\r\n        },\r\n\r\n        'pl': { // Polish\r\n            'ą': 'a',\r\n            'ć': 'c',\r\n            'ę': 'e',\r\n            'ł': 'l',\r\n            'ń': 'n',\r\n            'ó': 'o',\r\n            'ś': 's',\r\n            'ź': 'z',\r\n            'ż': 'z',\r\n            'Ą': 'A',\r\n            'Ć': 'C',\r\n            'Ę': 'e',\r\n            'Ł': 'L',\r\n            'Ń': 'N',\r\n            'Ó': 'O',\r\n            'Ś': 'S',\r\n            'Ź': 'Z',\r\n            'Ż': 'Z'\r\n        },\r\n\r\n        'sv': { // Swedish\r\n            // 'å': 'a', duplicate see charMap/latin\r\n            // 'Å': 'A', duplicate see charMap/latin\r\n            'ä': 'a', // ok\r\n            'Ä': 'A', // ok\r\n            'ö': 'o', // ok\r\n            'Ö': 'O' // ok\r\n        },\r\n\r\n        'sk': { // Slovak\r\n            'ä': 'a',\r\n            'Ä': 'A'\r\n        },\r\n\r\n        'sr': { // Serbian\r\n            'љ': 'lj',\r\n            'њ': 'nj',\r\n            'Љ': 'Lj',\r\n            'Њ': 'Nj',\r\n            'đ': 'dj',\r\n            'Đ': 'Dj'\r\n        },\r\n\r\n        'tr': { // Turkish\r\n            'Ü': 'U',\r\n            'Ö': 'O',\r\n            'ü': 'u',\r\n            'ö': 'o'\r\n        }\r\n    };\r\n\r\n    /**\r\n     * symbolMap language specific symbol translations\r\n     * translations must be transliterated already\r\n     * @type   {Object}\r\n     */\r\n    var symbolMap = {\r\n        'ar': {\r\n            '∆': 'delta',\r\n            '∞': 'la-nihaya',\r\n            '♥': 'hob',\r\n            '&': 'wa',\r\n            '|': 'aw',\r\n            '<': 'aqal-men',\r\n            '>': 'akbar-men',\r\n            '∑': 'majmou',\r\n            '¤': 'omla'\r\n        },\r\n\r\n        'az': {},\r\n\r\n        'ca': {\r\n            '∆': 'delta',\r\n            '∞': 'infinit',\r\n            '♥': 'amor',\r\n            '&': 'i',\r\n            '|': 'o',\r\n            '<': 'menys que',\r\n            '>': 'mes que',\r\n            '∑': 'suma dels',\r\n            '¤': 'moneda'\r\n        },\r\n\r\n        'cs': {\r\n            '∆': 'delta',\r\n            '∞': 'nekonecno',\r\n            '♥': 'laska',\r\n            '&': 'a',\r\n            '|': 'nebo',\r\n            '<': 'mensi nez',\r\n            '>': 'vetsi nez',\r\n            '∑': 'soucet',\r\n            '¤': 'mena'\r\n        },\r\n\r\n        'de': {\r\n            '∆': 'delta',\r\n            '∞': 'unendlich',\r\n            '♥': 'Liebe',\r\n            '&': 'und',\r\n            '|': 'oder',\r\n            '<': 'kleiner als',\r\n            '>': 'groesser als',\r\n            '∑': 'Summe von',\r\n            '¤': 'Waehrung'\r\n        },\r\n\r\n        'dv': {\r\n            '∆': 'delta',\r\n            '∞': 'kolunulaa',\r\n            '♥': 'loabi',\r\n            '&': 'aai',\r\n            '|': 'noonee',\r\n            '<': 'ah vure kuda',\r\n            '>': 'ah vure bodu',\r\n            '∑': 'jumula',\r\n            '¤': 'faisaa'\r\n        },\r\n\r\n        'en': {\r\n            '∆': 'delta',\r\n            '∞': 'infinity',\r\n            '♥': 'love',\r\n            '&': 'and',\r\n            '|': 'or',\r\n            '<': 'less than',\r\n            '>': 'greater than',\r\n            '∑': 'sum',\r\n            '¤': 'currency'\r\n        },\r\n\r\n        'es': {\r\n            '∆': 'delta',\r\n            '∞': 'infinito',\r\n            '♥': 'amor',\r\n            '&': 'y',\r\n            '|': 'u',\r\n            '<': 'menos que',\r\n            '>': 'mas que',\r\n            '∑': 'suma de los',\r\n            '¤': 'moneda'\r\n        },\r\n\r\n        'fa': {\r\n            '∆': 'delta',\r\n            '∞': 'bi-nahayat',\r\n            '♥': 'eshgh',\r\n            '&': 'va',\r\n            '|': 'ya',\r\n            '<': 'kamtar-az',\r\n            '>': 'bishtar-az',\r\n            '∑': 'majmooe',\r\n            '¤': 'vahed'\r\n        },\r\n\r\n        'fi': {\r\n            '∆': 'delta',\r\n            '∞': 'aarettomyys',\r\n            '♥': 'rakkaus',\r\n            '&': 'ja',\r\n            '|': 'tai',\r\n            '<': 'pienempi kuin',\r\n            '>': 'suurempi kuin',\r\n            '∑': 'summa',\r\n            '¤': 'valuutta'\r\n        },\r\n\r\n        'fr': {\r\n            '∆': 'delta',\r\n            '∞': 'infiniment',\r\n            '♥': 'Amour',\r\n            '&': 'et',\r\n            '|': 'ou',\r\n            '<': 'moins que',\r\n            '>': 'superieure a',\r\n            '∑': 'somme des',\r\n            '¤': 'monnaie'\r\n        },\r\n\r\n        'ge': {\r\n            '∆': 'delta',\r\n            '∞': 'usasruloba',\r\n            '♥': 'siqvaruli',\r\n            '&': 'da',\r\n            '|': 'an',\r\n            '<': 'naklebi',\r\n            '>': 'meti',\r\n            '∑': 'jami',\r\n            '¤': 'valuta'\r\n        },\r\n\r\n        'gr': {},\r\n\r\n        'hu': {\r\n            '∆': 'delta',\r\n            '∞': 'vegtelen',\r\n            '♥': 'szerelem',\r\n            '&': 'es',\r\n            '|': 'vagy',\r\n            '<': 'kisebb mint',\r\n            '>': 'nagyobb mint',\r\n            '∑': 'szumma',\r\n            '¤': 'penznem'\r\n        },\r\n\r\n        'it': {\r\n            '∆': 'delta',\r\n            '∞': 'infinito',\r\n            '♥': 'amore',\r\n            '&': 'e',\r\n            '|': 'o',\r\n            '<': 'minore di',\r\n            '>': 'maggiore di',\r\n            '∑': 'somma',\r\n            '¤': 'moneta'\r\n        },\r\n\r\n        'lt': {\r\n            '∆': 'delta',\r\n            '∞': 'begalybe',\r\n            '♥': 'meile',\r\n            '&': 'ir',\r\n            '|': 'ar',\r\n            '<': 'maziau nei',\r\n            '>': 'daugiau nei',\r\n            '∑': 'suma',\r\n            '¤': 'valiuta'\r\n        },\r\n\r\n        'lv': {\r\n            '∆': 'delta',\r\n            '∞': 'bezgaliba',\r\n            '♥': 'milestiba',\r\n            '&': 'un',\r\n            '|': 'vai',\r\n            '<': 'mazak neka',\r\n            '>': 'lielaks neka',\r\n            '∑': 'summa',\r\n            '¤': 'valuta'\r\n        },\r\n\r\n        'my': {\r\n            '∆': 'kwahkhyaet',\r\n            '∞': 'asaonasme',\r\n            '♥': 'akhyait',\r\n            '&': 'nhin',\r\n            '|': 'tho',\r\n            '<': 'ngethaw',\r\n            '>': 'kyithaw',\r\n            '∑': 'paungld',\r\n            '¤': 'ngwekye'\r\n        },\r\n\r\n        'mk': {},\r\n\r\n        'nl': {\r\n            '∆': 'delta',\r\n            '∞': 'oneindig',\r\n            '♥': 'liefde',\r\n            '&': 'en',\r\n            '|': 'of',\r\n            '<': 'kleiner dan',\r\n            '>': 'groter dan',\r\n            '∑': 'som',\r\n            '¤': 'valuta'\r\n        },\r\n\r\n        'pl': {\r\n            '∆': 'delta',\r\n            '∞': 'nieskonczonosc',\r\n            '♥': 'milosc',\r\n            '&': 'i',\r\n            '|': 'lub',\r\n            '<': 'mniejsze niz',\r\n            '>': 'wieksze niz',\r\n            '∑': 'suma',\r\n            '¤': 'waluta'\r\n        },\r\n\r\n        'pt': {\r\n            '∆': 'delta',\r\n            '∞': 'infinito',\r\n            '♥': 'amor',\r\n            '&': 'e',\r\n            '|': 'ou',\r\n            '<': 'menor que',\r\n            '>': 'maior que',\r\n            '∑': 'soma',\r\n            '¤': 'moeda'\r\n        },\r\n\r\n        'ro': {\r\n            '∆': 'delta',\r\n            '∞': 'infinit',\r\n            '♥': 'dragoste',\r\n            '&': 'si',\r\n            '|': 'sau',\r\n            '<': 'mai mic ca',\r\n            '>': 'mai mare ca',\r\n            '∑': 'suma',\r\n            '¤': 'valuta'\r\n        },\r\n\r\n        'ru': {\r\n            '∆': 'delta',\r\n            '∞': 'beskonechno',\r\n            '♥': 'lubov',\r\n            '&': 'i',\r\n            '|': 'ili',\r\n            '<': 'menshe',\r\n            '>': 'bolshe',\r\n            '∑': 'summa',\r\n            '¤': 'valjuta'\r\n        },\r\n\r\n        'sk': {\r\n            '∆': 'delta',\r\n            '∞': 'nekonecno',\r\n            '♥': 'laska',\r\n            '&': 'a',\r\n            '|': 'alebo',\r\n            '<': 'menej ako',\r\n            '>': 'viac ako',\r\n            '∑': 'sucet',\r\n            '¤': 'mena'\r\n        },\r\n\r\n        'sr': {},\r\n\r\n        'tr': {\r\n            '∆': 'delta',\r\n            '∞': 'sonsuzluk',\r\n            '♥': 'ask',\r\n            '&': 've',\r\n            '|': 'veya',\r\n            '<': 'kucuktur',\r\n            '>': 'buyuktur',\r\n            '∑': 'toplam',\r\n            '¤': 'para birimi'\r\n        },\r\n\r\n        'uk': {\r\n            '∆': 'delta',\r\n            '∞': 'bezkinechnist',\r\n            '♥': 'lubov',\r\n            '&': 'i',\r\n            '|': 'abo',\r\n            '<': 'menshe',\r\n            '>': 'bilshe',\r\n            '∑': 'suma',\r\n            '¤': 'valjuta'\r\n        },\r\n\r\n        'vn': {\r\n            '∆': 'delta',\r\n            '∞': 'vo cuc',\r\n            '♥': 'yeu',\r\n            '&': 'va',\r\n            '|': 'hoac',\r\n            '<': 'nho hon',\r\n            '>': 'lon hon',\r\n            '∑': 'tong',\r\n            '¤': 'tien te'\r\n        }\r\n    };\r\n\r\n    var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\r\n\r\n    var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\r\n\r\n    var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\r\n\r\n    /**\r\n     * getSlug\r\n     * @param  {string} input input string\r\n     * @param  {object|string} opts config object or separator string/char\r\n     * @api    public\r\n     * @return {string}  sluggified string\r\n     */\r\n    var getSlug = function getSlug(input, opts) {\r\n        var separator = '-';\r\n        var result = '';\r\n        var diatricString = '';\r\n        var convertSymbols = true;\r\n        var customReplacements = {};\r\n        var maintainCase;\r\n        var titleCase;\r\n        var truncate;\r\n        var uricFlag;\r\n        var uricNoSlashFlag;\r\n        var markFlag;\r\n        var symbol;\r\n        var langChar;\r\n        var lucky;\r\n        var i;\r\n        var ch;\r\n        var l;\r\n        var lastCharWasSymbol;\r\n        var lastCharWasDiatric;\r\n        var allowedChars = '';\r\n\r\n        if (typeof input !== 'string') {\r\n            return '';\r\n        }\r\n\r\n        if (typeof opts === 'string') {\r\n            separator = opts;\r\n        }\r\n\r\n        symbol = symbolMap.en;\r\n        langChar = langCharMap.en;\r\n\r\n        if (typeof opts === 'object') {\r\n            maintainCase = opts.maintainCase || false;\r\n            customReplacements = (opts.custom && typeof opts.custom === 'object') ? opts.custom : customReplacements;\r\n            truncate = (+opts.truncate > 1 && opts.truncate) || false;\r\n            uricFlag = opts.uric || false;\r\n            uricNoSlashFlag = opts.uricNoSlash || false;\r\n            markFlag = opts.mark || false;\r\n            convertSymbols = (opts.symbols === false || opts.lang === false) ? false : true;\r\n            separator = opts.separator || separator;\r\n\r\n            if (uricFlag) {\r\n                allowedChars += uricChars;\r\n            }\r\n\r\n            if (uricNoSlashFlag) {\r\n                allowedChars += uricNoSlashChars;\r\n            }\r\n\r\n            if (markFlag) {\r\n                allowedChars += markChars;\r\n            }\r\n\r\n            symbol = (opts.lang && symbolMap[opts.lang] && convertSymbols) ?\r\n                symbolMap[opts.lang] : (convertSymbols ? symbolMap.en : {});\r\n\r\n            langChar = (opts.lang && langCharMap[opts.lang]) ?\r\n                langCharMap[opts.lang] :\r\n                opts.lang === false || opts.lang === true ? {} : langCharMap.en;\r\n\r\n            // if titleCase config is an Array, rewrite to object format\r\n            if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\r\n                opts.titleCase.forEach(function (v) {\r\n                    customReplacements[v + ''] = v + '';\r\n                });\r\n\r\n                titleCase = true;\r\n            } else {\r\n                titleCase = !!opts.titleCase;\r\n            }\r\n\r\n            // if custom config is an Array, rewrite to object format\r\n            if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\r\n                opts.custom.forEach(function (v) {\r\n                    customReplacements[v + ''] = v + '';\r\n                });\r\n            }\r\n\r\n            // custom replacements\r\n            Object.keys(customReplacements).forEach(function (v) {\r\n                var r;\r\n\r\n                if (v.length > 1) {\r\n                    r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\r\n                } else {\r\n                    r = new RegExp(escapeChars(v), 'gi');\r\n                }\r\n\r\n                input = input.replace(r, customReplacements[v]);\r\n            });\r\n\r\n            // add all custom replacement to allowed charlist\r\n            for (ch in customReplacements) {\r\n                allowedChars += ch;\r\n            }\r\n        }\r\n\r\n        allowedChars += separator;\r\n\r\n        // escape all necessary chars\r\n        allowedChars = escapeChars(allowedChars);\r\n\r\n        // trim whitespaces\r\n        input = input.replace(/(^\\s+|\\s+$)/g, '');\r\n\r\n        lastCharWasSymbol = false;\r\n        lastCharWasDiatric = false;\r\n\r\n        for (i = 0, l = input.length; i < l; i++) {\r\n            ch = input[i];\r\n\r\n            if (isReplacedCustomChar(ch, customReplacements)) {\r\n                // don't convert a already converted char\r\n                lastCharWasSymbol = false;\r\n            } else if (langChar[ch]) {\r\n                // process language specific diactrics chars conversion\r\n                ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\r\n\r\n                lastCharWasSymbol = false;\r\n            } else if (ch in charMap) {\r\n                // the transliteration changes entirely when some special characters are added\r\n                if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\r\n                    diatricString += ch;\r\n                    ch = '';\r\n                } else if (lastCharWasDiatric === true) {\r\n                    ch = diatricMap[diatricString] + charMap[ch];\r\n                    diatricString = '';\r\n                } else {\r\n                    // process diactrics chars\r\n                    ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\r\n                }\r\n\r\n                lastCharWasSymbol = false;\r\n                lastCharWasDiatric = false;\r\n            } else if (ch in diatricMap) {\r\n                diatricString += ch;\r\n                ch = '';\r\n                // end of string, put the whole meaningful word\r\n                if (i === l - 1) {\r\n                    ch = diatricMap[diatricString];\r\n                }\r\n                lastCharWasDiatric = true;\r\n            } else if (\r\n                // process symbol chars\r\n                symbol[ch] && !(uricFlag && uricChars\r\n                    .indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars\r\n                    // .indexOf(ch) !== -1) && !(markFlag && markChars\r\n                    .indexOf(ch) !== -1)) {\r\n                ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\r\n                ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\r\n\r\n                lastCharWasSymbol = true;\r\n            } else {\r\n                if (lastCharWasDiatric === true) {\r\n                    ch = diatricMap[diatricString] + ch;\r\n                    diatricString = '';\r\n                    lastCharWasDiatric = false;\r\n                } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\r\n                    // process latin chars\r\n                    ch = ' ' + ch;\r\n                }\r\n                lastCharWasSymbol = false;\r\n            }\r\n\r\n            // add allowed chars\r\n            result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\r\n        }\r\n\r\n        if (titleCase) {\r\n            result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\r\n                var j = i.toUpperCase() + (r !== null ? r : '');\r\n                return (Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0) ? j : j.toLowerCase();\r\n            });\r\n        }\r\n\r\n        // eliminate duplicate separators\r\n        // add separator\r\n        // trim separators from start and end\r\n        result = result.replace(/\\s+/g, separator)\r\n            .replace(new RegExp('\\\\' + separator + '+', 'g'), separator)\r\n            .replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\r\n\r\n        if (truncate && result.length > truncate) {\r\n            lucky = result.charAt(truncate) === separator;\r\n            result = result.slice(0, truncate);\r\n\r\n            if (!lucky) {\r\n                result = result.slice(0, result.lastIndexOf(separator));\r\n            }\r\n        }\r\n\r\n        if (!maintainCase && !titleCase) {\r\n            result = result.toLowerCase();\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * createSlug curried(opts)(input)\r\n     * @param   {object|string} opts config object or input string\r\n     * @return  {Function} function getSlugWithConfig()\r\n     **/\r\n    var createSlug = function createSlug(opts) {\r\n\r\n        /**\r\n         * getSlugWithConfig\r\n         * @param   {string} input string\r\n         * @return  {string} slug string\r\n         */\r\n        return function getSlugWithConfig(input) {\r\n            return getSlug(input, opts);\r\n        };\r\n    };\r\n\r\n    /**\r\n     * escape Chars\r\n     * @param   {string} input string\r\n     */\r\n    var escapeChars = function escapeChars(input) {\r\n        return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\r\n    };\r\n\r\n    /**\r\n     * check if the char is an already converted char from custom list\r\n     * @param   {char} ch character to check\r\n     * @param   {object} customReplacements custom translation map\r\n     */\r\n    var isReplacedCustomChar = function (ch, customReplacements) {\r\n        for (var c in customReplacements) {\r\n            if (customReplacements[c] === ch) {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n\r\n        // export functions for use in Node\r\n        module.exports = getSlug;\r\n        module.exports.createSlug = createSlug;\r\n    } else if (typeof define !== 'undefined' && define.amd) {\r\n\r\n        // export function for use in AMD\r\n        define([], function () {\r\n            return getSlug;\r\n        });\r\n    } else {\r\n\r\n        // don't overwrite global if exists\r\n        try {\r\n            if (root.getSlug || root.createSlug) {\r\n                throw 'speakingurl: globals exists /(getSlug|createSlug)/';\r\n            } else {\r\n                root.getSlug = getSlug;\r\n                root.createSlug = createSlug;\r\n            }\r\n        } catch (e) {}\r\n    }\r\n})(this);", "module.exports = require('./lib/speakingurl');\r\n", "'use strict';\r\n\r\n// Found this seed-based random generator somewhere\r\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\r\n\r\nvar seed = 1;\r\n\r\n/**\r\n * return a random number based on a seed\r\n * @param seed\r\n * @returns {number}\r\n */\r\nfunction getNextValue() {\r\n    seed = (seed * 9301 + 49297) % 233280;\r\n    return seed/(233280.0);\r\n}\r\n\r\nfunction setSeed(_seed_) {\r\n    seed = _seed_;\r\n}\r\n\r\nmodule.exports = {\r\n    nextValue: getNextValue,\r\n    seed: setSeed\r\n};\r\n", "'use strict';\r\n\r\nvar randomFromSeed = require('./random/random-from-seed');\r\n\r\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\r\nvar alphabet;\r\nvar previousSeed;\r\n\r\nvar shuffled;\r\n\r\nfunction reset() {\r\n    shuffled = false;\r\n}\r\n\r\nfunction setCharacters(_alphabet_) {\r\n    if (!_alphabet_) {\r\n        if (alphabet !== ORIGINAL) {\r\n            alphabet = ORIGINAL;\r\n            reset();\r\n        }\r\n        return;\r\n    }\r\n\r\n    if (_alphabet_ === alphabet) {\r\n        return;\r\n    }\r\n\r\n    if (_alphabet_.length !== ORIGINAL.length) {\r\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\r\n    }\r\n\r\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\r\n       return ind !== arr.lastIndexOf(item);\r\n    });\r\n\r\n    if (unique.length) {\r\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\r\n    }\r\n\r\n    alphabet = _alphabet_;\r\n    reset();\r\n}\r\n\r\nfunction characters(_alphabet_) {\r\n    setCharacters(_alphabet_);\r\n    return alphabet;\r\n}\r\n\r\nfunction setSeed(seed) {\r\n    randomFromSeed.seed(seed);\r\n    if (previousSeed !== seed) {\r\n        reset();\r\n        previousSeed = seed;\r\n    }\r\n}\r\n\r\nfunction shuffle() {\r\n    if (!alphabet) {\r\n        setCharacters(ORIGINAL);\r\n    }\r\n\r\n    var sourceArray = alphabet.split('');\r\n    var targetArray = [];\r\n    var r = randomFromSeed.nextValue();\r\n    var characterIndex;\r\n\r\n    while (sourceArray.length > 0) {\r\n        r = randomFromSeed.nextValue();\r\n        characterIndex = Math.floor(r * sourceArray.length);\r\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\r\n    }\r\n    return targetArray.join('');\r\n}\r\n\r\nfunction getShuffled() {\r\n    if (shuffled) {\r\n        return shuffled;\r\n    }\r\n    shuffled = shuffle();\r\n    return shuffled;\r\n}\r\n\r\n/**\r\n * lookup shuffled letter\r\n * @param index\r\n * @returns {string}\r\n */\r\nfunction lookup(index) {\r\n    var alphabetShuffled = getShuffled();\r\n    return alphabetShuffled[index];\r\n}\r\n\r\nfunction get () {\r\n  return alphabet || ORIGINAL;\r\n}\r\n\r\nmodule.exports = {\r\n    get: get,\r\n    characters: characters,\r\n    seed: setSeed,\r\n    lookup: lookup,\r\n    shuffled: getShuffled\r\n};\r\n", "'use strict';\r\n\r\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\r\n\r\nvar randomByte;\r\n\r\nif (!crypto || !crypto.getRandomValues) {\r\n    randomByte = function(size) {\r\n        var bytes = [];\r\n        for (var i = 0; i < size; i++) {\r\n            bytes.push(Math.floor(Math.random() * 256));\r\n        }\r\n        return bytes;\r\n    };\r\n} else {\r\n    randomByte = function(size) {\r\n        return crypto.getRandomValues(new Uint8Array(size));\r\n    };\r\n}\r\n\r\nmodule.exports = randomByte;\r\n", "// This file replaces `format.js` in bundlers like webpack or Rollup,\r\n// according to `browser` config in `package.json`.\r\n\r\nmodule.exports = function (random, alphabet, size) {\r\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\r\n  // to the alphabet, we apply bitmask on them. We look for the closest\r\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\r\n  // 30 symbols in the alphabet, we will take 31 (00011111).\r\n  // We do not use faster Math.clz32, because it is not available in browsers.\r\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\r\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\r\n  // which is bigger than the alphabet). As a result, we will need more bytes,\r\n  // than ID size, because we will refuse bytes bigger than the alphabet.\r\n\r\n  // Every hardware random generator call is costly,\r\n  // because we need to wait for entropy collection. This is why often it will\r\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\r\n\r\n  // Here we calculate how many random bytes should we call in advance.\r\n  // It depends on ID length, mask / alphabet size and magic number 1.6\r\n  // (which was selected according benchmarks).\r\n\r\n  // -~f => Math.ceil(f) if n is float number\r\n  // -~i => i + 1 if n is integer number\r\n  var step = -~(1.6 * mask * size / alphabet.length)\r\n  var id = ''\r\n\r\n  while (true) {\r\n    var bytes = random(step)\r\n    // Compact alternative for `for (var i = 0; i < step; i++)`\r\n    var i = step\r\n    while (i--) {\r\n      // If random byte is bigger than alphabet even after bitmask,\r\n      // we refuse it by `|| ''`.\r\n      id += alphabet[bytes[i] & mask] || ''\r\n      // More compact than `id.length + 1 === size`\r\n      if (id.length === +size) return id\r\n    }\r\n  }\r\n}\r\n", "'use strict';\r\n\r\nvar alphabet = require('./alphabet');\r\nvar random = require('./random/random-byte');\r\nvar format = require('nanoid/format');\r\n\r\nfunction generate(number) {\r\n    var loopCounter = 0;\r\n    var done;\r\n\r\n    var str = '';\r\n\r\n    while (!done) {\r\n        str = str + format(random, alphabet.get(), 1);\r\n        done = number < (Math.pow(16, loopCounter + 1 ) );\r\n        loopCounter++;\r\n    }\r\n    return str;\r\n}\r\n\r\nmodule.exports = generate;\r\n", "'use strict';\r\n\r\nvar generate = require('./generate');\r\nvar alphabet = require('./alphabet');\r\n\r\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\r\n// This number should be updated every year or so to keep the generated id short.\r\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\r\nvar REDUCE_TIME = 1567752802062;\r\n\r\n// don't change unless we change the algos or REDUCE_TIME\r\n// must be an integer and less than 16\r\nvar version = 7;\r\n\r\n// Counter is used when shortid is called multiple times in one second.\r\nvar counter;\r\n\r\n// Remember the last time shortid was called in case counter is needed.\r\nvar previousSeconds;\r\n\r\n/**\r\n * Generate unique id\r\n * Returns string id\r\n */\r\nfunction build(clusterWorkerId) {\r\n    var str = '';\r\n\r\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\r\n\r\n    if (seconds === previousSeconds) {\r\n        counter++;\r\n    } else {\r\n        counter = 0;\r\n        previousSeconds = seconds;\r\n    }\r\n\r\n    str = str + generate(version);\r\n    str = str + generate(clusterWorkerId);\r\n    if (counter > 0) {\r\n        str = str + generate(counter);\r\n    }\r\n    str = str + generate(seconds);\r\n    return str;\r\n}\r\n\r\nmodule.exports = build;\r\n", "'use strict';\r\nvar alphabet = require('./alphabet');\r\n\r\nfunction isShortId(id) {\r\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\r\n        return false;\r\n    }\r\n\r\n    var nonAlphabetic = new RegExp('[^' +\r\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\r\n    ']');\r\n    return !nonAlphabetic.test(id);\r\n}\r\n\r\nmodule.exports = isShortId;\r\n", "'use strict';\r\n\r\nmodule.exports = 0;\r\n", "'use strict';\r\n\r\nvar alphabet = require('./alphabet');\r\nvar build = require('./build');\r\nvar isValid = require('./is-valid');\r\n\r\n// if you are using cluster or multiple servers use this to make each instance\r\n// has a unique value for worker\r\n// Note: I don't know if this is automatically set when using third\r\n// party cluster solutions such as pm2.\r\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\r\n\r\n/**\r\n * Set the seed.\r\n * Highly recommended if you don't want people to try to figure out your id schema.\r\n * exposed as shortid.seed(int)\r\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\r\n */\r\nfunction seed(seedValue) {\r\n    alphabet.seed(seedValue);\r\n    return module.exports;\r\n}\r\n\r\n/**\r\n * Set the cluster worker or machine id\r\n * exposed as shortid.worker(int)\r\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\r\n * returns shortid module so it can be chained.\r\n */\r\nfunction worker(workerId) {\r\n    clusterWorkerId = workerId;\r\n    return module.exports;\r\n}\r\n\r\n/**\r\n *\r\n * sets new characters to use in the alphabet\r\n * returns the shuffled alphabet\r\n */\r\nfunction characters(newCharacters) {\r\n    if (newCharacters !== undefined) {\r\n        alphabet.characters(newCharacters);\r\n    }\r\n\r\n    return alphabet.shuffled();\r\n}\r\n\r\n/**\r\n * Generate unique id\r\n * Returns string id\r\n */\r\nfunction generate() {\r\n  return build(clusterWorkerId);\r\n}\r\n\r\n// Export all other functions as properties of the generate function\r\nmodule.exports = generate;\r\nmodule.exports.generate = generate;\r\nmodule.exports.seed = seed;\r\nmodule.exports.worker = worker;\r\nmodule.exports.characters = characters;\r\nmodule.exports.isValid = isValid;\r\n", "'use strict';\r\nmodule.exports = require('./lib/index');\r\n", "const _ = require('deepdash')(require('lodash'));\r\n\r\nconst getSlug = require('speakingurl');\r\n\r\nconst shortId = require('shortid');\r\n\r\nmodule.exports = function plugin(schema, options) {\r\n  options = _.merge(\r\n    {\r\n      separator: '-',\r\n      lang: 'en',\r\n      truncate: 120,\r\n      backwardCompatible: true,\r\n    },\r\n    options,\r\n  );\r\n\r\n  const slugs = [];\r\n\r\n  function schemaTraversal(schema, basePath, cb) {\r\n    if (basePath) basePath += '.';\r\n    schema.eachPath((schemaPath, schemaType) => {\r\n      if (schemaType.caster && schemaType.caster.schema) {\r\n        schemaTraversal(\r\n          schemaType.caster.schema,\r\n          basePath +\r\n            schemaPath +\r\n            (schemaType.constructor.schemaName == 'DocumentArray' ? '.$' : ''),\r\n          cb,\r\n        );\r\n      } else {\r\n        cb(basePath + schemaPath, schemaType);\r\n      }\r\n    });\r\n  }\r\n  function renameOldOptions(opts) {\r\n    if (!options.backwardCompatible) return opts;\r\n    const res = _.cloneDeep(opts);\r\n    const deprecated = ['unique_slug', 'slug_padding_size'];\r\n    const found = [];\r\n    _.each(deprecated, (oldo) => {\r\n      if (res[oldo] !== undefined) {\r\n        const newo = _.camelCase(oldo);\r\n        found.push([oldo, newo]);\r\n        res[newo] = res[oldo];\r\n        delete res[oldo];\r\n      }\r\n    });\r\n    if (found.length) {\r\n      console.log(\r\n        'Deprecated \"snake_case\" options found by slug updater plugin. Please update to camelCase.',\r\n        found,\r\n      );\r\n    }\r\n    if (res.uniqueGroup) {\r\n      res.uniqueGroupSlug = res.uniqueGroup;\r\n      delete res.uniqueGroup;\r\n      console.log(\r\n        'Deprecated option \"uniqueGroup\" found by slug updater. Please update to uniqueGroupSlug.',\r\n      );\r\n    }\r\n    if (res.force_id) {\r\n      res.forceIdSlug = res.force_id;\r\n      delete res.force_id;\r\n      console.log(\r\n        'Deprecated option \"force_id\" found by slug updater. Please update to forceIdSlug.',\r\n      );\r\n    }\r\n    if (res.on) {\r\n      res.slugOn = res.on;\r\n      delete res.on;\r\n      console.log('Deprecated option \"on\" found by slug updater. Please update to slugOn.');\r\n    }\r\n    return res;\r\n  }\r\n  schemaTraversal(schema, '', (schemaPath, schemaType) => {\r\n    if (schemaType.instance == 'String' && schemaType.options && schemaType.options.slug) {\r\n      const opts = renameOldOptions(schemaType.options);\r\n      let basePath = schemaPath.replace(/[.][^.]+$/, '');\r\n      if (basePath === schemaPath) basePath = '';\r\n      const slug = {\r\n        path: schemaPath,\r\n        basePath,\r\n        on: {\r\n          save: true,\r\n          update: true,\r\n          updateOne: true,\r\n          updateMany: true,\r\n          findOneAndUpdate: true,\r\n          ...(opts.slugOn || {}),\r\n        },\r\n      };\r\n\r\n      if (typeof opts.slug === 'string') {\r\n        slug.fields = [opts.slug];\r\n      } else if (opts.slug instanceof Array) {\r\n        slug.fields = opts.slug;\r\n      } else {\r\n        console.warn(\r\n          `slug option expected to be string or array. ${typeof opts.slug} found and will be ignored.`,\r\n        );\r\n        return;\r\n      }\r\n      if (opts.unique || opts.uniqueSlug) {\r\n        slug.unique = true;\r\n      }\r\n      if (opts.permanent) {\r\n        slug.permanent = true;\r\n      }\r\n\r\n      if (opts.slugPaddingSize === undefined) {\r\n        slug.isShortIdMode = true;\r\n      } else {\r\n        slug.isShortIdMode = false;\r\n        slug.padding = opts.slugPaddingSize;\r\n      }\r\n      if (opts.uniqueGroupSlug) {\r\n        if (_.isArray(opts.uniqueGroupSlug)) {\r\n          slug.uniqueGroupFields = opts.uniqueGroupSlug;\r\n        } else {\r\n          slug.uniqueGroupFields = [opts.uniqueGroupSlug];\r\n        }\r\n      }\r\n      if (opts.forceIdSlug) {\r\n        slug.unique = true;\r\n        slug.isShortIdMode = true;\r\n        slug.forceShortId = true;\r\n      }\r\n      if (opts.transform) {\r\n        slug.transform = opts.transform;\r\n      }\r\n      slugs.push(slug);\r\n    }\r\n  });\r\n  // console.log(slugs);\r\n  schema.pre('update', async function () {\r\n    return onUpdate.bind(this)('update');\r\n  });\r\n\r\n  schema.pre('updateOne', async function () {\r\n    return onUpdate.bind(this)('updateOne');\r\n  });\r\n\r\n  schema.pre('updateMany', async function () {\r\n    return onUpdate.bind(this)('updateMany');\r\n  });\r\n\r\n  schema.pre('findOneAndUpdate', async function () {\r\n    // console.log('pre findOneAndUpdate');\r\n    return onUpdate.bind(this)('findOneAndUpdate');\r\n  });\r\n\r\n  async function onUpdate(operation) {\r\n    const me = this;\r\n    // console.log(` = ${operation} ${me.model.modelName} = \\n`);\r\n    const upd = me.getUpdate();\r\n    const doc = _.cloneDeep(upd);\r\n    if (doc.$set) {\r\n      _.forOwn(doc.$set, (v, k) => {\r\n        _.set(doc, k, v);\r\n      });\r\n      delete doc.$set;\r\n    }\r\n    const docs = [_.cloneDeep(doc)];\r\n\r\n    const unwoundSlugs = unwindSlugs(doc, _.filter(slugs, `on.${operation}`));\r\n    if (!unwoundSlugs.length) {\r\n      return;\r\n    }\r\n\r\n    const updFields = _.keysDeep(doc);\r\n    // let updPaths = _.map(updFields, f =>\r\n    //   _.trim(f.replace(/\\[\"?(.+?)\"?\\]/g, '.$1'), '.')\r\n    // );\r\n    const involvedPaths = _.uniq(\r\n      unwoundSlugs.reduce((acc, slug) => acc.concat(slug.fields).concat([slug.path]), []),\r\n    ).map((p) => p.replace(/^\\//, ''));\r\n    let involvedValuesDocs = await me.model[operation == 'updateOne' ? 'findOne' : 'find'](\r\n      me.getQuery(),\r\n      _(involvedPaths)\r\n        .map((k) => [k.replace(/\\.[$\\d]+\\./g, '.'), 1])\r\n        .fromPairs()\r\n        .value(),\r\n    );\r\n    if (involvedValuesDocs) {\r\n      if (!_.isArray(involvedValuesDocs)) involvedValuesDocs = [involvedValuesDocs];\r\n      involvedValuesDocs.forEach((freshDoc, i) => {\r\n        if (i) docs[i] = _.cloneDeep(doc);\r\n        involvedPaths.forEach((f) => {\r\n          const fs = unwindPath(freshDoc, f);\r\n          _.each(fs, (f) => {\r\n            if (_.get(docs[i], f) === undefined) _.set(docs[i], f, _.get(freshDoc, f));\r\n          });\r\n        });\r\n        if (freshDoc && freshDoc._id) docs[i]._id = freshDoc._id;\r\n      });\r\n    }\r\n    // console.log('docs', docs);\r\n\r\n    const slugsUpd = [];\r\n    const cache = {};\r\n    async function findOne(query, sort) {\r\n      let res = me.model.findOne(query);\r\n      if (sort) {\r\n        res = res.sort(sort);\r\n      }\r\n      return res;\r\n    }\r\n    for (let i = 0; i < docs.length; i++) {\r\n      const currentUnwoundFields = unwindSlugs(docs[i], unwoundSlugs);\r\n      let actualSlugs = currentUnwoundFields;\r\n      if (involvedValuesDocs && involvedValuesDocs.length) {\r\n        const actualUpdFields = _(updFields)\r\n          .filter((f) => _.get(doc, f) != _.get(involvedValuesDocs[i], f))\r\n          .map((f) => _.trim(f.replace(/\\[\"?(.+?)\"?\\]/g, '.$1'), '.'))\r\n          .value();\r\n\r\n        actualSlugs = _.filter(\r\n          currentUnwoundFields,\r\n          (s) =>\r\n            _.intersection(\r\n              _.map(s.fields.concat(s.uniqueGroupFields || []), (p) => p.replace(/^\\//, '')),\r\n              actualUpdFields,\r\n            ).length,\r\n        );\r\n      }\r\n      if (actualSlugs.length) {\r\n        await setSlugs(docs[i], actualSlugs, options, findOne, cache);\r\n      }\r\n      slugsUpd[i] = {};\r\n      const origUpd =\r\n        _.reduce(\r\n          upd.$set,\r\n          (r, v, k) => {\r\n            _.set(r, k, v);\r\n            return r;\r\n          },\r\n          {},\r\n        ) || upd;\r\n      // console.log('actualSlugs', actualSlugs);\r\n      // console.log(`docs[${i}]`, docs[i]);\r\n      actualSlugs.forEach((slug) => {\r\n        const slugVal = _.get(docs[i], slug.path);\r\n        if (slugVal !== undefined) _.set(slugsUpd[i], slug.path, slugVal);\r\n      });\r\n      // console.log('1)slugsUpd[i]', slugsUpd[i]);\r\n      if (involvedValuesDocs && involvedValuesDocs.length) {\r\n        _.each(currentUnwoundFields, (us) => {\r\n          // console.log('us.path?', us.path);\r\n          if (!_.has(origUpd, us.path) && !_.has(slugsUpd[i], us.path)) {\r\n            const val = _.get(involvedValuesDocs[i], us.path);\r\n            if (val !== undefined) _.set(slugsUpd[i], us.path, val);\r\n          }\r\n        });\r\n      }\r\n      // console.log('2)slugsUpd[i]', slugsUpd[i]);\r\n\r\n      let doUpd = slugsUpd[i];\r\n      // console.log('doUpd', doUpd);\r\n      if (upd.$set) {\r\n        const slugPaths = _(doUpd)\r\n          .index({ leafsOnly: true })\r\n          // .mapValues(v=>_.isArray(v)?[]:(_.isObject(v)?{}:v))\r\n          .mapKeys((v, f) => _.trim(f.replace(/\\[\"?(.+?)\"?\\]/g, '.$1'), '.'))\r\n          .omitBy((v) => v === undefined)\r\n          .value();\r\n        doUpd = { $set: slugPaths };\r\n      }\r\n\r\n      if (docs.length == 1) {\r\n        if (doUpd) me[operation]({}, _.merge(me.getUpdate(), doUpd));\r\n        // console.log(me.getQuery(), me.getUpdate());\r\n      } else {\r\n        // Mongoose doesn't support docs without _id\r\n        // if (!docs[i]._id)\r\n        //   throw new Error(\r\n        //     'Cannot update slug massively, because _id not found for each doc.'\r\n        //   );\r\n        if (doUpd) {\r\n          await me.model.updateOne({ _id: docs[i]._id }, doUpd);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  schema.pre('save', async function () {\r\n    const cache = {};\r\n    let doc = this;\r\n    if (!doc.model) {\r\n      return;\r\n    }\r\n    // console.log(` = save ${doc.constructor.modelName} = \\n`);\r\n    // console.log(doc);\r\n    const reSlug = false;\r\n    const unwoundSlugs = unwindSlugs(doc, _.filter(slugs, 'on.save'));\r\n\r\n    if (!unwoundSlugs.length) {\r\n      return;\r\n    }\r\n\r\n    doc = await setSlugs(\r\n      doc,\r\n      unwoundSlugs,\r\n      options,\r\n      async (query, sort) => {\r\n        let res = doc.model(doc.constructor.modelName).findOne(query);\r\n        if (sort) res = res.sort(sort);\r\n        return res;\r\n      },\r\n      cache,\r\n    );\r\n    // console.log(doc);\r\n  });\r\n};\r\nfunction updateUpdCache(cache, path, slug, value, group) {\r\n  // console.log(`updateUpdCache ${path}: ${slug}`);\r\n  const maskedPath = path.replace(/\\.[$\\d]+\\./g, '.$.');\r\n  const isArrayPath = path != maskedPath;\r\n  const localKey = `${maskedPath}:${slug}`;\r\n  if (isArrayPath) {\r\n    // console.log(`${path} resolves ${cache.upd[localKey].ext.path} with ${value}  \\n${localKey}`);\r\n    cache.lock[path].ext.resolveEx(value);\r\n    delete cache.lock[path];\r\n  } else {\r\n    const key = `${localKey}-${JSON.stringify(group)}`;\r\n    cache.db[key] = value;\r\n  }\r\n}\r\nasync function findSame(\r\n  cache,\r\n  doc,\r\n  group,\r\n  path,\r\n  slug,\r\n  isCounter,\r\n  options,\r\n  findOne,\r\n  permanent\r\n  // slugsMdfPaths\r\n) {\r\n  // console.log(`findSame#${doc.n} ${path}: ${slug}`);\r\n  // console.log(cache);\r\n  cache = _.merge(cache, { db: {}, unwind: {}, upd: {}, lock: {} });\r\n  // console.log(cache);\r\n  const maskedPath = path.replace(/\\.[$\\d]+\\./g, '.$.');\r\n  const isArrayPath = path != maskedPath;\r\n  const slugRx = new RegExp(`^${slug}(${options.separator}${isCounter ? '(\\\\d+)' : '(.+)'})?$`);\r\n  const localKey = `${maskedPath}:${slug}`;\r\n  const key = `${localKey}-${JSON.stringify(group)}`;\r\n  // console.log(`findSame#${doc.n} key: \\n${key}`, cache);\r\n  // let candidates = [];\r\n  if (isArrayPath) {\r\n    // console.log('array? maskedPath', maskedPath);\r\n    const ext = { path };\r\n    const updPromise = new Promise((resolve, reject) => {\r\n      ext.resolveEx = resolve;\r\n      ext.rejectEx = reject;\r\n    });\r\n    updPromise.ext = ext;\r\n    if (cache.upd[localKey] !== undefined) {\r\n      let res = cache.upd[localKey];\r\n      // console.log(`${path} put lock \\n${localKey}`);\r\n      cache.upd[localKey] = updPromise;\r\n      const fromPath = res.ext.path;\r\n      cache.lock[path] = updPromise;\r\n      // console.log(`${path} waits for ${fromPath} \\n${localKey}`);\r\n      res = await res;\r\n      // console.log(`${path} got ${fromPath}  \\n${localKey}`,res);\r\n      return res;\r\n    }\r\n    // console.log(`${path} put lock init \\n${localKey}`);\r\n    cache.upd[localKey] = updPromise;\r\n    cache.lock[path] = updPromise;\r\n  }\r\n  let query = _.cloneDeep(group);\r\n  const sort = {};\r\n  if (cache.db[key] === undefined) {\r\n    const arrayPath = path.replace(/\\.[$\\d]+\\./g, '.');\r\n    query[arrayPath] = slugRx;\r\n    if (doc._id) {\r\n      if (query._id == undefined) {\r\n        query._id = {\r\n          $ne: doc._id,\r\n        };\r\n      } else if (!permanent) {\r\n        query = false;\r\n      }\r\n    }\r\n    if (query !== false) {\r\n      if (isCounter) sort[arrayPath] = -1;\r\n      cache.db[key] = findOne(query, sort);\r\n    } else {\r\n      cache.db[key] = null;\r\n    }\r\n  }\r\n  if (_.isObject(cache.db[key]) && _.isFunction(cache.db[key].then)) {\r\n    let foundDoc = await cache.db[key];\r\n    if (_.isObject(cache.db[key]) && _.isFunction(cache.db[key].then)) {\r\n      if (!foundDoc) {\r\n        // console.log('db cache set', path, null, query, sort);\r\n        cache.db[key] = null;\r\n      } else {\r\n        foundDoc = _(unwindPath(foundDoc, maskedPath))\r\n          .map((p) => [p, docGet(foundDoc, p)])\r\n          .filter(([p, v]) => v.match(slugRx))\r\n          .sortBy('[1]')\r\n          .last();\r\n        cache.db[key] = foundDoc[1];\r\n        // if (foundDoc) cache.db[key] = foundDoc[1];\r\n        // else cache.db[key] = null;\r\n        // console.log('db cache set', path, cache.db[key], query, sort, group);\r\n      }\r\n    }\r\n  }\r\n  return cache.db[key];\r\n  // if (cache.db[key] !== undefined) {\r\n  // console.log(`db cache for ${path}: ${cache.db[key]}`);\r\n  // candidates.push(cache.db[key]);\r\n  // }\r\n\r\n  // let res = _(candidates.sort())\r\n  //   .filter(c => c !== null)\r\n  //   .last();\r\n  // // console.log(`${path}: ${res} chosen from `,candidates);\r\n  // return res;\r\n  // return null;\r\n}\r\nlet docGet = (doc, path) => {\r\n  return _.isFunction(doc.get) ? doc.get(path) : _.get(doc, path);\r\n};\r\nconst docSet = (doc, path, val) =>\r\n  _.isFunction(doc.set) ? doc.set(path, val) : _.set(doc, path, val);\r\nconst docIsModified = (doc, path) =>\r\n  _.isFunction(doc.isModified) ? doc.isModified(path) : _.get(doc, path) !== undefined;\r\n\r\nfunction unwindSlugs(doc, slugs) {\r\n  const unwoundSlugs = [];\r\n\r\n  slugs.forEach((slug) => {\r\n    const slugPaths = unwindPath(doc, slug.path);\r\n    if (!slugPaths.length) slugPaths.push(slug.path);\r\n    let { basePath } = slug;\r\n\r\n    if (_.endsWith(basePath, '.$')) basePath += '.';\r\n    slugPaths.forEach((slugPath) => {\r\n      let unwoundBasePath = slugPath.replace(/\\.[^\\.]+$/, '');\r\n      if (unwoundBasePath == slugPath) unwoundBasePath = '';\r\n      function unwindFieldPath(fieldPath) {\r\n        let slugValueBasePath = unwoundBasePath;\r\n        let originalBasePath = _.trimEnd(basePath, '.');\r\n        while (_.startsWith(fieldPath, ':')) {\r\n          let prevValueBasePath = slugValueBasePath;\r\n          let prevOriginalBasePath = originalBasePath;\r\n          if (slugValueBasePath.match(/\\.[$\\d]+$/)) {\r\n            slugValueBasePath = slugValueBasePath.replace(/\\.[$\\d]+$/, '');\r\n            prevValueBasePath = slugValueBasePath;\r\n          }\r\n          if (originalBasePath.match(/\\.[$\\d]+$/)) {\r\n            originalBasePath = originalBasePath.replace(/\\.[$\\d]+$/, '');\r\n            prevOriginalBasePath = originalBasePath;\r\n          }\r\n\r\n          slugValueBasePath = slugValueBasePath.replace(/\\.[^\\.]+$/, '');\r\n          originalBasePath = originalBasePath.replace(/\\.[^\\.]+$/, '');\r\n          if (slugValueBasePath == prevValueBasePath) slugValueBasePath = '';\r\n          if (originalBasePath == prevOriginalBasePath) originalBasePath = '';\r\n          fieldPath = fieldPath.substr(1);\r\n        }\r\n        if (!_.startsWith(fieldPath, '/')) {\r\n          fieldPath = `/${(slugValueBasePath && `${slugValueBasePath}.`) || ''}${fieldPath}`;\r\n        }\r\n        if (_.startsWith(fieldPath, `/${originalBasePath}`))\r\n          fieldPath = fieldPath.replace(`/${originalBasePath}`, `/${slugValueBasePath}`);\r\n        return fieldPath;\r\n      }\r\n      const unwoundFields = slug.fields.map(unwindFieldPath);\r\n\r\n      const unwoundGroupPaths = (slug.uniqueGroupFields || []).map(unwindFieldPath);\r\n      if (\r\n        _.some(unwoundFields.concat(unwoundGroupPaths), (path) =>\r\n          docIsModified(doc, path.replace(/^\\//, '')),\r\n        )\r\n      ) {\r\n        const s = _.cloneDeep(slug);\r\n        s.path = slugPath;\r\n        s.basePath = unwoundBasePath;\r\n        s.fields = unwoundFields;\r\n        s.uniqueGroupFields = unwoundGroupPaths;\r\n        unwoundSlugs.push(s);\r\n      }\r\n    });\r\n  });\r\n\r\n  return unwoundSlugs;\r\n}\r\nfunction unwindPath(doc, path, restPathParts) {\r\n  if (restPathParts === undefined) {\r\n    restPathParts = path.split('.$.');\r\n    path = restPathParts[0];\r\n    restPathParts = _.drop(restPathParts);\r\n  }\r\n\r\n  let res = [];\r\n  const value = docGet(doc, path);\r\n\r\n  if (_.isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const childPath = `${path}.${i}.${restPathParts[0]}`;\r\n      res = res.concat(unwindPath(doc, childPath, _.drop(restPathParts)));\r\n    }\r\n  } else if (!restPathParts || !restPathParts.length) res.push(path);\r\n  return res;\r\n}\r\n\r\nasync function setSlugs(doc, slugs, options, findOne, cache) {\r\n  // let slugsMdfPaths = _(slugs)\r\n  //   .map('path')\r\n  //   .zipObject(_.fill(Array(_.size(slugs)), ''))\r\n  //   .value();\r\n  // console.log(\"slugsMdfPaths\",slugsMdfPaths);\r\n  await Promise.all(\r\n    slugs.map(async (slug) => {\r\n      const fields = [];\r\n      slug.fields.forEach((slugField) => {\r\n        let fieldVal = docGet(doc, slugField.replace(/^\\//, ''));\r\n        if (slug.transform) {\r\n          fieldVal = slug.transform(fieldVal);\r\n        }\r\n        fields.push(fieldVal);\r\n      });\r\n      const oldSlug = docGet(doc, slug.path);\r\n      if (\r\n        !(slug.unique || slug.uniqueSlug) &&\r\n        (!slug.uniqueGroupFields || !slug.uniqueGroupFields.length)\r\n      ) {\r\n        if (!oldSlug || !slug.permanent) {\r\n          docSet(doc, slug.path, makeSlug(fields, options));\r\n        }\r\n      } else {\r\n        const query = {};\r\n        if (slug.uniqueGroupFields) {\r\n          slug.uniqueGroupFields.forEach((fieldName) => {\r\n            fieldName = fieldName.replace(/^\\//, '');\r\n            query[fieldName] = docGet(doc, fieldName);\r\n          });\r\n        }\r\n        if (!docGet(doc, slug.path) || !slug.permanent) {\r\n          if (slug.isShortIdMode) {\r\n            docSet(\r\n              doc,\r\n              slug.path,\r\n              await makeUniqueShortIdSlug(\r\n                doc,\r\n                slug.path,\r\n                fields,\r\n                options,\r\n                query,\r\n                findOne,\r\n                slug.forceShortId,\r\n                cache,\r\n                // slugsMdfPaths\r\n              ),\r\n            );\r\n          } else {\r\n            docSet(\r\n              doc,\r\n              slug.path,\r\n              await makeUniqueCounterSlug(\r\n                doc,\r\n                slug.path,\r\n                fields,\r\n                options,\r\n                slug.padding,\r\n                query,\r\n                findOne,\r\n                cache,\r\n                slug.permanent\r\n                // slugsMdfPaths\r\n              ),\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }),\r\n  );\r\n  return doc;\r\n}\r\n\r\nfunction makeSlug(values, options) {\r\n  const slug = getSlug(values.join(' '), options);\r\n  return slug;\r\n}\r\nfunction extractCounter(value, separator) {\r\n  let count = 0;\r\n\r\n  const test = new RegExp(`${separator}(\\\\d+)$`);\r\n\r\n  let match = null;\r\n\r\n  if ((match = value.match(test))) {\r\n    count = match[1];\r\n  }\r\n  return parseInt(count);\r\n}\r\n\r\nasync function makeUniqueCounterSlug(\r\n  doc,\r\n  path,\r\n  values,\r\n  options,\r\n  padding,\r\n  groups,\r\n  findOne,\r\n  cache,\r\n  permanent,\r\n  // slugsMdfPaths\r\n) {\r\n  let slug = makeSlug(values, options);\r\n  const originalSlug = slug;\r\n  let count = 0;\r\n\r\n  const result = await findSame(\r\n    cache,\r\n    doc,\r\n    groups,\r\n    path,\r\n    slug,\r\n    true,\r\n    options,\r\n    findOne,\r\n    permanent\r\n    // slugsMdfPaths\r\n  );\r\n  if (result) {\r\n    count = extractCounter(result, options.separator) + 1;\r\n    slug += options.separator + _.padStart(count, padding, '0');\r\n  }\r\n  updateUpdCache(cache, path, originalSlug, slug, groups);\r\n  // console.log('after cache', cache);\r\n  return slug;\r\n}\r\n\r\nasync function makeUniqueShortIdSlug(\r\n  doc,\r\n  path,\r\n  values,\r\n  options,\r\n  groups,\r\n  findOne,\r\n  forceShortId,\r\n  cache,\r\n  // slugsMdfPaths\r\n) {\r\n  let slug = makeSlug(values, options);\r\n  const originalSlug = slug;\r\n\r\n  const result = await findSame(\r\n    cache,\r\n    doc,\r\n    groups,\r\n    path,\r\n    slug,\r\n    false,\r\n    options,\r\n    findOne,\r\n    // slugsMdfPaths\r\n  );\r\n  if (result) {\r\n    // console.log(`slug already exists at ${path}`, result);\r\n    const oldSlug = docGet(doc, path);\r\n    if (\r\n      // reuse old slug if possible\r\n      oldSlug &&\r\n      oldSlug.match(new RegExp(`^${slug}${options.separator}.*$`))\r\n    ) {\r\n      // console.log(\"reuse old random slug\",doc[path]);\r\n      slug = oldSlug;\r\n    } else slug += options.separator + shortId.generate();\r\n  } else if (forceShortId) {\r\n    slug += options.separator + shortId.generate();\r\n  }\r\n  updateUpdCache(cache, path, originalSlug, slug, groups);\r\n  // console.log('after cache', cache);\r\n  return slug;\r\n}\r\n", "module.exports = require('./lib/slug-generator');"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA;AAEA,aAAS,gBAAgB,GAAG;AAC1B,eAAS,aAAa,MAAM,QAAQ,OAAO;AACzC,YAAI,CAAC,EAAE,IAAI,GAAG;AACZ,cAAI,EAAE,OAAO;AACX,gBAAI,QAAQ,CAAC;AACb,kBAAM,IAAI,IAAI;AACd,cAAE,MAAM,OAAO,EAAE,MAAa,CAAC;AAAA,UACjC,OAAO;AACL,cAAE,IAAI,IAAI;AAAA,UACZ;AAAA,QACF;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClBjB;AAAA;AAAA;AAEA,aAAS,YAAY,GAAG;AACtB,eAAS,SAAS,KAAK;AACrB,YAAI,UAAU,CAAC;AACf,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,EAAE,KAAK,MAAM;AACf,oBAAQ,KAAK,CAAC;AAAA,UAChB;AAAA,QACF;AACA,YAAI,SAAS,QAAQ;AAErB,eAAO,UAAU;AACf,cAAI,OAAO,QAAQ,MAAM,GAAG,CAAC;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,GAAG,CAAC,YAAY,YAAY;AAAA,IAC1E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,QAAI,SAAS;AAEb,aAAS,YAAY;AACnB,UAAI,QAAQ,CAAC,GAAG,MAAM,UAAU;AAChC,aAAQ;AAAQ,cAAO,GAAI,IAAI,UAAW,GAAI;AAE9C,aAAO,MAAM;AAAA,QACX,SAAU,KAAK,GAAG;AAAE,iBAAO,MAAO,CAAC,KAAK,EAAE,WAAW,GAAG,IAAK,KAAK,MAAM,IAAM,MAAM,MAAM,IAAM;AAAA,QAAG;AAAA,QACnG;AAAA,MACF;AAAA,IACF;AAEA,aAAS,gBAAgB,GAAG;AAC1B,eAAS,aAAa,MAAM;AAC1B,YAAI,WAAW,CAAC,GAAG,MAAM,UAAU,SAAS;AAC5C,eAAQ,QAAQ;AAAI,mBAAU,GAAI,IAAI,UAAW,MAAM,CAAE;AAEzD,mBAAW,SAAS,OAAO,SAAU,GAAG;AAAE,iBAAO,MAAM;AAAA,QAAW,CAAC;AACnE,YAAI,EAAE,SAAS,IAAI,GAAG;AAAE,iBAAO,UAAU,MAAM,QAAQ,SAAS,OAAQ,CAAC,IAAI,CAAE,CAAC;AAAA,QAAG;AACnF,YAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AAAE,iBAAO;AAAA,QAAW;AAC9C,mBAAW,UAAU,MAAM,QAAQ,QAAQ;AAC3C,eAAO,KAAK,OAAO,SAAU,KAAK,OAAO;AACvC,cAAI,OAAO,OAAO;AAClB,cAAI,SAAS,UAAU;AACrB,gBAAI,QAAQ,KAAK,QAAQ,MAAM,GAAG;AAChC,qBAAQ,MAAM,OAAQ,QAAQ;AAAA,YAChC,OAAO;AACL,qBAAQ,MAAM,MAAM,QAAQ;AAAA,YAC9B;AAAA,UACF,WAAW,SAAS,UAAU;AAC5B,mBAAQ,MAAM,OAAQ,QAAQ;AAAA,UAChC,WAAW,CAAC,OAAO;AACjB,mBAAQ,MAAM;AAAA,UAChB;AACA,cAAI,CAAC,WAAW,KAAK,KAAK,GAAG;AAC3B,mBAAQ,MAAM,MAAM,QAAQ;AAAA,UAC9B;AACA,cAAI,UAAU,KAAK,KAAK,GAAG;AACzB,gBAAI,KAAK;AACP,qBAAQ,MAAM,MAAM;AAAA,YACtB,OAAO;AACL,qBAAQ,KAAK,MAAM;AAAA,YACrB;AAAA,UACF;AACA,iBAAQ,MAAM,OAAS,MAAM,QAAQ,QAAQ,KAAK,IAAK;AAAA,QACzD,GAAG,QAAQ;AAAA,MACb;AACA,aAAO;AAAA,IACT;AAEA,oBAAgB,eAAe;AAE/B,WAAO,UAAU;AAAA;AAAA;;;ACxDjB;AAAA;AAAA;AAEA,aAAS,SAAS,OAAO;AACvB,UAAI,OAAO,OAAO;AAClB,aAAO,SAAS,SAAS,QAAQ,YAAY,QAAQ;AAAA,IACvD;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACPjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,WAAW;AAEf,QAAI,YAAY;AAChB,QAAI,SAAS;AACb,QAAI,MAAM,OAAO,UAAU;AAE3B,aAAS,WAAW,GAAG;AACrB,UAAI,eAAe,gBAAgB,CAAC;AAEpC,eAAS,QAAQ,MAAM;AACrB,YAAI,UAAU,KAAK;AACnB,YAAI,MAAM,KAAK;AACf,YAAI,WAAW,KAAK;AACpB,gBAAQ,kBAAkB,QAAQ,cAAc;AAChD,aAAK,QAAQ;AAEb,YAAI,SAAS;AACb,YAAI,UAAU,WAAY;AACxB,mBAAS;AACT,iBAAO;AAAA,QACT;AAEA,eAAO,MAAM;AACX,cAAI,QAAQ;AAAE;AAAA,UAAO;AACrB,cAAI,CAAC,KAAK,QAAQ;AAChB,iBAAK,SAAS;AACd,iBAAK,OAAO,cAAc,KAAK,OAAO,QAAQ,iBAAiB;AAE/D,gBAAI,QAAQ,eAAe;AACzB,mBAAK,sBAAsB;AAC3B,mBAAK,iBAAiB;AACtB,mBAAK,aAAa;AAClB,kBAAI,KAAK,KAAK,YAAY,CAAC,KAAK,KAAK,SAAS;AAC5C,oBAAI,SAAS,KAAK;AAClB,uBAAO,QAAQ;AACb,sBAAI,OAAO,UAAU,KAAK,OAAO;AAC/B,yBAAK,aAAa;AAClB,yBAAK,iBAAiB;AACtB,yBAAK,sBAAsB,KAAK,QAAQ,OAAO,QAAQ;AACvD;AAAA,kBACF;AACA,2BAAS,OAAO;AAAA,gBAClB;AAAA,cACF;AAAA,YACF;AAEA,iBAAK,WAAW,CAAC;AACjB,gBAAI,QAAQ,cAAc;AACxB,sBAAQ,aAAa,QAAQ,SAAU,IAAI,GAAG;AAC5C,oBAAI,WAAW,EAAE,IAAI,KAAK,OAAO,EAAE;AACnC,oBAAI,OAAO,cAAc,UAAU,QAAQ,iBAAiB;AAC5D,oBAAI,CAAC,KAAK,SAAS;AACjB,uBAAK,SAAS,KAAK;AAAA,oBACjB;AAAA,oBACA,QAAQ,gBAAgB,CAAC;AAAA,oBACzB;AAAA,oBACA;AAAA,kBAAK,CAAC;AAAA,gBACV;AAAA,cACF,CAAC;AAAA,YACH;AAEA,iBAAK,SACH,KAAK,cACJ,QAAQ,iBAAiB,UAAa,CAAC,KAAK,SAAS,UACtD,CAAC,KAAK,KAAK,YACX,KAAK,KAAK;AAEZ,iBAAK,gBACF,KAAK,SAAS,QAAQ,iBACtB,CAAC,QAAQ,cAAc,KAAK;AAE/B,gBAAI,KAAK,cAAc;AACrB,kBAAI,gBAAgB,IAAI,cAAc,KAAK,SAAS,OAAO;AAC3D,4BAAc,QAAQ,MAAM,KAAK;AACjC,kBAAI;AACF,qBAAK,MAAM;AAAA,kBACT,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK,UAAU,KAAK,OAAO;AAAA,kBAC3B;AAAA,gBACF;AAAA,cACF,SAAS,KAAK;AACZ,oBAAI,IAAI,SAAS;AACf,sBAAI,WACF,gDACA,aAAa,KAAK,IAAI;AAAA,gBAC1B;AAEA,sBAAM;AAAA,cACR;AAAA,YACF;AAEA,gBAAI,QAAQ;AACV;AAAA,YACF;AAEA,gBAAI,KAAK,QAAQ,OAAO;AACtB,kBAAI,CAAC,UAAU,CAAC,KAAK,cAAc,KAAK,KAAK,UAAU;AACrD,oBACE,QAAQ,iBAAiB,WACxB,KAAK,SAAS,CAAC,QAAQ,iBACxB;AACA,uBAAK,gBAAgB,CAAC;AACtB,sBAAI,KAAK,SAAS,QAAQ;AACxB,yBAAK,SAAS,QAAQ,SAAU,KAAK;AACnC,0BAAI,KAAK,IAAI,CAAC;AACd,0BAAI,MAAM,IAAI,CAAC;AACf,0BAAI,WAAW,IAAI,CAAC;AACpB,0BAAI,OAAO,IAAI,CAAC;AAEhB,2BAAK,gBAAkB,KAAK,cAAgB,OAAS,KAAK,UACpD,YAAY,MAAM,UAAU,SAAS,IAAI,GAAG,IAC5C,eAAe,MAAM,UAAU,SAAS,IAAI,GAAG,CAAG;AAAA,oBAC1D,CAAC;AAAA,kBACH;AAAA,gBACF,OAAO;AACL,uBAAK,gBAAgB,KAAK,KAAK,UAC3B,YAAY,MAAM,KAAK,OAAO,SAAS,CAAC,GAAG,EAAE,IAC7C,eAAe,MAAM,KAAK,OAAO,SAAS,CAAC,GAAG,EAAE;AAAA,gBACtD;AAAA,cACF;AAAA,YACF;AAEA,iBAAK,oBAAoB;AAAA,UAC3B;AACA,cACE,KAAK,iBACL,KAAK,oBAAoB,KAAK,cAAc,SAAS,GACrD;AACA,iBAAK;AACL,iBAAK,cAAc,KAAK,iBAAiB,EAAE,aAAa;AACxD,mBAAO,KAAK,cAAc,KAAK,iBAAiB;AAChD;AAAA,UACF;AAEA,cAAI,KAAK,gBAAgB,QAAQ,sBAAsB;AACrD,gBAAI,kBAAkB,IAAI,cAAc,KAAK,SAAS,OAAO;AAC7D,4BAAgB,QAAQ,MAAM,IAAI;AAElC,gBAAI;AACF;AAAA,gBACE,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK,UAAU,KAAK,OAAO;AAAA,gBAC3B;AAAA,cACF;AAAA,YACF,SAAS,KAAK;AACZ,kBAAI,IAAI,SAAS;AACf,oBAAI,WACF,+CACA,aAAa,KAAK,IAAI;AAAA,cAC1B;AAEA,oBAAM;AAAA,YACR;AAAA,UACF;AACA,iBAAO,KAAK;AAAA,QACd;AAAA,MACF;AAEA,aAAO;AAEP,eAAS,YAAY,MAAM,UAAU,SAAS,cAAc,iBAAiB;AAC3E,YAAI;AACJ,YAAI,CAAC,QAAQ,iBAAiB;AAC5B,+BAAqB,KAAK,WAAW;AAErC,cACE,mBACA,sBACA,CAAC,gBAAgB,WAAW,GAAG,GAC/B;AACA,kCAAsB;AAAA,UACxB;AACA,gCAAsB,mBAAmB;AAAA,QAC3C;AACA,YAAI,MAAM,CAAC;AACX,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,cAAI,MAAM,SAAS,CAAC;AACpB,cAAI,QAAQ,UAAa,EAAE,KAAK,WAAW;AACzC;AAAA,UACF;AACA,cAAI,eAAgB;AACpB,cAAI,mBAAmB,CAAC,QAAQ;AAChC,cAAI,kBAAkB;AACpB,2BAAe,qBAAqB,MAAM,IAAI;AAAA,UAChD;AACA,cAAI,KAAK;AAAA,YACP,OAAO;AAAA,YACP,KAAK,IAAI;AAAA,YACT,OAAO,KAAK,QAAQ,CAAC,GAAG,OAAQ,cAAc,CAAC,IAAI,EAAE,CAAC;AAAA,YACtD,SAAS;AAAA,YACT,OAAO,KAAK,QAAQ;AAAA,YACpB,QAAQ;AAAA,cACN,OAAO,KAAK;AAAA,cACZ,KAAK,KAAK;AAAA,cACV,MAAM,mBAAmB,KAAK,UAAU,KAAK;AAAA,cAC7C,QAAQ,KAAK;AAAA,cACb,OAAO,KAAK;AAAA,cACZ,MAAM,KAAK;AAAA,YACb;AAAA,YACA,cAAe,aAAa,UAAU,gBAAiB;AAAA,YACvD,iBAAiB,mBAAmB;AAAA,UACtC,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAEA,eAAS,eACP,MACA,UACA,SACA,cACA,iBACA;AACA,YAAI;AACJ,YAAI,CAAC,QAAQ,iBAAiB;AAC5B,+BAAqB,KAAK,WAAW;AAErC,cACE,mBACA,sBACA,CAAC,gBAAgB,WAAW,GAAG,GAC/B;AACA,kCAAsB;AAAA,UACxB;AACA,gCAAsB,mBAAmB;AAAA,QAC3C;AACA,YAAI,MAAM,CAAC;AACX,YAAI,mBAAmB,CAAC,QAAQ;AAChC,iBAAS,YAAY,UAAU;AAC7B,cAAI,QAAQ,qBAAqB,CAAC,IAAI,KAAK,UAAU,QAAQ,GAAG;AAC9D;AAAA,UACF;AAEA,cAAI,eAAgB;AACpB,cAAI,kBAAkB;AACpB,gBAAI,UAAU,KAAK,QAAQ,GAAG;AAC5B,kBAAI,oBAAoB;AACtB,+BAAe,qBAAqB,MAAM;AAAA,cAC5C,OAAO;AACL,+BAAe,KAAK;AAAA,cACtB;AAAA,YACF,OAAO;AACL,6BAAe,qBAAqB,OAAS,SAAS;AAAA,gBACpD;AAAA,gBACA;AAAA,cACF,IAAK;AAAA,YACP;AAAA,UACF;AAEA,cAAI,KAAK;AAAA,YACP,OAAO,SAAS,QAAQ;AAAA,YACxB,KAAK;AAAA,YACL,OAAO,KAAK,QAAQ,CAAC,GAAG,OAAQ,cAAc,CAAC,QAAQ,CAAC;AAAA,YACxD,SAAS;AAAA,YACT,OAAO,KAAK,QAAQ;AAAA,YACpB,QAAQ;AAAA,cACN,OAAO,KAAK;AAAA,cACZ,KAAK,KAAK;AAAA,cACV,MAAM,mBAAmB,KAAK,UAAU,KAAK;AAAA,cAC7C,QAAQ,KAAK;AAAA,cACb,OAAO,KAAK;AAAA,cACZ,MAAM,KAAK;AAAA,YACb;AAAA,YACA,cAAe,aAAa,UAAU,gBAAiB;AAAA,YACvD,iBAAiB,mBAAmB;AAAA,UACtC,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,QAAI,gBAAgB,SAASA,eAAc,KAAK,SAAS,SAAS;AAChE,WAAK,MAAM;AACX,WAAK,WAAW;AAChB,WAAK,OAAO,IAAI;AAAA,IAClB;AAEA,QAAI,qBAAqB,EAAE,MAAM,EAAE,cAAc,KAAK,GAAE,QAAQ,EAAE,cAAc,KAAK,GAAE,SAAS,EAAE,cAAc,KAAK,GAAE,OAAO,EAAE,cAAc,KAAK,GAAE,QAAQ,EAAE,cAAc,KAAK,GAAE,YAAY,EAAE,cAAc,KAAK,GAAE,qBAAqB,EAAE,cAAc,KAAK,GAAE,gBAAgB,EAAE,cAAc,KAAK,GAAE,cAAc,EAAE,cAAc,KAAK,GAAE,MAAM,EAAE,cAAc,KAAK,EAAE;AAC5W,kBAAc,UAAU,UAAU,SAAS,QAAS,MAAM,cAAc;AACtE,WAAK,QAAQ;AACb,WAAK,eAAe;AAAA,IACtB;AACA,uBAAmB,KAAK,MAAM,WAAY;AACxC,aAAO,KAAK,SAAS,kBAAkB,KAAK,MAAM,OAAO,KAAK,MAAM;AAAA,IACtE;AAEA,uBAAmB,OAAO,MAAM,WAAY;AAC1C,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,uBAAmB,QAAQ,MAAM,WAAY;AAC3C,UAAI,CAAC,KAAK,MAAM,UAAU;AACxB,aAAK,MAAM,WAAW,CAAC;AACvB,YAAI,YAAY,KAAK,MAAM;AAC3B,eAAO,WAAW;AAChB,eAAK,MAAM,SAAS,UAAU,KAAK,IAAI;AACvC,sBAAY,UAAU;AAAA,QACxB;AAAA,MACF;AACA,aAAO,KAAK,MAAM;AAAA,IACpB;AACA,uBAAmB,MAAM,MAAM,WAAY;AACzC,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,uBAAmB,OAAO,MAAM,WAAY;AAC1C,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,uBAAmB,WAAW,MAAM,WAAY;AAC9C,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,uBAAmB,oBAAoB,MAAM,WAAY;AACvD,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,uBAAmB,eAAe,MAAM,WAAY;AAClD,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,uBAAmB,aAAa,MAAM,WAAY;AAChD,aACG,KAAK,SAAS,iBAAiB,WAC7B,KAAK,SAAS,kBACX,KAAK,MAAM,eACX,KAAK,MAAM,oBACjB;AAAA,IAEJ;AAEA,uBAAmB,KAAK,MAAM,WAAY;AACxC,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,WAAO,iBAAkB,cAAc,WAAW,kBAAmB;AAErE,aAAS,cAAc,OAAO,mBAAmB;AAC/C,eAAS,OAAO,OAAO;AACrB,YAAI,CAAC,qBAAqB,IAAI,KAAK,OAAO,GAAG,GAAG;AAC9C,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,OAAO,mBAAmB;AAC/C,UAAI,MAAM,EAAE,UAAU,SAAS,KAAK,EAAE;AACtC,UAAI,UAAU,IAAI,YAAY,MAAM,QAAQ,KAAK;AACjD,UAAI,UAAU,IAAI,UACd,CAAC,MAAM,SACP,IAAI,WACJ,cAAc,OAAO,iBAAiB,IACtC;AAEJ,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5WjB;AAAA;AAAA;AAEA,QAAI,aAAa;AAEjB,aAAS,YAAY,GAAG;AACtB,UAAI,UAAU,WAAW,CAAC;AAE1B,eAAS,SAAS,KAAK,UAAU,SAAS;AACxC,YAAI,aAAa,QAAW;AAAE,qBAAW,EAAE;AAAA,QAAU;AACrD,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,aAAa,CAAC,MAAM,QAAQ,GAAG;AAAA,YAC/B,YAAY;AAAA,YACZ,eAAe;AAAA,YACf,YAAY;AAAA,YACZ,mBAAmB;AAAA;AAAA,UACrB;AAAA,UACA,WAAW,CAAC;AAAA,QACd;AACA,YAAI,QAAQ,iBAAiB,QAAW;AACtC,cAAI,CAAC,QAAQ,eAAe,QAAQ,mBAAmB,QAAW;AAChE,oBAAQ,iBAAiB,MAAM,QAAQ,GAAG;AAAA,UAC5C;AACA,cACE,CAAC,EAAE,SAAS,QAAQ,YAAY,KAChC,CAAC,MAAM,QAAQ,QAAQ,YAAY,GACnC;AACA,kBAAM,MAAM,qCAAqC;AAAA,UACnD,OAAO;AACL,gBAAI,EAAE,SAAS,QAAQ,YAAY,GAAG;AACpC,sBAAQ,eAAe,CAAC,QAAQ,YAAY;AAAA,YAC9C;AACA,oBAAQ,kBAAkB,QAAQ;AAClC,oBAAQ,eAAe,CAAC;AACxB,qBAAS,IAAI,QAAQ,gBAAgB,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5D,sBAAQ,aAAa,CAAC,IAAI,EAAE,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAAA,YAC/D;AAAA,UACF;AAAA,QACF;AACA,gBAAQ;AAAA,UACN,OAAO;AAAA,UACP;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClDjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAClB,QAAI,cAAc;AAElB,aAAS,gBAAgB,GAAG;AAC1B,UAAI,WAAW,YAAY,CAAC;AAC5B,UAAI,WAAW,YAAY;AAC3B,UAAI,QAAQ,EAAE,QAAQ,EAAE;AACxB,eAAS,aAAa,KAAK,SAAS;AAClC,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,eAAe;AAAA,UACjB;AAAA,UACA,WAAW,CAAC;AAAA,QACd;AACA,YAAI,kBAAkB;AAAA,UACpB,eAAe,QAAQ;AAAA,UACvB,mBAAmB,QAAQ;AAAA,QAC7B;AACA,YAAI,SAAS,CAAC;AAEd;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,CAAC,QAAQ,cAAc,MAAM,QAAQ,KAAK,GAAG;AAAE,qBAAO,KAAK,KAAK;AAAA,YAAG;AAAA,UACzE;AAAA,UACA;AAAA,QACF;AACA,YAAI,MAAM,QAAQ,GAAG,GAAG;AAAE,iBAAO,KAAK,GAAG;AAAA,QAAG;AAC5C,cAAM,QAAQ,QAAQ;AACtB,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpCjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AAItB,aAAS,gBAAgB,GAAG;AAC1B,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,YAAY;AAAA,IACvF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,CAAC,GAAG,CAAC,YAAY,YAAY;AAAA,IAC3E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,aAAS,UAAU,GAAG;AACpB,eAAS,OAAO,KAAK,MAAM;AACzB,eAAO,MAAM,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI,IAAI,EAAE,OAAO,IAAI;AAC1D,YAAI,MAAM,KAAK,IAAI;AACnB,YAAI,SAAS,KAAK,SAAS,EAAE,IAAI,KAAK,IAAI,IAAI;AAC9C,eAAO,WAAW,UAAa,OAAO;AAAA,MACxC;AACA,aAAO;AAAA,IACT;AAEA,cAAU,eAAe;AAEzB,WAAO,UAAU;AAAA;AAAA;;;ACdjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,YAAY;AAIhB,aAAS,UAAU,GAAG;AACpB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,UAAU,UAAU,CAAC,GAAG,CAAC,UAAU,YAAY;AAAA,IACrE;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAClB,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,aAAS,cAAc,GAAG;AACxB,UAAI,WAAW,YAAY,CAAC;AAC5B,UAAI,WAAW,YAAY;AAE3B,eAAS,WAAW,KAAK,WAAW,SAAS;AAC3C,oBAAY,EAAE,SAAS,SAAS;AAChC,YAAI,CAAC,SAAS;AACZ,oBAAU,CAAC;AAAA,QACb,OAAO;AACL,oBAAU,EAAE,UAAU,OAAO;AAC7B,cAAI,QAAQ,cAAc,QAAW;AACnC,oBAAQ,aAAa,QAAQ;AAAA,UAC/B;AAAA,QACF;AACA,YAAI,CAAC,QAAQ,QAAQ;AACnB,kBAAQ,SAAS,CAAC;AAAA,QACpB;AACA,YAAI,CAAC,QAAQ,SAAS;AACpB,kBAAQ,UAAU,CAAC;AAAA,QACrB;AACA,YAAI,CAAC,QAAQ,aAAa;AACxB,kBAAQ,cAAc,CAAC;AAAA,QACzB;AACA,YAAI,QAAQ,iBAAiB,QAAW;AACtC,cAAI,QAAQ,OAAO,iBAAiB,QAAW;AAC7C,oBAAQ,OAAO,eAAe;AAAA,UAChC;AACA,cAAI,QAAQ,YAAY,iBAAiB,QAAW;AAClD,oBAAQ,YAAY,eAAe;AAAA,UACrC;AACA,cAAI,QAAQ,QAAQ,iBAAiB,QAAW;AAC9C,oBAAQ,QAAQ,eAAe;AAAA,UACjC;AAEA,cAAI,QAAQ,OAAO,cAAc,QAAW;AAC1C,oBAAQ,OAAO,YAAY;AAAA,UAC7B;AACA,cAAI,QAAQ,YAAY,cAAc,QAAW;AAC/C,oBAAQ,YAAY,YAAY;AAAA,UAClC;AACA,cAAI,QAAQ,QAAQ,cAAc,QAAW;AAC3C,oBAAQ,QAAQ,YAAY;AAAA,UAC9B;AAAA,QACF;AACA,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,eAAe;AAAA,YACf,cAAc;AAAA;AAAA,YAEd,YAAY,QAAQ,iBAAiB;AAAA,YACrC,UAAU;AAAA,YACV,WAAW,EAAE;AAAA,YACb,YAAY;AAAA,YACZ,QAAQ,EAAE,cAAc,MAAM,WAAW,MAAM,aAAa,KAAK;AAAA,YACjE,aAAa;AAAA,cACX,cAAc;AAAA,cACd,WAAW;AAAA,cACX,aAAa;AAAA,YACf;AAAA,YACA,SAAS;AAAA,cACP,cAAc;AAAA,cACd,WAAW;AAAA,cACX,aAAa;AAAA,YACf;AAAA,UACF;AAAA,UACA;AAAA,QACF;AAEA,YAAI,kBAAkB;AAAA,UACpB,YAAY,QAAQ;AAAA,UACpB,eAAe,QAAQ;AAAA,UACvB,cAAc,QAAQ;AAAA,UACtB,aAAa,QAAQ;AAAA,UACrB,gBAAgB,QAAQ;AAAA,UACxB,mBAAmB,QAAQ;AAAA,UAC3B,sBAAsB;AAAA,UACtB,YAAY;AAAA,QACd;AACA,YAAI,aAAa,MAAM,QAAQ,GAAG;AAClC,YAAI,MAAM,aAAa,CAAC,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI;AACjD,YAAI,aAAa,QAAQ,WAAW,CAAC,IAAI;AACzC;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,CAAC,QAAQ,cAAc;AACzB,sBAAQ,KAAK,cAAc,CAAC;AAC5B,kBAAI,CAAC,QAAQ,YAAY;AACvB,oBAAI,QACF,CAAC,QAAQ,cAAc,QAAQ,SAC3B,UAAU,OAAO,KAAK,QAAQ,OAAO,IACrC;AAEN,oBAAI,CAAC,SAAS,KAAK,GAAG;AACpB,sBAAI,UAAU,QAAW;AACvB,4BAAQ,QAAQ;AAAA,kBAClB,WAAW,OAAO;AAChB,4BAAQ,QAAQ;AAAA,kBAClB,OAAO;AACL,4BAAQ,QAAQ;AAAA,kBAClB;AAAA,gBACF;AACA,wBAAQ,KAAK,YAAY,QAAQ;AACjC,wBAAQ,KAAK,YAAY,QACvB,MAAM,UAAU,SAAY,OAAO,MAAM;AAE3C,oBAAI,MAAM,eAAe,CAAC,MAAM,cAAc;AAC5C,sBAAI,QAAQ,aAAa,MAAM,WAAW;AACxC,wBAAI,QAAQ,SAAS,QAAW;AAC9B,0BAAI,WAAW,iBAAiB,SAAS,GAAG;AAC5C,8BAAQ,KAAK,YAAY,MAAM,SAC7B,GACF,IAAI,QAAQ,UAAU,KAAK;AAAA,oBAC7B,OAAO;AACL,8BAAQ,KAAK,YAAY,MAAM,MAAM,QAAQ,UAAU,KAAK;AAAA,oBAC9D;AAAA,kBACF,OAAO;AACL,wBAAI,QAAQ,SAAS,QAAW;AAC9B,0BAAI,aAAa,iBAAiB,SAAS,GAAG;AAC9C,8BAAQ,KAAK,YAAY,MAAM,WAAW,GAAG,IAAI,QAAQ,KACtD,UACC,CAAC,IACD,QAAQ,KAAK,WACb,CAAC,IACD;AAAA,oBACN,OAAO;AACL,8BAAQ,KAAK,YAAY,MAAM,MAAM,QAAQ,KAAK,UAC9C,CAAC,IACD,QAAQ,KAAK,WACb,CAAC,IACD;AAAA,oBACN;AAAA,kBACF;AAAA,gBACF;AACA,uBAAO,CAAC,MAAM;AAAA,cAChB,OAAO;AACL,oBAAI,aAAa,iBAAiB,SAAS,GAAG;AAC9C,oBAAI,CAAC,QAAQ,cAAc;AACzB,yBAAO,WAAW,GAAG;AACrB,sBACE,eACE,eAAe,QAAQ,OAAO,KAAK,YAAY,OAC/C,QAAQ,OAAO,KAAK,WACpB,MAAM,QAAQ,UAAU,MAC1B,CAAC,QAAQ,OAAO,KAAK,YAAY,UACjC;AACA,4BAAQ,OAAO,KAAK,YAAY,WAAW;AAC3C,+BAAW,KAAK,QAAQ,OAAO,IAAI;AAAA,kBACrC;AAEA,0BAAQ,KAAK,YAAY,WAAW;AAAA,gBACtC,OAAO;AACL,0BAAQ,KAAK,YAAY,MAAM,WAAW,GAAG,IAC3C,uBAAuB,UACnB,QAAQ,oBACR,QAAQ,eAAe,SAAS,SAChC,QAAQ,eAAe,KAAK,YAAY,MACxC;AAAA,gBACR;AACA,uBAAO;AAAA,cACT;AAAA,YACF,WAAW,QAAQ,gBAAgB,CAAC,QAAQ,YAAY;AACtD,kBAAI,UAAU,QAAQ,KAAK,YAAY;AAEvC,kBAAI,QAAQ,KAAK,YAAY,SAAS,CAAC,QAAQ,aAAa;AAC1D,oBAAI,QAAQ,SAAS,QAAW;AAC9B,wBAAM;AAAA,gBACR,OAAO;AACL,sBAAI,aAAa,iBAAiB,SAAS,GAAG;AAC9C,yBAAO,WAAW,GAAG;AACrB,sBACE,eACE,eAAe,QAAQ,OAAO,KAAK,YAAY,OAC/C,QAAQ,OAAO,KAAK,WACpB,MAAM,QAAQ,UAAU,MAC1B,CAAC,QAAQ,OAAO,KAAK,YAAY,UACjC;AACA,4BAAQ,OAAO,KAAK,YAAY,WAAW;AAC3C,+BAAW,KAAK,QAAQ,OAAO,IAAI;AAAA,kBACrC;AACA,0BAAQ,KAAK,YAAY,WAAW;AAAA,gBACtC;AAAA,cACF,OAAO;AACL,oBAAI,WAAW,QAAQ;AACvB,uBAAO,UAAU;AAIf,sBAAI,CAAC,SAAS,KAAK,YAAY,OAAO;AACpC,6BAAS,KAAK,YAAY,QAAQ,QAAQ;AAAA,kBAC5C;AACA,sBAAI,CAAC,SAAS,KAAK,YAAY,OAAO;AACpC;AAAA,kBACF;AACA,2BAAS,KAAK,YAAY,QAAQ;AAClC,6BAAW,SAAS;AAAA,gBACtB;AAAA,cACF;AAEA;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,QACF;AAEA,YAAI,YAAY;AACd,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,gBAAI,OAAO,WAAW,CAAC;AACvB,gBAAI,KAAK,YAAY,YAAY,CAAC,KAAK,YAAY,UAAU;AAC3D,uBAAS,KAAK,QAAQ;AAAA,YACxB;AAAA,UACF;AACA,cAAI,YAAY;AACd,qBAAS,GAAG;AAAA,UACd;AAAA,QACF;AACA,YAAI,cAAc,CAAC,IAAI,UAAU,CAAC,gBAAgB,aAAa;AAC7D,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AACA,aAAO;AAEP,eAAS,iBAAiB,SAAS,KAAK;AACtC,YAAI,QAAQ,OAAO,KAAK,UAAU;AAChC,iBAAO,QAAQ,OAAO,KAAK;AAAA,QAC7B;AACA,YAAI,CAAC,QAAQ,OAAO,KAAK,aAAa;AACpC,kBAAQ,OAAO,KAAK,cAAc,CAAC;AAAA,QACrC;AACA,YAAI,SAAS,QAAQ,OAAO,KAAK,YAAY;AAC7C,YAAI,WAAW,QAAW;AAExB,mBAAS,QAAQ,OAAO,KAAK,YAAY,MAAM;AAAA,QAMjD;AACA,YAAI,QAAQ,MAAM,cAAc;AAC9B,cAAI,UAAU,QAAQ,OAAO;AAC7B,mBAAS,IAAI,GAAG,IAAI,QAAQ,MAAM,aAAa,QAAQ,KAAK;AAC1D,gBAAI,WAAW,QAAQ,MAAM,aAAa,CAAC;AAC3C,sBAAU,QAAQ,QAAQ;AAC1B,gBAAI,CAAC,OAAO,QAAQ,GAAG;AACrB,qBAAO,QAAQ,IAAI,MAAM,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AAAA,YACpD;AACA,qBAAS,OAAO,QAAQ;AAAA,UAC1B;AAAA,QACF;AACA,gBAAQ,OAAO,KAAK,WAAW;AAC/B,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACtQjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,gBAAgB;AAIpB,aAAS,cAAc,GAAG;AACxB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,cAAc,cAAc,CAAC,GAAG,CAAC,cAAc,YAAY;AAAA,IACjF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,YAAY,GAAG;AACtB,UAAI,WAAW,YAAY,CAAC;AAE5B,eAAS,SAAS,KAAK,WAAW,SAAS;AACzC,oBAAY,EAAE,SAAS,SAAS;AAChC,YAAI,CAAC,SAAS;AACZ,oBAAU,CAAC;AAAA,QACb,OAAO;AACL,oBAAU,EAAE,UAAU,OAAO;AAC7B,cAAI,QAAQ,cAAc,QAAW;AACnC,oBAAQ,aAAa,QAAQ;AAAA,UAC/B;AAAA,QACF;AAEA,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,eAAe;AAAA,YACf,YAAY,QAAQ,iBAAiB;AAAA,YACrC,YAAY;AAAA,UACd;AAAA,UACA;AAAA,QACF;AAEA,YAAI,kBAAkB;AAAA,UACpB,YAAY,QAAQ;AAAA,UACpB,eAAe,QAAQ;AAAA,UACvB,mBAAmB,QAAQ;AAAA,UAC3B,cAAc,QAAQ;AAAA,UACtB,aAAa,QAAQ;AAAA,UACrB,gBAAgB,QAAQ;AAAA,UACxB,sBAAsB;AAAA,UACtB,YAAY,QAAQ;AAAA,QACtB;AAEA,YAAI;AAEJ;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,UAAU,OAAO,KAAK,QAAQ,OAAO,GAAG;AAC1C,oBAAM,EAAE,OAAc,KAAU,QAAgB,QAAiB;AACjE,qBAAO,QAAQ,OAAO,EAAE;AAAA,YAC1B;AAAA,UACF;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvDjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,CAAC,GAAG,CAAC,YAAY,YAAY;AAAA,IAC3E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,gBAAgB,GAAG;AAC1B,UAAI,WAAW,YAAY,CAAC;AAC5B,eAAS,aAAa,KAAK,WAAW,SAAS;AAC7C,YAAI,MAAM,SAAS,KAAK,WAAW,OAAO;AAC1C,eAAO,OAAO,IAAI,QAAQ;AAAA,MAC5B;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACbjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AAItB,aAAS,gBAAgB,GAAG;AAC1B,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,YAAY;AAAA,IACvF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,iBAAiB,GAAG;AAC3B,UAAI,WAAW,YAAY,CAAC;AAC5B,eAAS,cAAc,KAAK,WAAW,SAAS;AAC9C,YAAI,MAAM,SAAS,KAAK,WAAW,OAAO;AAC1C,eAAO,OAAO,IAAI;AAAA,MACpB;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACbjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,mBAAmB;AAIvB,aAAS,iBAAiB,GAAG;AAC3B,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,iBAAiB,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,YAAY;AAAA,IAC1F;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,eAAe,GAAG;AACzB,aAAO,YAAY,CAAC;AAAA,IACtB;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACRjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,iBAAiB;AAIrB,aAAS,eAAe,GAAG;AACzB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,eAAe,eAAe,CAAC,GAAG,CAAC,eAAe,YAAY;AAAA,IACpF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,SAAS,GAAG;AACnB,UAAI,WAAW,YAAY,CAAC;AAE5B,eAAS,MAAM,KAAK,SAAS;AAC3B,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,eAAe;AAAA,YACf,qBAAqB;AAAA,YACrB,YAAY,CAAC,WAAW,QAAQ,iBAAiB;AAAA,UACnD;AAAA,UACA,WAAW,CAAC;AAAA,QACd;AACA,YAAI,WAAW,QAAQ,cAAc,QAAW;AAC9C,kBAAQ,aAAa,QAAQ;AAAA,QAC/B;AACA,YAAI,kBAAkB;AAAA,UACpB,YAAY;AAAA,UACZ,eAAe,QAAQ;AAAA,UACvB,mBAAmB,QAAQ;AAAA,UAC3B,aAAa,QAAQ;AAAA,UACrB,cAAc,QAAQ;AAAA,UACtB,gBAAgB,QAAQ;AAAA,UACxB,YAAY,QAAQ;AAAA,QACtB;AACA,YAAI,MAAM,CAAC;AACX;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,CAAC,QAAQ,cAAc,QAAQ,qBAAqB;AACtD,kBAAI,QAAQ,SAAS,QAAW;AAC9B,oBAAI,QAAQ,IAAI,IAAI;AAAA,cACtB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7CjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,WAAW;AAIf,aAAS,SAAS,GAAG;AACnB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,SAAS,SAAS,CAAC,GAAG,CAAC,SAAS,YAAY;AAAA,IAClE;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,SAAS,GAAG;AACnB,UAAI,WAAW,YAAY,CAAC;AAC5B,eAAS,MAAM,KAAK,SAAS;AAC3B,YAAI,WAAW,QAAQ,cAAc,QAAW;AAC9C,kBAAQ,aAAa,QAAQ;AAAA,QAC/B;AACA,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,eAAe;AAAA,YACf,qBAAqB;AAAA,YACrB,YAAY,CAAC,WAAW,QAAQ,iBAAiB;AAAA,YACjD,YAAY;AAAA,UACd;AAAA,UACA,WAAW,CAAC;AAAA,QACd;AACA,YAAI,kBAAkB;AAAA,UACpB,YAAY,QAAQ;AAAA,UACpB,eAAe,QAAQ;AAAA,UACvB,mBAAmB,QAAQ;AAAA,UAC3B,aAAa,QAAQ;AAAA,UACrB,cAAc,QAAQ;AAAA,UACtB,gBAAgB,QAAQ;AAAA,UACxB,YAAY,QAAQ;AAAA,QACtB;AACA,YAAI,MAAM,CAAC;AACX;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,CAAC,QAAQ,cAAc,QAAQ,qBAAqB;AACtD,kBAAI,QAAQ,SAAS,QAAW;AAC9B,oBAAI,KAAK,QAAQ,IAAI;AAAA,cACvB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7CjB;AAAA;AAAA;AAEA,QAAI,WAAW;AAEf,aAAS,YAAY,GAAG;AACtB,aAAO,SAAS,CAAC;AAAA,IACnB;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACRjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,CAAC,GAAG,CAAC,YAAY,YAAY;AAAA,IAC3E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,cAAc,GAAG;AACxB,UAAI,WAAW,YAAY,CAAC;AAE5B,eAAS,WAAW,KAAK,UAAU,aAAa,SAAS;AACvD,YAAI,oBAAoB,gBAAgB;AACxC;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,CAAC,mBAAmB;AACtB,4BAAc;AACd,kCAAoB;AAAA,YACtB,OAAO;AACL,4BAAc,SAAS,aAAa,OAAO,KAAK,QAAQ,OAAO;AAAA,YACjE;AAAA,UACF;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC1BjB;AAAA;AAAA;AAEA,QAAI,gBAAgB;AAEpB,aAAS,WAAW,GAAG;AACrB,UAAI,aAAa,cAAc,CAAC;AAEhC,eAAS,QAAQ,KAAK,UAAU,SAAS;AACvC,mBAAW,EAAE,SAAS,QAAQ;AAC9B,eAAO;AAAA,UACL;AAAA,UACA,SAAU,KAAK,OAAO,KAAK,aAAa,SAAS;AAC/C,gBAAI,KAAK,SAAS,OAAO,KAAK,aAAa,OAAO,CAAC;AACnD,mBAAO;AAAA,UACT;AAAA,UACA,CAAC;AAAA,UACD;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACtBjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,aAAa;AAIjB,aAAS,WAAW,GAAG;AACrB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,WAAW,WAAW,CAAC,GAAG,CAAC,WAAW,YAAY;AAAA,IACxE;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAElB,aAAS,eAAe,GAAG;AACzB,UAAI,WAAW,YAAY,CAAC;AAC5B,UAAI,eAAe,gBAAgB,CAAC;AACpC,eAAS,YAAY,KAAK,UAAU,SAAS;AAC3C,YAAK,YAAY;AAAS,oBAAU,CAAC;AAErC,mBAAW,EAAE,SAAS,QAAQ;AAC9B,gBAAQ,YAAY,QAAQ,aAAa,EAAE;AAC3C,gBAAQ,uBAAuB;AAC/B,YAAI,WAAW,CAAC;AAEhB;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AACrC,gBAAI,QAAQ,QAAW;AACrB;AAAA,YACF;AACA,gBAAI,SAAS,SAAS,OAAO,KAAK,QAAQ,OAAO,IAAI;AACrD,gBAAI,WAAW,KAAK;AAClB;AAAA,YACF;AACA,gBAAI,UAAU,QAAQ;AACtB,gBAAI,aACF,QAAQ,eAAe,UAAU,KAAK,UAAU,OAAO,IAAI;AAC7D,gBAAI,UACF,QAAQ,eAAe,WAClB,QAAQ,OAAO,QAAQ,CAAC,GAAG;AAAA,cAAS,QAAQ,gBAAgB,CAAC;AAAA,cAC5D,CAAC,MAAM;AAAA,YAAE,IACX,aAAa,CAAC,MAAM,GAAG,QAAQ,OAAO,MAAM,QAAQ,YAAY;AACtE,gBAAI,aACF,QAAQ,eAAe,UAAU,KAAK,UAAU,OAAO,IAAI;AAC7D,gBAAI,CAAC,SAAS,QAAQ,QAAQ,CAAC,GAAG;AAChC,uBAAS,QAAQ,QAAQ,CAAC,IAAI,CAAC;AAAA,YACjC;AACA,qBAAS,QAAQ,QAAQ,CAAC,EAAE,KAAK;AAAA,cAC/B;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UACA;AAAA,QACF;AACA,YAAI,MAAM,QAAQ,UAAU,GAAG;AAE/B,YAAI,IAAI,SAAS;AACjB,YAAI,OAAO,WAAY;AACrB,cAAI,CAAC,SAAS,CAAC,GAAG;AAChB;AAAA,UACF;AACA,cAAI,cAAc,CAAC;AACnB,mBAAS,CAAC,EAAE,QAAQ,SAAU,KAAK;AACjC,gBAAI,UAAU,IAAI;AAClB,gBAAI,aAAa,IAAI;AACrB,gBAAI,UAAU,IAAI;AAClB,gBAAI,aAAa,IAAI;AAErB,gBAAI;AACJ,gBAAI,OAAO,UAAU,eAAe,KAAK,aAAa,UAAU,GAAG;AACjE,sBAAQ,YAAY,UAAU;AAC9B,qBAAO,YAAY,UAAU;AAAA,YAC/B,OAAO;AACL,sBAAQ,EAAE,IAAI,KAAK,OAAO;AAC1B,kBAAI,UAAU,UAAa,CAAC,EAAE,IAAI,KAAK,OAAO,GAAG;AAC/C;AAAA,cACF;AACA,gBAAE,MAAM,KAAK,OAAO;AAAA,YACtB;AACA,gBACE,EAAE,IAAI,KAAK,OAAO,KAClB,CAAC,OAAO,UAAU,eAAe,KAAK,aAAa,UAAU,GAC7D;AACA,0BAAY,UAAU,IAAI,EAAE,IAAI,KAAK,OAAO;AAAA,YAC9C;AACA,cAAE,IAAI,KAAK,SAAS,KAAK;AAAA,UAC3B,CAAC;AAAA,QACH;AAEA,eAAO;AAAK,eAAK;AACjB,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACzFjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,iBAAiB;AAIrB,aAAS,eAAe,GAAG;AACzB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,eAAe,eAAe,CAAC,GAAG,CAAC,eAAe,YAAY;AAAA,IACpF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,iBAAiB,GAAG;AAC3B,UAAI,WAAW,YAAY,CAAC;AAE5B,eAAS,cAAc,KAAK,UAAU,SAAS;AAC7C,mBAAW,EAAE,SAAS,QAAQ;AAC9B,YAAI,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,GAAG;AACtE,YAAI;AAEJ;AAAA,UACE;AAAA,UACA,SAAU,OAAO,KAAK,QAAQ,SAAS;AAErC,oBAAQ,eAAe,SAAU,MAAM;AACrC,6BAAe;AAAA,YACjB;AAEA,2BAAe;AACf,gBAAI,IAAI,SAAS,OAAO,KAAK,QAAQ,OAAO;AAC5C,gBAAI,CAAC,QAAQ,UAAU,iBAAiB,QAAW;AACjD,6BACE,UAAU,KAAK,MAAM,QAAQ,KAAK,KAAK,MAAM,QAAQ,CAAC;AAAA,YAC1D;AACA,gBAAI,QAAQ,SAAS,QAAW;AAC9B,gBAAE,IAAI,KAAK,QAAQ,MAAM,CAAC;AAAA,YAC5B,OAAO;AACL,oBAAM;AAAA,YACR;AACA,gBAAI,cAAc;AAChB,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,UACA;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC3CjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,mBAAmB;AAIvB,aAAS,iBAAiB,GAAG;AAC3B,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,iBAAiB,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,YAAY;AAAA,IAC1F;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AAEtB,aAAS,eAAe,GAAG;AACzB,UAAI,eAAe,gBAAgB,CAAC;AACpC,eAAS,YAAY,MAAM,OAAO;AAChC,YAAI;AACJ,YAAI;AACJ,YAAI,EAAE,SAAS,IAAI,GAAG;AACpB,uBAAa;AAAA,QACf,OAAO;AACL,sBAAY;AAAA,QACd;AACA,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,kBAAQ,CAAC,KAAK;AAAA,QAChB,OAAO;AACL,kBAAQ,EAAE,UAAU,KAAK;AAAA,QAC3B;AACA,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAI,EAAE,SAAS,MAAM,CAAC,CAAC,GAAG;AACxB,kBAAM,CAAC,IAAI,EAAE,OAAO,MAAM,CAAC,CAAC;AAAA,UAC9B;AACA,cAAI,MAAM,QAAQ,MAAM,CAAC,CAAC,GAAG;AAC3B,gBAAI,cAAc,QAAW;AAC3B,0BAAY,EAAE,OAAO,UAAU;AAAA,YACjC;AACA,gBACE,UAAU,UAAU,MAAM,CAAC,EAAE,UAC7B,EAAE,QAAQ,EAAE,UAAU,WAAW,MAAM,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC,GAC3D;AAEA,qBAAO,MAAM,CAAC;AAAA,YAChB;AAAA,UACF,WAAW,MAAM,CAAC,aAAa,QAAQ;AACrC,gBAAI,eAAe,QAAW;AAC5B,2BAAa,aAAa,IAAI;AAAA,YAChC;AACA,gBAAI,MAAM,CAAC,EAAE,KAAK,UAAU,GAAG;AAE7B,qBAAO,MAAM,CAAC;AAAA,YAChB;AAAA,UACF,OAAO;AACL,kBAAM,IAAI;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,mBAAe,eAAe;AAE9B,WAAO,UAAU;AAAA;AAAA;;;ACxDjB;AAAA;AAAA;AAEA,QAAI,gBAAgB;AACpB,QAAI,iBAAiB;AAErB,aAAS,YAAY,GAAG;AACtB,UAAI,cAAc,eAAe,CAAC;AAClC,UAAI,aAAa,cAAc,CAAC;AAEhC,eAAS,SAAS,KAAK,OAAO,SAAS;AACrC,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,QAAQ;AAAA,UACV;AAAA,UACA,WAAW,CAAC;AAAA,QACd;AACA,YAAI,SAAS,CAAC,QAAQ;AACtB,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,SAAS;AAAA,cACP,WAAW;AAAA,cACX,cAAc;AAAA,cACd,aAAa,CAAC;AAAA,YAChB;AAAA,YACA,YAAY;AAAA,cACV,WAAW;AAAA,cACX,cAAc;AAAA,cACd,aAAa;AAAA,YACf;AAAA,UACF;AAAA,UACA;AAAA,QACF;AACA,gBAAQ,aAAa;AACrB,gBAAQ,eAAe;AACvB,gBAAQ,cAAc;AACtB,gBAAQ,aAAa;AACrB,gBAAQ,SAAS,QAAQ,SAAS,QAAQ,UAAU,QAAQ;AAC5D,gBAAQ,UAAU,QAAQ,SAAS,QAAQ,aAAa,QAAQ;AAEhE,YAAI,OAAO,SAAU,OAAO,KAAK,QAAQ,SAAS;AAChD,cAAI,YAAY,QAAQ,MAAM,KAAK,MAAM,OAAO;AAC9C,mBAAO,QAAQ;AAAA,UACjB,OAAO;AACL,mBAAO,CAAC,QAAQ;AAAA,UAClB;AAAA,QACF;AACA,eAAO,WAAW,KAAK,MAAM,OAAO;AAAA,MACtC;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnDjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,CAAC,GAAG,CAAC,YAAY,YAAY;AAAA,IAC3E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,iBAAiB;AAIrB,aAAS,eAAe,GAAG;AACzB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,eAAe,eAAe,CAAC,GAAG,CAAC,eAAe,YAAY;AAAA,IACpF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AAItB,aAAS,gBAAgB,GAAG;AAC1B,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,YAAY;AAAA,IACvF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,WAAW;AAIf,aAAS,SAAS,GAAG;AACnB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,SAAS,SAAS,CAAC,GAAG,CAAC,SAAS,YAAY;AAAA,IAClE;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,YAAY,GAAG;AACtB,UAAI,WAAW,YAAY,CAAC;AAC5B,eAAS,SAAS,KAAK,OAAO,SAAS;AACrC,kBAAU,EAAE;AAAA,UACV;AAAA,YACE,QAAQ;AAAA,UACV;AAAA,UACA,WAAW,CAAC;AAAA,QACd;AACA,gBAAQ,SAAS;AACjB,eAAO,SAAS,KAAK,OAAO,OAAO;AAAA,MACrC;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnBjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,CAAC,GAAG,CAAC,YAAY,YAAY;AAAA,IAC3E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,gBAAgB;AAIpB,aAAS,cAAc,GAAG;AACxB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,cAAc,cAAc,CAAC,GAAG,CAAC,cAAc,YAAY;AAAA,IACjF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAElB,aAAS,YAAY,GAAG;AACtB,UAAI,WAAW,YAAY,CAAC;AAC5B,eAAS,SAAS,KAAK,WAAW,SAAS;AACzC,eAAO,CAAC,CAAC,SAAS,KAAK,WAAW,OAAO;AAAA,MAC3C;AACA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAIlB,aAAS,YAAY,GAAG;AACtB,UAAI,eAAe,gBAAgB,CAAC;AACpC,aAAO,aAAa,YAAY,YAAY,CAAC,GAAG,CAAC,YAAY,YAAY;AAAA,IAC3E;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,QAAI,cAAc;AAClB,QAAI,kBAAkB;AACtB,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,gBAAgB;AACpB,QAAI,cAAc;AAClB,QAAI,kBAAkB;AACtB,QAAI,mBAAmB;AACvB,QAAI,iBAAiB;AACrB,QAAI,WAAW;AACf,QAAI,cAAc;AAClB,QAAI,aAAa;AACjB,QAAI,iBAAiB;AACrB,QAAI,mBAAmB;AACvB,QAAI,cAAc;AAClB,QAAI,iBAAiB;AACrB,QAAI,kBAAkB;AACtB,QAAI,WAAW;AACf,QAAI,cAAc;AAClB,QAAI,gBAAgB;AACpB,QAAI,cAAc;AAIlB,aAAS,MAAM,GAAG;AAChB,kBAAY,CAAC;AACb,sBAAgB,CAAC;AACjB,kBAAY,CAAC;AACb,gBAAU,CAAC;AACX,oBAAc,CAAC;AACf,kBAAY,CAAC;AACb,sBAAgB,CAAC;AACjB,uBAAiB,CAAC;AAClB,qBAAe,CAAC;AAChB,eAAS,CAAC;AACV,kBAAY,CAAC;AACb,iBAAW,CAAC;AACZ,qBAAe,CAAC;AAChB,uBAAiB,CAAC;AAClB,kBAAY,CAAC;AACb,qBAAe,CAAC;AAChB,sBAAgB,CAAC;AACjB,eAAS,CAAC;AACV,kBAAY,CAAC;AACb,oBAAc,CAAC;AACf,kBAAY,CAAC;AAEb,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpDjB;AAAA;AAAA,KAAC,SAAU,MAAM;AACbqBAAqB;AAAA;AAAA,QAErB;AAAA;AAAA,QAGA;AAAA,MACJ;AAMA,UAAI,aAAa;AAAA;AAAA;AAAA,QAGb,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,QACN,KAAK;AAAA,QACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,QAGN,OAAO;AAAA,QACP,OAAO;AAAA,MACX;AAMA,UAAI,cAAc;AAAA,QACdmBAAmB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,EAAE,KAAK,EAAE;AAE5E,UAAI,YAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,EAAE,KAAK,EAAE;AAS3D,UAAI,UAAU,SAASC,SAAQ,OAAO,MAAM;AACxC,YAAI,YAAY;AAChB,YAAI,SAAS;AACb,YAAI,gBAAgB;AACpB,YAAI,iBAAiB;AACrB,YAAI,qBAAqB,CAAC;AAC1B,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI,eAAe;AAEnB,YAAI,OAAO,UAAU,UAAU;AAC3B,iBAAO;AAAA,QACX;AAEA,YAAI,OAAO,SAAS,UAAU;AAC1B,sBAAY;AAAA,QAChB;AAEA,iBAAS,UAAU;AACnB,mBAAW,YAAY;AAEvB,YAAI,OAAO,SAAS,UAAU;AAC1B,yBAAe,KAAK,gBAAgB;AACpC,+BAAsB,KAAK,UAAU,OAAO,KAAK,WAAW,WAAY,KAAK,SAAS;AACtF,qBAAY,CAAC,KAAK,WAAW,KAAK,KAAK,YAAa;AACpD,qBAAW,KAAK,QAAQ;AACxB,4BAAkB,KAAK,eAAe;AACtC,qBAAW,KAAK,QAAQ;AACxB,2BAAkB,KAAK,YAAY,SAAS,KAAK,SAAS,QAAS,QAAQ;AAC3E,sBAAY,KAAK,aAAa;AAE9B,cAAI,UAAU;AACV,4BAAgB;AAAA,UACpB;AAEA,cAAI,iBAAiB;AACjB,4BAAgB;AAAA,UACpB;AAEA,cAAI,UAAU;AACV,4BAAgB;AAAA,UACpB;AAEA,mBAAU,KAAK,QAAQ,UAAU,KAAK,IAAI,KAAK,iBAC3C,UAAU,KAAK,IAAI,IAAK,iBAAiB,UAAU,KAAK,CAAC;AAE7D,qBAAY,KAAK,QAAQ,YAAY,KAAK,IAAI,IAC1C,YAAY,KAAK,IAAI,IACrB,KAAK,SAAS,SAAS,KAAK,SAAS,OAAO,CAAC,IAAI,YAAY;AAGjE,cAAI,KAAK,aAAa,OAAO,KAAK,UAAU,WAAW,YAAY,MAAM,UAAU,SAAS,KAAK,KAAK,SAAS,GAAG;AAC9G,iBAAK,UAAU,QAAQ,SAAU,GAAG;AAChC,iCAAmB,IAAI,EAAE,IAAI,IAAI;AAAA,YACrC,CAAC;AAED,wBAAY;AAAA,UAChB,OAAO;AACH,wBAAY,CAAC,CAAC,KAAK;AAAA,UACvB;AAGA,cAAI,KAAK,UAAU,OAAO,KAAK,OAAO,WAAW,YAAY,MAAM,UAAU,SAAS,KAAK,KAAK,MAAM,GAAG;AACrG,iBAAK,OAAO,QAAQ,SAAU,GAAG;AAC7B,iCAAmB,IAAI,EAAE,IAAI,IAAI;AAAA,YACrC,CAAC;AAAA,UACL;AAGA,iBAAO,KAAK,kBAAkB,EAAE,QAAQ,SAAU,GAAG;AACjD,gBAAI;AAEJ,gBAAI,EAAE,SAAS,GAAG;AACd,kBAAI,IAAI,OAAO,QAAQ,YAAY,CAAC,IAAI,OAAO,IAAI;AAAA,YACvD,OAAO;AACH,kBAAI,IAAI,OAAO,YAAY,CAAC,GAAG,IAAI;AAAA,YACvC;AAEA,oBAAQ,MAAM,QAAQ,GAAG,mBAAmB,CAAC,CAAC;AAAA,UAClD,CAAC;AAGD,eAAK,MAAM,oBAAoB;AAC3B,4BAAgB;AAAA,UACpB;AAAA,QACJ;AAEA,wBAAgB;AAGhB,uBAAe,YAAY,YAAY;AAGvC,gBAAQ,MAAM,QAAQ,gBAAgB,EAAE;AAExC,4BAAoB;AACpB,6BAAqB;AAErB,aAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK;AACtC,eAAK,MAAM,CAAC;AAEZ,cAAI,qBAAqB,IAAI,kBAAkB,GAAG;AAE9C,gCAAoB;AAAA,UACxB,WAAW,SAAS,EAAE,GAAG;AAErB,iBAAK,qBAAqB,SAAS,EAAE,EAAE,MAAM,aAAa,IAAI,MAAM,SAAS,EAAE,IAAI,SAAS,EAAE;AAE9F,gCAAoB;AAAA,UACxB,WAAW,MAAM,SAAS;AAEtB,gBAAI,IAAI,IAAI,KAAK,mBAAmB,QAAQ,MAAM,IAAI,CAAC,CAAC,KAAK,GAAG;AAC5D,+BAAiB;AACjB,mBAAK;AAAA,YACT,WAAW,uBAAuB,MAAM;AACpC,mBAAK,WAAW,aAAa,IAAI,QAAQ,EAAE;AAC3C,8BAAgB;AAAA,YACpB,OAAO;AAEH,mBAAK,qBAAqB,QAAQ,EAAE,EAAE,MAAM,aAAa,IAAI,MAAM,QAAQ,EAAE,IAAI,QAAQ,EAAE;AAAA,YAC/F;AAEA,gCAAoB;AACpB,iCAAqB;AAAA,UACzB,WAAW,MAAM,YAAY;AACzB,6BAAiB;AACjB,iBAAK;AAEL,gBAAI,MAAM,IAAI,GAAG;AACb,mBAAK,WAAW,aAAa;AAAA,YACjC;AACA,iCAAqB;AAAA,UACzB;AAAA;AAAA,YAEI,OAAO,EAAE,KAAK,EAAE,YAAY,UACvB,QAAQ,EAAE,MAAM,OAAO,EAAE,mBAAmB,iBAE5C,QAAQ,EAAE,MAAM;AAAA,YAAK;AAC1B,iBAAK,qBAAqB,OAAO,OAAO,EAAE,EAAE,MAAM,aAAa,IAAI,YAAY,OAAO,EAAE,IAAI,OAAO,EAAE;AACrG,kBAAM,MAAM,IAAI,CAAC,MAAM,UAAU,MAAM,IAAI,CAAC,EAAE,MAAM,aAAa,IAAI,YAAY;AAEjF,gCAAoB;AAAA,UACxB,OAAO;AACH,gBAAI,uBAAuB,MAAM;AAC7B,mBAAK,WAAW,aAAa,IAAI;AACjC,8BAAgB;AAChB,mCAAqB;AAAA,YACzB,WAAW,sBAAsB,cAAc,KAAK,EAAE,KAAK,OAAO,OAAO,EAAE,EAAE,MAAM,YAAY,IAAI;AAE/F,mBAAK,MAAM;AAAA,YACf;AACA,gCAAoB;AAAA,UACxB;AAGA,oBAAU,GAAG,QAAQ,IAAI,OAAO,aAAa,eAAe,OAAO,GAAG,GAAG,SAAS;AAAA,QACtF;AAEA,YAAI,WAAW;AACX,mBAAS,OAAO,QAAQ,cAAc,SAAU,GAAGC,IAAG,GAAG;AACrD,gBAAI,IAAIA,GAAE,YAAY,KAAK,MAAM,OAAO,IAAI;AAC5C,mBAAQ,OAAO,KAAK,kBAAkB,EAAE,QAAQ,EAAE,YAAY,CAAC,IAAI,IAAK,IAAI,EAAE,YAAY;AAAA,UAC9F,CAAC;AAAA,QACL;AAKA,iBAAS,OAAO,QAAQ,QAAQ,SAAS,EACpC,QAAQ,IAAI,OAAO,OAAO,YAAY,KAAK,GAAG,GAAG,SAAS,EAC1D,QAAQ,IAAI,OAAO,SAAS,YAAY,SAAS,YAAY,OAAO,GAAG,GAAG,EAAE;AAEjF,YAAI,YAAY,OAAO,SAAS,UAAU;AACtC,kBAAQ,OAAO,OAAO,QAAQ,MAAM;AACpC,mBAAS,OAAO,MAAM,GAAG,QAAQ;AAEjC,cAAI,CAAC,OAAO;AACR,qBAAS,OAAO,MAAM,GAAG,OAAO,YAAY,SAAS,CAAC;AAAA,UAC1D;AAAA,QACJ;AAEA,YAAI,CAAC,gBAAgB,CAAC,WAAW;AAC7B,mBAAS,OAAO,YAAY;AAAA,QAChC;AAEA,eAAO;AAAA,MACX;AAOA,UAAI,aAAa,SAASC,YAAW,MAAM;AAOvC,eAAO,SAAS,kBAAkB,OAAO;AACrC,iBAAO,QAAQ,OAAO,IAAI;AAAA,QAC9B;AAAA,MACJ;AAMA,UAAI,cAAc,SAASC,aAAY,OAAO;AAC1C,eAAO,MAAM,QAAQ,0BAA0B,MAAM;AAAA,MACzD;AAOA,UAAI,uBAAuB,SAAU,IAAI,oBAAoB;AACzD,iBAAS,KAAK,oBAAoB;AAC9B,cAAI,mBAAmB,CAAC,MAAM,IAAI;AAC9B,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AAGjD,eAAO,UAAU;AACjB,eAAO,QAAQ,aAAa;AAAA,MAChC,WAAW,OAAO,WAAW,eAAe,OAAO,KAAK;AAGpD,eAAO,CAAC,GAAG,WAAY;AACnB,iBAAO;AAAA,QACX,CAAC;AAAA,MACL,OAAO;AAGH,YAAI;AACA,cAAI,KAAK,WAAW,KAAK,YAAY;AACjC,kBAAM;AAAA,UACV,OAAO;AACH,iBAAK,UAAU;AACf,iBAAK,aAAa;AAAA,UACtB;AAAA,QACJ,SAAS,GAAG;AAAA,QAAC;AAAA,MACjB;AAAA,IACJ,GAAG,OAAI;AAAA;AAAA;;;ACxpDP,IAAAC,uBAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA;AAKA,QAAI,OAAO;AAOX,aAAS,eAAe;AACpB,cAAQ,OAAO,OAAO,SAAS;AAC/B,aAAO,OAAM;AAAA,IACjB;AAEA,aAAS,QAAQ,QAAQ;AACrB,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AAAA,MACb,WAAW;AAAA,MACX,MAAM;AAAA,IACV;AAAA;AAAA;;;ACxBA;AAAA;AAAA;AAEA,QAAI,iBAAiB;AAErB,QAAI,WAAW;AACf,QAAI;AACJ,QAAI;AAEJ,QAAI;AAEJ,aAAS,QAAQ;AACb,iBAAW;AAAA,IACf;AAEA,aAAS,cAAc,YAAY;AAC/B,UAAI,CAAC,YAAY;AACb,YAAI,aAAa,UAAU;AACvB,qBAAW;AACX,gBAAM;AAAA,QACV;AACA;AAAA,MACJ;AAEA,UAAI,eAAe,UAAU;AACzB;AAAA,MACJ;AAEA,UAAI,WAAW,WAAW,SAAS,QAAQ;AACvC,cAAM,IAAI,MAAM,yCAAyC,SAAS,SAAS,uCAAuC,WAAW,SAAS,kBAAkB,UAAU;AAAA,MACtK;AAEA,UAAI,SAAS,WAAW,MAAM,EAAE,EAAE,OAAO,SAAS,MAAM,KAAK,KAAI;AAC9D,eAAO,QAAQ,IAAI,YAAY,IAAI;AAAA,MACtC,CAAC;AAED,UAAI,OAAO,QAAQ;AACf,cAAM,IAAI,MAAM,yCAAyC,SAAS,SAAS,2DAA2D,OAAO,KAAK,IAAI,CAAC;AAAA,MAC3J;AAEA,iBAAW;AACX,YAAM;AAAA,IACV;AAEA,aAAS,WAAW,YAAY;AAC5B,oBAAc,UAAU;AACxB,aAAO;AAAA,IACX;AAEA,aAAS,QAAQ,MAAM;AACnB,qBAAe,KAAK,IAAI;AACxB,UAAI,iBAAiB,MAAM;AACvB,cAAM;AACN,uBAAe;AAAA,MACnB;AAAA,IACJ;AAEA,aAAS,UAAU;AACf,UAAI,CAAC,UAAU;AACX,sBAAc,QAAQ;AAAA,MAC1B;AAEA,UAAI,cAAc,SAAS,MAAM,EAAE;AACnC,UAAI,cAAc,CAAC;AACnB,UAAI,IAAI,eAAe,UAAU;AACjC,UAAI;AAEJ,aAAO,YAAY,SAAS,GAAG;AAC3B,YAAI,eAAe,UAAU;AAC7B,yBAAiB,KAAK,MAAM,IAAI,YAAY,MAAM;AAClD,oBAAY,KAAK,YAAY,OAAO,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAAA,MAC7D;AACA,aAAO,YAAY,KAAK,EAAE;AAAA,IAC9B;AAEA,aAAS,cAAc;AACnB,UAAI,UAAU;AACV,eAAO;AAAA,MACX;AACA,iBAAW,QAAQ;AACnB,aAAO;AAAA,IACX;AAOA,aAAS,OAAO,OAAO;AACnB,UAAI,mBAAmB,YAAY;AACnC,aAAO,iBAAiB,KAAK;AAAA,IACjC;AAEA,aAAS,MAAO;AACd,aAAO,YAAY;AAAA,IACrB;AAEA,WAAO,UAAU;AAAA,MACb;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN;AAAA,MACA,UAAU;AAAA,IACd;AAAA;AAAA;;;ACtGA;AAAA;AAAA;AAEA,QAAI,SAAS,OAAO,WAAW,aAAa,OAAO,UAAU,OAAO;AAEpE,QAAI;AAEJ,QAAI,CAAC,UAAU,CAAC,OAAO,iBAAiB;AACpC,mBAAa,SAAS,MAAM;AACxB,YAAI,QAAQ,CAAC;AACb,iBAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC3B,gBAAM,KAAK,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG,CAAC;AAAA,QAC9C;AACA,eAAO;AAAA,MACX;AAAA,IACJ,OAAO;AACH,mBAAa,SAAS,MAAM;AACxB,eAAO,OAAO,gBAAgB,IAAI,WAAW,IAAI,CAAC;AAAA,MACtD;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA;AAGA,WAAO,UAAU,SAAU,QAAQ,UAAU,MAAM;AAMjD,UAAI,QAAQ,KAAK,KAAK,IAAI,SAAS,SAAS,CAAC,IAAI,KAAK,OAAO;AAe7D,UAAI,OAAO,CAAC,EAAE,MAAM,OAAO,OAAO,SAAS;AAC3C,UAAI,KAAK;AAET,aAAO,MAAM;AACX,YAAI,QAAQ,OAAO,IAAI;AAEvB,YAAI,IAAI;AACR,eAAO,KAAK;AAGV,gBAAM,SAAS,MAAM,CAAC,IAAI,IAAI,KAAK;AAEnC,cAAI,GAAG,WAAW,CAAC;AAAM,mBAAO;AAAA,QAClC;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACvCA;AAAA;AAAA;AAEA,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,SAAS;AAEb,aAAS,SAAS,QAAQ;AACtB,UAAI,cAAc;AAClB,UAAI;AAEJ,UAAI,MAAM;AAEV,aAAO,CAAC,MAAM;AACV,cAAM,MAAM,OAAO,QAAQ,SAAS,IAAI,GAAG,CAAC;AAC5C,eAAO,SAAU,KAAK,IAAI,IAAI,cAAc,CAAE;AAC9C;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA;AAAA;AAEA,QAAI,WAAW;AACf,QAAI,WAAW;AAKf,QAAI,cAAc;AAIlB,QAAI,UAAU;AAGd,QAAI;AAGJ,QAAI;AAMJ,aAAS,MAAM,iBAAiB;AAC5B,UAAI,MAAM;AAEV,UAAI,UAAU,KAAK,OAAO,KAAK,IAAI,IAAI,eAAe,IAAK;AAE3D,UAAI,YAAY,iBAAiB;AAC7B;AAAA,MACJ,OAAO;AACH,kBAAU;AACV,0BAAkB;AAAA,MACtB;AAEA,YAAM,MAAM,SAAS,OAAO;AAC5B,YAAM,MAAM,SAAS,eAAe;AACpC,UAAI,UAAU,GAAG;AACb,cAAM,MAAM,SAAS,OAAO;AAAA,MAChC;AACA,YAAM,MAAM,SAAS,OAAO;AAC5B,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7CjB;AAAA;AAAA;AACA,QAAI,WAAW;AAEf,aAAS,UAAU,IAAI;AACnB,UAAI,CAAC,MAAM,OAAO,OAAO,YAAY,GAAG,SAAS,GAAI;AACjD,eAAO;AAAA,MACX;AAEA,UAAI,gBAAgB,IAAI,OAAO,OAC7B,SAAS,IAAI,EAAE,QAAQ,wBAAwB,MAAM,IACvD,GAAG;AACH,aAAO,CAAC,cAAc,KAAK,EAAE;AAAA,IACjC;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACdjB;AAAA;AAAA;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACFjB;AAAA;AAAA;AAEA,QAAI,WAAW;AACf,QAAI,QAAQ;AACZ,QAAI,UAAU;AAMd,QAAI,kBAAkB,uCAAuC;AAQ7D,aAAS,KAAK,WAAW;AACrB,eAAS,KAAK,SAAS;AACvB,aAAO,OAAO;AAAA,IAClB;AAQA,aAAS,OAAO,UAAU;AACtB,wBAAkB;AAClB,aAAO,OAAO;AAAA,IAClB;AAOA,aAAS,WAAW,eAAe;AAC/B,UAAI,kBAAkB,QAAW;AAC7B,iBAAS,WAAW,aAAa;AAAA,MACrC;AAEA,aAAO,SAAS,SAAS;AAAA,IAC7B;AAMA,aAAS,WAAW;AAClB,aAAO,MAAM,eAAe;AAAA,IAC9B;AAGA,WAAO,UAAU;AACjB,WAAO,QAAQ,WAAW;AAC1B,WAAO,QAAQ,OAAO;AACtB,WAAO,QAAQ,SAAS;AACxB,WAAO,QAAQ,aAAa;AAC5B,WAAO,QAAQ,UAAU;AAAA;AAAA;;;AC7DzB;AAAA;AAAA;AACA,WAAO,UAAU;AAAA;AAAA;;;ACDjB;AAAA;AAAA,QAAM,IAAI,mBAAoB,gBAAiB;AAE/C,QAAM,UAAU;AAEhB,QAAM,UAAU;AAEhB,WAAO,UAAU,SAAS,OAAO,QAAQ,SAAS;AAChD,gBAAU,EAAE;AAAA,QACV;AAAA,UACE,WAAW;AAAA,UACX,MAAM;AAAA,UACN,UAAU;AAAA,UACV,oBAAoB;AAAA,QACtB;AAAA,QACA;AAAA,MACF;AAEA,YAAM,QAAQ,CAAC;AAEf,eAAS,gBAAgBC,SAAQ,UAAU,IAAI;AAC7C,YAAI;AAAU,sBAAY;AAC1B,QAAAA,QAAO,SAAS,CAAC,YAAY,eAAe;AAC1C,cAAI,WAAW,UAAU,WAAW,OAAO,QAAQ;AACjD;AAAA,cACE,WAAW,OAAO;AAAA,cAClB,WACE,cACC,WAAW,YAAY,cAAc,kBAAkB,OAAO;AAAA,cACjE;AAAA,YACF;AAAA,UACF,OAAO;AACL,eAAG,WAAW,YAAY,UAAU;AAAA,UACtC;AAAA,QACF,CAAC;AAAA,MACH;AACA,eAAS,iBAAiB,MAAM;AAC9B,YAAI,CAAC,QAAQ;AAAoB,iBAAO;AACxC,cAAM,MAAM,EAAE,UAAU,IAAI;AAC5B,cAAM,aAAa,CAAC,eAAe,mBAAmB;AACtD,cAAM,QAAQ,CAAC;AACf,UAAE,KAAK,YAAY,CAAC,SAAS;AAC3B,cAAI,IAAI,IAAI,MAAM,QAAW;AAC3B,kBAAM,OAAO,EAAE,UAAU,IAAI;AAC7B,kBAAM,KAAK,CAAC,MAAM,IAAI,CAAC;AACvB,gBAAI,IAAI,IAAI,IAAI,IAAI;AACpB,mBAAO,IAAI,IAAI;AAAA,UACjB;AAAA,QACF,CAAC;AACD,YAAI,MAAM,QAAQ;AAChB,kBAAQ;AAAA,YACN;AAAA,YACA;AAAA,UACF;AAAA,QACF;AACA,YAAI,IAAI,aAAa;AACnB,cAAI,kBAAkB,IAAI;AAC1B,iBAAO,IAAI;AACX,kBAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF;AACA,YAAI,IAAI,UAAU;AAChB,cAAI,cAAc,IAAI;AACtB,iBAAO,IAAI;AACX,kBAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF;AACA,YAAI,IAAI,IAAI;AACV,cAAI,SAAS,IAAI;AACjB,iBAAO,IAAI;AACX,kBAAQ,IAAI,wEAAwE;AAAA,QACtF;AACA,eAAO;AAAA,MACT;AACA,sBAAgB,QAAQ,IAAI,CAAC,YAAY,eAAe;AACtD,YAAI,WAAW,YAAY,YAAY,WAAW,WAAW,WAAW,QAAQ,MAAM;AACpF,gBAAM,OAAO,iBAAiB,WAAW,OAAO;AAChD,cAAI,WAAW,WAAW,QAAQ,aAAa,EAAE;AACjD,cAAI,aAAa;AAAY,uBAAW;AACxC,gBAAM,OAAO;AAAA,YACX,MAAM;AAAA,YACN;AAAA,YACA,IAAI;AAAA,cACF,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,WAAW;AAAA,cACX,YAAY;AAAA,cACZ,kBAAkB;AAAA,cAClB,GAAI,KAAK,UAAU,CAAC;AAAA,YACtB;AAAA,UACF;AAEA,cAAI,OAAO,KAAK,SAAS,UAAU;AACjC,iBAAK,SAAS,CAAC,KAAK,IAAI;AAAA,UAC1B,WAAW,KAAK,gBAAgB,OAAO;AACrC,iBAAK,SAAS,KAAK;AAAA,UACrB,OAAO;AACL,oBAAQ;AAAA,cACN,+CAA+C,OAAO,KAAK,IAAI;AAAA,YACjE;AACA;AAAA,UACF;AACA,cAAI,KAAK,UAAU,KAAK,YAAY;AAClC,iBAAK,SAAS;AAAA,UAChB;AACA,cAAI,KAAK,WAAW;AAClB,iBAAK,YAAY;AAAA,UACnB;AAEA,cAAI,KAAK,oBAAoB,QAAW;AACtC,iBAAK,gBAAgB;AAAA,UACvB,OAAO;AACL,iBAAK,gBAAgB;AACrB,iBAAK,UAAU,KAAK;AAAA,UACtB;AACA,cAAI,KAAK,iBAAiB;AACxB,gBAAI,EAAE,QAAQ,KAAK,eAAe,GAAG;AACnC,mBAAK,oBAAoB,KAAK;AAAA,YAChC,OAAO;AACL,mBAAK,oBAAoB,CAAC,KAAK,eAAe;AAAA,YAChD;AAAA,UACF;AACA,cAAI,KAAK,aAAa;AACpB,iBAAK,SAAS;AACd,iBAAK,gBAAgB;AACrB,iBAAK,eAAe;AAAA,UACtB;AACA,cAAI,KAAK,WAAW;AAClB,iBAAK,YAAY,KAAK;AAAA,UACxB;AACA,gBAAM,KAAK,IAAI;AAAA,QACjB;AAAA,MACF,CAAC;AAED,aAAO,IAAI,UAAU,iBAAkB;AACrC,eAAO,SAAS,KAAK,IAAI,EAAE,QAAQ;AAAA,MACrC,CAAC;AAED,aAAO,IAAI,aAAa,iBAAkB;AACxC,eAAO,SAAS,KAAK,IAAI,EAAE,WAAW;AAAA,MACxC,CAAC;AAED,aAAO,IAAI,cAAc,iBAAkB;AACzC,eAAO,SAAS,KAAK,IAAI,EAAE,YAAY;AAAA,MACzC,CAAC;AAED,aAAO,IAAI,oBAAoB,iBAAkB;AAE/C,eAAO,SAAS,KAAK,IAAI,EAAE,kBAAkB;AAAA,MAC/C,CAAC;AAED,qBAAe,SAAS,WAAW;AACjC,cAAM,KAAK;AAEX,cAAM,MAAM,GAAG,UAAU;AACzB,cAAM,MAAM,EAAE,UAAU,GAAG;AAC3B,YAAI,IAAI,MAAM;AACZ,YAAE,OAAO,IAAI,MAAM,CAAC,GAAG,MAAM;AAC3B,cAAE,IAAI,KAAK,GAAG,CAAC;AAAA,UACjB,CAAC;AACD,iBAAO,IAAI;AAAA,QACb;AACA,cAAM,OAAO,CAAC,EAAE,UAAU,GAAG,CAAC;AAE9B,cAAM,eAAe,YAAY,KAAK,EAAE,OAAO,OAAO,MAAM,SAAS,EAAE,CAAC;AACxE,YAAI,CAAC,aAAa,QAAQ;AACxB;AAAA,QACF;AAEA,cAAM,YAAY,EAAE,SAAS,GAAG;AAIhC,cAAM,gBAAgB,EAAE;AAAA,UACtB,aAAa,OAAO,CAAC,KAAK,SAAS,IAAI,OAAO,KAAK,MAAM,EAAE,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC;AAAA,QACpF,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,OAAO,EAAE,CAAC;AACjC,YAAI,qBAAqB,MAAM,GAAG,MAAM,aAAa,cAAc,YAAY,MAAM;AAAA,UACnF,GAAG,SAAS;AAAA,UACZ,EAAE,aAAa,EACZ,IAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,eAAe,GAAG,GAAG,CAAC,CAAC,EAC7C,UAAU,EACV,MAAM;AAAA,QACX;AACA,YAAI,oBAAoB;AACtB,cAAI,CAAC,EAAE,QAAQ,kBAAkB;AAAG,iCAAqB,CAAC,kBAAkB;AAC5E,6BAAmB,QAAQ,CAAC,UAAU,MAAM;AAC1C,gBAAI;AAAG,mBAAK,CAAC,IAAI,EAAE,UAAU,GAAG;AAChC,0BAAc,QAAQ,CAAC,MAAM;AAC3B,oBAAM,KAAK,WAAW,UAAU,CAAC;AACjC,gBAAE,KAAK,IAAI,CAACC,OAAM;AAChB,oBAAI,EAAE,IAAI,KAAK,CAAC,GAAGA,EAAC,MAAM;AAAW,oBAAE,IAAI,KAAK,CAAC,GAAGA,IAAG,EAAE,IAAI,UAAUA,EAAC,CAAC;AAAA,cAC3E,CAAC;AAAA,YACH,CAAC;AACD,gBAAI,YAAY,SAAS;AAAK,mBAAK,CAAC,EAAE,MAAM,SAAS;AAAA,UACvD,CAAC;AAAA,QACH;AAGA,cAAM,WAAW,CAAC;AAClB,cAAM,QAAQ,CAAC;AACf,uBAAe,QAAQ,OAAO,MAAM;AAClC,cAAI,MAAM,GAAG,MAAM,QAAQ,KAAK;AAChC,cAAI,MAAM;AACR,kBAAM,IAAI,KAAK,IAAI;AAAA,UACrB;AACA,iBAAO;AAAA,QACT;AACA,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAM,uBAAuB,YAAY,KAAK,CAAC,GAAG,YAAY;AAC9D,cAAI,cAAc;AAClB,cAAI,sBAAsB,mBAAmB,QAAQ;AACnD,kBAAM,kBAAkB,EAAE,SAAS,EAChC,OAAO,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAC9D,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,kBAAkB,KAAK,GAAG,GAAG,CAAC,EAC1D,MAAM;AAET,0BAAc,EAAE;AAAA,cACd;AAAA,cACA,CAAC,MACC,EAAE;AAAA,gBACA,EAAE,IAAI,EAAE,OAAO,OAAO,EAAE,qBAAqB,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,OAAO,EAAE,CAAC;AAAA,gBAC7E;AAAA,cACF,EAAE;AAAA,YACN;AAAA,UACF;AACA,cAAI,YAAY,QAAQ;AACtB,kBAAM,SAAS,KAAK,CAAC,GAAG,aAAa,SAAS,SAAS,KAAK;AAAA,UAC9D;AACA,mBAAS,CAAC,IAAI,CAAC;AACf,gBAAM,UACJ,EAAE;AAAA,YACA,IAAI;AAAA,YACJ,CAAC,GAAG,GAAG,MAAM;AACX,gBAAE,IAAI,GAAG,GAAG,CAAC;AACb,qBAAO;AAAA,YACT;AAAA,YACA,CAAC;AAAA,UACH,KAAK;AAGP,sBAAY,QAAQ,CAAC,SAAS;AAC5B,kBAAM,UAAU,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI;AACxC,gBAAI,YAAY;AAAW,gBAAE,IAAI,SAAS,CAAC,GAAG,KAAK,MAAM,OAAO;AAAA,UAClE,CAAC;AAED,cAAI,sBAAsB,mBAAmB,QAAQ;AACnD,cAAE,KAAK,sBAAsB,CAAC,OAAO;AAEnC,kBAAI,CAAC,EAAE,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,EAAE,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI,GAAG;AAC5D,sBAAM,MAAM,EAAE,IAAI,mBAAmB,CAAC,GAAG,GAAG,IAAI;AAChD,oBAAI,QAAQ;AAAW,oBAAE,IAAI,SAAS,CAAC,GAAG,GAAG,MAAM,GAAG;AAAA,cACxD;AAAA,YACF,CAAC;AAAA,UACH;AAGA,cAAI,QAAQ,SAAS,CAAC;AAEtB,cAAI,IAAI,MAAM;AACZ,kBAAM,YAAY,EAAE,KAAK,EACtB,MAAM,EAAE,WAAW,KAAK,CAAC,EAEzB,QAAQ,CAAC,GAAG,MAAM,EAAE,KAAK,EAAE,QAAQ,kBAAkB,KAAK,GAAG,GAAG,CAAC,EACjE,OAAO,CAAC,MAAM,MAAM,MAAS,EAC7B,MAAM;AACT,oBAAQ,EAAE,MAAM,UAAU;AAAA,UAC5B;AAEA,cAAI,KAAK,UAAU,GAAG;AACpB,gBAAI;AAAO,iBAAG,SAAS,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,UAAU,GAAG,KAAK,CAAC;AAAA,UAE7D,OAAO;AAML,gBAAI,OAAO;AACT,oBAAM,GAAG,MAAM,UAAU,EAAE,KAAK,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK;AAAA,YACtD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO,IAAI,QAAQ,iBAAkB;AACnC,cAAM,QAAQ,CAAC;AACf,YAAI,MAAM;AACV,YAAI,CAAC,IAAI,OAAO;AACd;AAAA,QACF;AAGA,cAAM,SAAS;AACf,cAAM,eAAe,YAAY,KAAK,EAAE,OAAO,OAAO,SAAS,CAAC;AAEhE,YAAI,CAAC,aAAa,QAAQ;AACxB;AAAA,QACF;AAEA,cAAM,MAAM;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA,OAAO,OAAO,SAAS;AACrB,gBAAI,MAAM,IAAI,MAAM,IAAI,YAAY,SAAS,EAAE,QAAQ,KAAK;AAC5D,gBAAI;AAAM,oBAAM,IAAI,KAAK,IAAI;AAC7B,mBAAO;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,MAEF,CAAC;AAAA,IACH;AACA,aAAS,eAAe,OAAO,MAAM,MAAM,OAAO,OAAO;AAEvD,YAAM,aAAa,KAAK,QAAQ,eAAe,KAAK;AACpD,YAAM,cAAc,QAAQ;AAC5B,YAAM,WAAW,GAAG,UAAU,IAAI,IAAI;AACtC,UAAI,aAAa;AAEf,cAAM,KAAK,IAAI,EAAE,IAAI,UAAU,KAAK;AACpC,eAAO,MAAM,KAAK,IAAI;AAAA,MACxB,OAAO;AACL,cAAM,MAAM,GAAG,QAAQ,IAAI,KAAK,UAAU,KAAK,CAAC;AAChD,cAAM,GAAG,GAAG,IAAI;AAAA,MAClB;AAAA,IACF;AACA,mBAAe,SACb,OACA,KACA,OACA,MACA,MACA,WACA,SACA,SACA,WAEA;AAGA,cAAQ,EAAE,MAAM,OAAO,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;AAEhE,YAAM,aAAa,KAAK,QAAQ,eAAe,KAAK;AACpD,YAAM,cAAc,QAAQ;AAC5B,YAAM,SAAS,IAAI,OAAO,IAAI,IAAI,IAAI,QAAQ,SAAS,GAAG,YAAY,WAAW,MAAM,KAAK;AAC5F,YAAM,WAAW,GAAG,UAAU,IAAI,IAAI;AACtC,YAAM,MAAM,GAAG,QAAQ,IAAI,KAAK,UAAU,KAAK,CAAC;AAGhD,UAAI,aAAa;AAEf,cAAM,MAAM,EAAE,KAAK;AACnB,cAAM,aAAa,IAAI,QAAQ,CAAC,SAAS,WAAW;AAClD,cAAI,YAAY;AAChB,cAAI,WAAW;AAAA,QACjB,CAAC;AACD,mBAAW,MAAM;AACjB,YAAI,MAAM,IAAI,QAAQ,MAAM,QAAW;AACrC,cAAI,MAAM,MAAM,IAAI,QAAQ;AAE5B,gBAAM,IAAI,QAAQ,IAAI;AACtB,gBAAM,WAAW,IAAI,IAAI;AACzB,gBAAM,KAAK,IAAI,IAAI;AAEnB,gBAAM,MAAM;AAEZ,iBAAO;AAAA,QACT;AAEA,cAAM,IAAI,QAAQ,IAAI;AACtB,cAAM,KAAK,IAAI,IAAI;AAAA,MACrB;AACA,UAAI,QAAQ,EAAE,UAAU,KAAK;AAC7B,YAAM,OAAO,CAAC;AACd,UAAI,MAAM,GAAG,GAAG,MAAM,QAAW;AAC/B,cAAM,YAAY,KAAK,QAAQ,eAAe,GAAG;AACjD,cAAM,SAAS,IAAI;AACnB,YAAI,IAAI,KAAK;AACX,cAAI,MAAM,OAAO,QAAW;AAC1B,kBAAM,MAAM;AAAA,cACV,KAAK,IAAI;AAAA,YACX;AAAA,UACF,WAAW,CAAC,WAAW;AACrB,oBAAQ;AAAA,UACV;AAAA,QACF;AACA,YAAI,UAAU,OAAO;AACnB,cAAI;AAAW,iBAAK,SAAS,IAAI;AACjC,gBAAM,GAAG,GAAG,IAAI,QAAQ,OAAO,IAAI;AAAA,QACrC,OAAO;AACL,gBAAM,GAAG,GAAG,IAAI;AAAA,QAClB;AAAA,MACF;AACA,UAAI,EAAE,SAAS,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,WAAW,MAAM,GAAG,GAAG,EAAE,IAAI,GAAG;AACjE,YAAI,WAAW,MAAM,MAAM,GAAG,GAAG;AACjC,YAAI,EAAE,SAAS,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,WAAW,MAAM,GAAG,GAAG,EAAE,IAAI,GAAG;AACjE,cAAI,CAAC,UAAU;AAEb,kBAAM,GAAG,GAAG,IAAI;AAAA,UAClB,OAAO;AACL,uBAAW,EAAE,WAAW,UAAU,UAAU,CAAC,EAC1C,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,UAAU,CAAC,CAAC,CAAC,EACnC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,MAAM,CAAC,EAClC,OAAO,KAAK,EACZ,KAAK;AACR,kBAAM,GAAG,GAAG,IAAI,SAAS,CAAC;AAAA,UAI5B;AAAA,QACF;AAAA,MACF;AACA,aAAO,MAAM,GAAG,GAAG;AAAA,IAYrB;AACA,QAAI,SAAS,CAAC,KAAK,SAAS;AAC1B,aAAO,EAAE,WAAW,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,KAAK,IAAI;AAAA,IAChE;AACA,QAAM,SAAS,CAAC,KAAK,MAAM,QACzB,EAAE,WAAW,IAAI,GAAG,IAAI,IAAI,IAAI,MAAM,GAAG,IAAI,EAAE,IAAI,KAAK,MAAM,GAAG;AACnE,QAAM,gBAAgB,CAAC,KAAK,SAC1B,EAAE,WAAW,IAAI,UAAU,IAAI,IAAI,WAAW,IAAI,IAAI,EAAE,IAAI,KAAK,IAAI,MAAM;AAE7E,aAAS,YAAY,KAAK,OAAO;AAC/B,YAAM,eAAe,CAAC;AAEtB,YAAM,QAAQ,CAAC,SAAS;AACtB,cAAM,YAAY,WAAW,KAAK,KAAK,IAAI;AAC3C,YAAI,CAAC,UAAU;AAAQ,oBAAU,KAAK,KAAK,IAAI;AAC/C,YAAI,EAAE,SAAS,IAAI;AAEnB,YAAI,EAAE,SAAS,UAAU,IAAI;AAAG,sBAAY;AAC5C,kBAAU,QAAQ,CAAC,aAAa;AAC9B,cAAI,kBAAkB,SAAS,QAAQ,aAAa,EAAE;AACtD,cAAI,mBAAmB;AAAU,8BAAkB;AACnD,mBAAS,gBAAgB,WAAW;AAClC,gBAAI,oBAAoB;AACxB,gBAAI,mBAAmB,EAAE,QAAQ,UAAU,GAAG;AAC9C,mBAAO,EAAE,WAAW,WAAW,GAAG,GAAG;AACnC,kBAAI,oBAAoB;AACxB,kBAAI,uBAAuB;AAC3B,kBAAI,kBAAkB,MAAM,WAAW,GAAG;AACxC,oCAAoB,kBAAkB,QAAQ,aAAa,EAAE;AAC7D,oCAAoB;AAAA,cACtB;AACA,kBAAI,iBAAiB,MAAM,WAAW,GAAG;AACvC,mCAAmB,iBAAiB,QAAQ,aAAa,EAAE;AAC3D,uCAAuB;AAAA,cACzB;AAEA,kCAAoB,kBAAkB,QAAQ,aAAa,EAAE;AAC7D,iCAAmB,iBAAiB,QAAQ,aAAa,EAAE;AAC3D,kBAAI,qBAAqB;AAAmB,oCAAoB;AAChE,kBAAI,oBAAoB;AAAsB,mCAAmB;AACjE,0BAAY,UAAU,OAAO,CAAC;AAAA,YAChC;AACA,gBAAI,CAAC,EAAE,WAAW,WAAW,GAAG,GAAG;AACjC,0BAAY,IAAK,qBAAqB,GAAG,iBAAiB,OAAQ,EAAE,GAAG,SAAS;AAAA,YAClF;AACA,gBAAI,EAAE,WAAW,WAAW,IAAI,gBAAgB,EAAE;AAChD,0BAAY,UAAU,QAAQ,IAAI,gBAAgB,IAAI,IAAI,iBAAiB,EAAE;AAC/E,mBAAO;AAAA,UACT;AACA,gBAAM,gBAAgB,KAAK,OAAO,IAAI,eAAe;AAErD,gBAAM,qBAAqB,KAAK,qBAAqB,CAAC,GAAG,IAAI,eAAe;AAC5E,cACE,EAAE;AAAA,YAAK,cAAc,OAAO,iBAAiB;AAAA,YAAG,CAAC,SAC/C,cAAc,KAAK,KAAK,QAAQ,OAAO,EAAE,CAAC;AAAA,UAC5C,GACA;AACA,kBAAM,IAAI,EAAE,UAAU,IAAI;AAC1B,cAAE,OAAO;AACT,cAAE,WAAW;AACb,cAAE,SAAS;AACX,cAAE,oBAAoB;AACtB,yBAAa,KAAK,CAAC;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAED,aAAO;AAAA,IACT;AACA,aAAS,WAAW,KAAK,MAAM,eAAe;AAC5C,UAAI,kBAAkB,QAAW;AAC/B,wBAAgB,KAAK,MAAM,KAAK;AAChC,eAAO,cAAc,CAAC;AACtB,wBAAgB,EAAE,KAAK,aAAa;AAAA,MACtC;AAEA,UAAI,MAAM,CAAC;AACX,YAAM,QAAQ,OAAO,KAAK,IAAI;AAE9B,UAAI,EAAE,QAAQ,KAAK,GAAG;AACpB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAM,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC;AAClD,gBAAM,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE,KAAK,aAAa,CAAC,CAAC;AAAA,QACpE;AAAA,MACF,WAAW,CAAC,iBAAiB,CAAC,cAAc;AAAQ,YAAI,KAAK,IAAI;AACjE,aAAO;AAAA,IACT;AAEA,mBAAe,SAAS,KAAK,OAAO,SAAS,SAAS,OAAO;AAM3D,YAAM,QAAQ;AAAA,QACZ,MAAM,IAAI,OAAO,SAAS;AACxB,gBAAM,SAAS,CAAC;AAChB,eAAK,OAAO,QAAQ,CAAC,cAAc;AACjC,gBAAI,WAAW,OAAO,KAAK,UAAU,QAAQ,OAAO,EAAE,CAAC;AACvD,gBAAI,KAAK,WAAW;AAClB,yBAAW,KAAK,UAAU,QAAQ;AAAA,YACpC;AACA,mBAAO,KAAK,QAAQ;AAAA,UACtB,CAAC;AACD,gBAAM,UAAU,OAAO,KAAK,KAAK,IAAI;AACrC,cACE,EAAE,KAAK,UAAU,KAAK,gBACrB,CAAC,KAAK,qBAAqB,CAAC,KAAK,kBAAkB,SACpD;AACA,gBAAI,CAAC,WAAW,CAAC,KAAK,WAAW;AAC/B,qBAAO,KAAK,KAAK,MAAM,SAAS,QAAQ,OAAO,CAAC;AAAA,YAClD;AAAA,UACF,OAAO;AACL,kBAAM,QAAQ,CAAC;AACf,gBAAI,KAAK,mBAAmB;AAC1B,mBAAK,kBAAkB,QAAQ,CAAC,cAAc;AAC5C,4BAAY,UAAU,QAAQ,OAAO,EAAE;AACvC,sBAAM,SAAS,IAAI,OAAO,KAAK,SAAS;AAAA,cAC1C,CAAC;AAAA,YACH;AACA,gBAAI,CAAC,OAAO,KAAK,KAAK,IAAI,KAAK,CAAC,KAAK,WAAW;AAC9C,kBAAI,KAAK,eAAe;AACtB;AAAA,kBACE;AAAA,kBACA,KAAK;AAAA,kBACL,MAAM;AAAA,oBACJ;AAAA,oBACA,KAAK;AAAA,oBACL;AAAA,oBACA;AAAA,oBACA;AAAA,oBACA;AAAA,oBACA,KAAK;AAAA,oBACL;AAAA;AAAA,kBAEF;AAAA,gBACF;AAAA,cACF,OAAO;AACL;AAAA,kBACE;AAAA,kBACA,KAAK;AAAA,kBACL,MAAM;AAAA,oBACJ;AAAA,oBACA,KAAK;AAAA,oBACL;AAAA,oBACA;AAAA,oBACA,KAAK;AAAA,oBACL;AAAA,oBACA;AAAA,oBACA;AAAA,oBACA,KAAK;AAAA;AAAA,kBAEP;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,QAAQ,SAAS;AACjC,YAAM,OAAO,QAAQ,OAAO,KAAK,GAAG,GAAG,OAAO;AAC9C,aAAO;AAAA,IACT;AACA,aAAS,eAAe,OAAO,WAAW;AACxC,UAAI,QAAQ;AAEZ,YAAM,OAAO,IAAI,OAAO,GAAG,SAAS,SAAS;AAE7C,UAAI,QAAQ;AAEZ,UAAK,QAAQ,MAAM,MAAM,IAAI,GAAI;AAC/B,gBAAQ,MAAM,CAAC;AAAA,MACjB;AACA,aAAO,SAAS,KAAK;AAAA,IACvB;AAEA,mBAAe,sBACb,KACA,MACA,QACA,SACA,SACA,QACA,SACA,OACA,WAEA;AACA,UAAI,OAAO,SAAS,QAAQ,OAAO;AACnC,YAAM,eAAe;AACrB,UAAI,QAAQ;AAEZ,YAAM,SAAS,MAAM;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,MAEF;AACA,UAAI,QAAQ;AACV,gBAAQ,eAAe,QAAQ,QAAQ,SAAS,IAAI;AACpD,gBAAQ,QAAQ,YAAY,EAAE,SAAS,OAAO,SAAS,GAAG;AAAA,MAC5D;AACA,qBAAe,OAAO,MAAM,cAAc,MAAM,MAAM;AAEtD,aAAO;AAAA,IACT;AAEA,mBAAe,sBACb,KACA,MACA,QACA,SACA,QACA,SACA,cACA,OAEA;AACA,UAAI,OAAO,SAAS,QAAQ,OAAO;AACnC,YAAM,eAAe;AAErB,YAAM,SAAS,MAAM;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,MAEF;AACA,UAAI,QAAQ;AAEV,cAAM,UAAU,OAAO,KAAK,IAAI;AAChC;AAAA;AAAA,UAEE,WACA,QAAQ,MAAM,IAAI,OAAO,IAAI,IAAI,GAAG,QAAQ,SAAS,KAAK,CAAC;AAAA,UAC3D;AAEA,iBAAO;AAAA,QACT;AAAO,kBAAQ,QAAQ,YAAY,QAAQ,SAAS;AAAA,MACtD,WAAW,cAAc;AACvB,gBAAQ,QAAQ,YAAY,QAAQ,SAAS;AAAA,MAC/C;AACA,qBAAe,OAAO,MAAM,cAAc,MAAM,MAAM;AAEtD,aAAO;AAAA,IACT;AAAA;AAAA;;;AC3qBA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;",
  "names": ["ContextReader", "getSlug", "i", "createSlug", "escapeChars", "require_speakingurl", "schema", "f"]
}
